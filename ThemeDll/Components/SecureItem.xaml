<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
                    xmlns:converters="clr-namespace:QuickZip.Converters"
                    xmlns:helpers="clr-namespace:PasswordBoss.Helpers"
                    xmlns:behaviors="clr-namespace:PasswordBoss.Behaviors">
    <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
    <converters:StringToUppercaseConverter x:Key="StringToUppercase" />
    <converters:NodeLevelToMargineConverter x:Key="NodeLevelToMargine"/>
    <telerik:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibility"/>

    

    <DataTemplate  x:Key="ListSecureItemTemplate">
        <Border x:Name="mainBorder" Margin="0" Padding="5 0 14 0" Height="51"
                CornerRadius="2" Background="{DynamicResource WhiteColor}" HorizontalAlignment="Stretch">
            <Border.Style>
                <Style>
                    <Setter Property="Border.BorderThickness" Value="0"/>
                    <Setter Property="Border.BorderBrush" Value="Transparent"/>
                    <Style.Triggers>
                        <Trigger Property="Border.IsMouseOver" Value="True">
                            <Setter Property="Border.BorderBrush" Value="{DynamicResource PasswordBossGreenColor}" />
                            <Setter Property="Border.BorderThickness" Value="1" />
                        </Trigger>                     
                    </Style.Triggers>
                </Style>
            </Border.Style>
          
            <Grid x:Name="gridlist" ContextMenu="{x:Null}"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"     Background="{DynamicResource WhiteColor}" UseLayoutRounding="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition MinWidth="280" Width="*"/>
                    <ColumnDefinition Width="130"/>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition  Width="50"/>
                    <ColumnDefinition  Width="50"/>
                    <ColumnDefinition  Width="50"/>
                </Grid.ColumnDefinitions>

                <Grid Background="{Binding Background}" Grid.Column="0"  Margin="0 0 12 0" HorizontalAlignment="Center" Width="90" Height="45"  VerticalAlignment="Center">
                    <Image x:Name="dataImg"  Visibility="{Binding IsDefaultImage,Converter={StaticResource InvertedBooleanToVisibility}}"
                            Source="{Binding Image}" Stretch="Fill" >
                    </Image>
                    <Image   MaxHeight="35" Width="90" Visibility="{Binding IsDefaultImage,Converter={StaticResource BoolToVisibility}}"
                            Source="{Binding Image}" Stretch="Uniform" VerticalAlignment="Center" >
                    </Image>
                </Grid>
                <telerik:RadDropDownButton x:Name="settingsButton" Style="{DynamicResource RadDropDownButtonWithArowStyle}" Grid.Column="1" Height="30" Width="30" Margin="12 0" VerticalAlignment="Center" HorizontalAlignment="Center"
                           RenderOptions.BitmapScalingMode="HighQuality" Visibility="Hidden" Background="Transparent"
                           BorderThickness="0" IsOpen="{Binding ShowItemMenu,Mode=TwoWay}">
                    <telerik:RadDropDownButton.Content>
                        <Image Height="30" Width="30"  ContextMenu="{x:Null}" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="HighQuality">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="{DynamicResource menu_grey}"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="{DynamicResource menu_green}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </telerik:RadDropDownButton.Content>
                    <telerik:RadDropDownButton.DropDownContent>
                        <ListBox ItemsSource="{Binding Actions}"             ItemContainerStyle="{DynamicResource SecureItemsListBoxItemStyle}"  BorderThickness="0" >
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <telerik:RadMenuItem  HorizontalAlignment="Stretch" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </telerik:RadDropDownButton.DropDownContent>
                </telerik:RadDropDownButton>
                <!--</Border>-->

                <StackPanel x:Name="LeftPartOfItemGrid" Grid.Column="2" Background="Transparent" VerticalAlignment="Center" Margin="0 0 12 0" >

                    <Grid Margin="3 0 0 0">
                        <TextBlock x:Name="dataTb" HorizontalAlignment="Left" Width="260" 
                                Foreground="{DynamicResource PasswordBossBlackBackgroundColor}" TextWrapping="Wrap" TextAlignment="Left"
                                Padding="0,0,0,0" VerticalAlignment="Bottom" FontSize="11pt" FontWeight="Bold" 
                                FontFamily="{DynamicResource ProximaRegular}" Text="{Binding Name}" />
                        <TextBox x:Name="editDataTb" HorizontalAlignment="Left" Width="260" Margin="-4 0 0 0"
                                Foreground="{DynamicResource PasswordBossBlackBackgroundColor}" TextWrapping="Wrap" TextAlignment="Left" Style="{DynamicResource TextBoxTemplate}" Grid.RowSpan="2"
                                Padding="0" VerticalAlignment="Bottom" FontSize="11pt" FontWeight="Bold" 
                                FontFamily="{DynamicResource ProximaRegular}" Text="{Binding Name}" Visibility="Collapsed" />
                    </Grid>
                    <TextBlock x:Name="UsernameTextBlock" HorizontalAlignment="Left" TextAlignment="Left" Margin="3 2 0 0"
                            Foreground="{DynamicResource LightGrayTextForegroundColor}" Grid.Column="0" Grid.Row="2" 
                            Padding="0,0,0,0" VerticalAlignment="Top" FontSize="10pt" FontWeight="Normal"   TextWrapping="Wrap"
                            FontFamily="{DynamicResource ProximaRegular}" Text="{Binding ListViewSecondName}" />

                </StackPanel>

                <Grid x:Name="lastUsedGrid"  HorizontalAlignment="Left" Grid.Column="3" Margin="0 0 12 0" Background="Transparent" Visibility="Collapsed" >
                    <StackPanel VerticalAlignment="Center" Visibility="{Binding ShowLastModifiedDate,Converter={StaticResource InvertedBooleanToVisibility}}">

                        <TextBlock HorizontalAlignment="Left" Visibility="{Binding IsWebSite,Converter={StaticResource BoolToVisibility}}" Foreground="{DynamicResource PasswordBossBlackBackgroundColor}" TextWrapping="Wrap" TextAlignment="Left"
                                Padding="0,0,0,0" VerticalAlignment="Bottom" FontSize="10pt" FontWeight="Thin" 
                                FontFamily="{DynamicResource ProximaRegular}" Text="{DynamicResource LastUsedAndroidSort}" />



                        <TextBlock  Visibility="{Binding IsWebSite,Converter={StaticResource BoolToVisibility}}" HorizontalAlignment="Left" TextAlignment="Left"
                            Foreground="{DynamicResource LightGrayTextForegroundColor}" Grid.Column="0" Grid.Row="2"  
                            Padding="0,2,0,0" VerticalAlignment="Top" FontSize="10pt" TextWrapping="Wrap" FontWeight="Thin" 
                            FontFamily="{DynamicResource ProximaRegular}" Text="{Binding LastAcceessTime}" />

                    </StackPanel>
                    <StackPanel VerticalAlignment="Center"  Visibility="{Binding ShowLastModifiedDate,Converter={StaticResource BoolToVisibility}}">
                        
                        <TextBlock HorizontalAlignment="Left" Foreground="{DynamicResource PasswordBossBlackBackgroundColor}" TextWrapping="Wrap" TextAlignment="Left"
                                Padding="0,0,0,0" VerticalAlignment="Bottom" FontSize="10pt" FontWeight="Thin" 
                                FontFamily="{DynamicResource ProximaRegular}" Text="{DynamicResource MenuLastModified}" />

                        <TextBlock 
                       HorizontalAlignment="Left" TextAlignment="Left"
                            Foreground="{DynamicResource LightGrayTextForegroundColor}" Grid.Column="0" Grid.Row="2"  
                            Padding="0,2,0,0" VerticalAlignment="Top" FontSize="10pt" TextWrapping="Wrap" FontWeight="Thin" 
                            FontFamily="{DynamicResource ProximaRegular}" Text="{Binding LastModifiedDate,StringFormat='{}{0:MMM yyyy}'}" />
                    </StackPanel>
                </Grid>


                <Image Visibility="{Binding Shared, Converter={StaticResource BoolToVisibility}}" x:Name="listBoxShare"  Margin="12 0"  Grid.Column="4"  Width="22" Height="18" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="HighQuality"  ToolTip="{DynamicResource Sharing}" Source="{DynamicResource imgSharePeopleHover}"/>
                <Image  Visibility="{Binding Favorite, Converter={StaticResource BoolToVisibility}}" Grid.Column="5" Margin="12 0" x:Name="favoritesGridImage" Source="{DynamicResource star_green_21x20}"  Width="21" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center"  ToolTip="{DynamicResource Favorite}"/>
                <Image Visibility="{Binding HasNote, Converter={StaticResource BoolToVisibility}}" x:Name="notesGridImage" Margin="12 0"  Grid.Column="6"  ToolTip="{DynamicResource Notes}" Source="{DynamicResource imgNotes}" Width="17" Height="20" />

                <Border x:Name="DeleteImageBorder" Visibility="Hidden" Margin="12 0" Grid.Column="7" Background="Transparent" Cursor="Hand">
                    <Border Height="26" Width="26" BorderBrush="{DynamicResource LightGrayTextForegroundColor}" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding DeleteItemCommand}" CommandParameter="{Binding Id}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.BorderThickness" Value="0"/>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.BorderThickness" Value="1"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Image HorizontalAlignment="Center" VerticalAlignment="Center" Height="20" Width="20" Source="{DynamicResource imgTrashMedium}" RenderOptions.BitmapScalingMode="HighQuality"  ToolTip="{DynamicResource Delete}" />
                    </Border>
                </Border>
            </Grid>
            <Border.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding DoubleClickCommand}" />
            </Border.InputBindings>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=mainBorder}" Value="True">
                <Setter Property="Visibility" TargetName="settingsButton" Value="Visible"/>
                <Setter Property="Visibility" TargetName="DeleteImageBorder" Value="Visible" />
                <!--<Setter Property="Visibility" TargetName="FavoritesImageBorder" Value="Visible" />-->
                <Setter Property="Visibility" TargetName="settingsButton" Value="Visible" />
                <Setter Property="Visibility" TargetName="lastUsedGrid" Value="Visible" />
            </DataTrigger>

            <DataTrigger Binding="{Binding IsMouseOver, ElementName=dataTb}" Value="True">
                <Setter Property="Visibility" TargetName="editDataTb" Value="Visible"/>
                <Setter Property="Visibility" TargetName="dataTb" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsMouseOver, ElementName=editDataTb}" Value="True">
                <Setter Property="Visibility" TargetName="dataTb" Value="Collapsed"/>
                <Setter Property="Visibility" TargetName="editDataTb" Value="Visible"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" Value="True">
                <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource PasswordBossGreenColor}"/>
                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1"/>
            </DataTrigger>
            <!--<MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type telerik:RadTreeViewItem}, Mode=FindAncestor}}" Value="True" />
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type telerik:RadTreeViewItem}, Mode=FindAncestor}}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource WhiteColor}" />
                </MultiDataTrigger>-->
        </DataTemplate.Triggers>

    </DataTemplate>

    <DataTemplate  x:Key="TileSecureItemTemplate">
        <Border x:Name="mainBorder" Width="142" BorderBrush="Transparent" BorderThickness="1" Margin="0,0,15,10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="75"/>
                    <RowDefinition Height="23"/>
                </Grid.RowDefinitions>
                <Grid Background="{DynamicResource WhiteColor}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <!--<Image x:Name="dataImg" Grid.Column="0"  Margin="6" HorizontalAlignment="Center" VerticalAlignment="Center"
                            Source="{Binding Image}"/>-->
                    <Grid Background="{Binding Background}" Grid.Column="0"  Margin="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  >
                        <Image x:Name="dataImg"  Visibility="{Binding IsDefaultImage,Converter={StaticResource InvertedBooleanToVisibility}}"
                            Source="{Binding Image}" Stretch="Fill" >
                        </Image>
                        <Image   MaxHeight="50" VerticalAlignment="Center" Visibility="{Binding IsDefaultImage,Converter={StaticResource BoolToVisibility}}"
                            Source="{Binding Image}" Stretch="Uniform" >
                        </Image>
                    </Grid>

                    <Image Margin="1" Visibility="{Binding Favorite, Converter={StaticResource BoolToVisibility}}" HorizontalAlignment="Left" VerticalAlignment="Top" 
                            Source="{DynamicResource star_green_21x20}"  Width="17" Height="16"  ToolTip="{DynamicResource Favorite}"/>

                    <Image Margin="1"   Grid.Column="4"  Width="20" Height="16" Stretch="Uniform" VerticalAlignment="Top" HorizontalAlignment="Right" RenderOptions.BitmapScalingMode="HighQuality"  ToolTip="{DynamicResource Sharing}" Source="{DynamicResource imgSharePeopleHover}"/>
                </Grid>

                <Border x:Name="MouseOverBorder" Grid.RowSpan="2" Visibility="Collapsed" Opacity="0.45" Background="{DynamicResource PasswordBossGreenColor}"/>

                <TextBlock x:Name="txtName" VerticalAlignment="Top" HorizontalAlignment="Center" Grid.Row="1" Margin="0 5 0 0"
                                Foreground="{DynamicResource LightGrayTextForegroundColor}" TextWrapping="Wrap" TextAlignment="Center"
                                FontSize="10pt" FontWeight="Normal"
                                FontFamily="{DynamicResource ProximaRegular}" Text="{Binding Name}" />

                <StackPanel x:Name="MouseOverPanel" Visibility="Collapsed" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0 25 0 0">

                    <telerik:RadDropDownButton x:Name="settingsButton" Style="{DynamicResource RadDropDownButtonWithArowStyle}" 
                                                   Grid.Column="1"  Margin="12 0" IsOpen="{Binding ShowItemMenu,Mode=TwoWay}"
                           BorderThickness="0">
                        <telerik:RadDropDownButton.Content>
                            <Image Height="35" Width="35"  ContextMenu="{x:Null}" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="HighQuality">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Source" Value="{DynamicResource menu_green}"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Source" Value="{DynamicResource menu_white}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </telerik:RadDropDownButton.Content>
                        <telerik:RadDropDownButton.DropDownContent>
                            <ListBox ItemsSource="{Binding Actions}"   ItemContainerStyle="{DynamicResource SecureItemsListBoxItemStyle}"  BorderThickness="0" >
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <telerik:RadMenuItem Style="{DynamicResource RadMenuItemStyle}" Width="200"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </telerik:RadDropDownButton.DropDownContent>
                    </telerik:RadDropDownButton>

                    <Border   Margin="12 0" VerticalAlignment="Center" HorizontalAlignment="Center"
                           RenderOptions.BitmapScalingMode="HighQuality" Background="Transparent" Visibility="{Binding IsWebSite,Converter={StaticResource BoolToVisibility}}"
                           BorderThickness="0" Tag="{Binding DataContext,RelativeSource={RelativeSource Mode=Self}}">
                        <Image Height="41" Width="41" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="HighQuality">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="{DynamicResource open_site_green}"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="{DynamicResource open_site_white}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Border>
                </StackPanel>
            </Grid>
            <Border.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding DoubleClickCommand}" />
            </Border.InputBindings>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type telerik:RadTreeViewItem}, Mode=FindAncestor}}" Value="True">
                <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource PasswordBossGreenColor}"/>
                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1"/>
            </DataTrigger>
            <Trigger Property="Border.IsMouseOver" Value="True">
                <Setter TargetName="MouseOverPanel" Property="Visibility" Value="Visible"/>
                <Setter TargetName="MouseOverBorder" Property="Visibility" Value="Visible"/>
                <Setter TargetName="txtName" Property="Foreground" Value="White"/>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!--<DataTemplate x:Key="SecureItemTemplate">
        <ContentControl Content="{Binding }">
            <ContentControl.Style>
                <Style TargetType="{x:Type ContentControl}">
                    <Setter Property="ContentTemplate" Value="{StaticResource ListSecureItemTemplate}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext.IsTileView,RelativeSource={RelativeSource FindAncestor,  AncestorType={x:Type telerik:RadTreeView}}}" Value="True">
                            <Setter Property="ContentTemplate" Value="{StaticResource TileSecureItemTemplate}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding DoubleClickCommand}"  />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ContentControl>
    </DataTemplate>-->

    <Style x:Key="SIWithContextMenuListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="0,3,0,3"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
            

    <Style x:Key="SecureItemsListBoxStyle" TargetType="{x:Type ListBox}" >
        <Setter Property="ContextMenu" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="SelectionMode" Value="Multiple"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource SIWithContextMenuListBoxItemStyle}"/>       
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.IsTileView,RelativeSource={RelativeSource FindAncestor,  AncestorType={x:Type telerik:RadTreeView}}}" Value="True">
                <Setter Property="ItemsPanel"
                              Value="{DynamicResource TreeViewWrapPanelTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.IsTileView,RelativeSource={RelativeSource FindAncestor,  AncestorType={x:Type telerik:RadTreeView}}}" Value="False">
                <Setter Property="ItemsPanel"
                              Value="{DynamicResource TreeViewPanelTemplate}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding DataContext.IsTileView,RelativeSource={RelativeSource FindAncestor,  AncestorType={x:Type telerik:RadTreeView}}}" Value="True">
                <Setter Property="ItemTemplate"
                              Value="{DynamicResource TileSecureItemTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.IsTileView,RelativeSource={RelativeSource FindAncestor,  AncestorType={x:Type telerik:RadTreeView}}}" Value="False">
                <Setter Property="ItemTemplate"
                              Value="{DynamicResource ListSecureItemTemplate}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="SecureItemsDragTemplate" >
        <StackPanel Background="Transparent">
            <Border BorderBrush="#3F008769" BorderThickness="1" Background="#3F00A785"  HorizontalAlignment="Left" Padding="10">
                <Grid HorizontalAlignment="Left">
                    <Grid  HorizontalAlignment="Left" Visibility="{Binding HasOne,Converter={StaticResource BoolToVisibility}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid  Opacity="0.75" Width="60" Height="30" Background="{Binding CurrentDraggedItem[0].Background}"   >
                            <Image x:Name="dataImg"  Visibility="{Binding CurrentDraggedItem[0].IsDefaultImage,Converter={StaticResource InvertedBooleanToVisibility}}"
                                    Source="{Binding CurrentDraggedItem[0].Image}" Stretch="Fill" >
                            </Image>
                            <Image   MaxHeight="25" VerticalAlignment="Center" Visibility="{Binding CurrentDraggedItem[0].IsDefaultImage,Converter={StaticResource BoolToVisibility}}"
                                    Source="{Binding CurrentDraggedItem[0].Image}" Stretch="Uniform" >
                            </Image>
                        </Grid>
                    </Grid>
                    <Grid HorizontalAlignment="Left" Opacity="0.75" Width="60" Height="30"  Background="{DynamicResource SettingsGreenColor}" Visibility="{Binding HasOne,Converter={StaticResource InvertedBooleanToVisibility}}">
                        <TextBlock Text="{Binding CurrentDraggedItem.Count}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource PasswordBossBlackBackgroundColor}"
                                         FontSize="15" FontWeight="Bold"   
                                        FontFamily="{DynamicResource ProximaRegular}" />
                    </Grid>
                </Grid>
            </Border>

            <Border BorderBrush="{DynamicResource SettingsLightGrayBorderColor}" BorderThickness="1" Margin="0 2 0 0" CornerRadius="1" Background="White"  Visibility="{Binding IsValidDrop,Converter={StaticResource BoolToVisibility}}">
                <StackPanel Orientation="Horizontal" >
                    <TextBlock Text="Move To "   Foreground="{DynamicResource PasswordBossBlackBackgroundColor}"
                             FontSize="11" FontWeight="Normal"  Margin="5 5 0 5"
                            FontFamily="{DynamicResource ProximaRegular}"/>
                    <TextBlock Text="{Binding CurrentDraggedOverItem.FolderName}"  Foreground="{DynamicResource SettingsLightGrayBorderColor}"
                             FontSize="11" FontWeight="Normal"   TextWrapping="Wrap" Margin="0 5 5 5"
                            FontFamily="{DynamicResource ProximaRegular}" />
                </StackPanel>
            </Border>
        </StackPanel>
    </DataTemplate>


</ResourceDictionary>