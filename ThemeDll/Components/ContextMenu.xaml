<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
                    xmlns:behavior="clr-namespace:PasswordBoss.Behaviors">
    
    <Style TargetType="{x:Type telerik:RadContextMenu}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource LightGrayTextForegroundColor}"/>
        <Setter Property="FontFamily" Value="{DynamicResource ProximaRegular}"/>
        <Setter Property="FontSize" Value="10pt"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SettingsLightGrayBorderColor}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadContextMenu}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PopupHostStates">
                                <VisualState x:Name="Standalone"/>
                                <VisualState x:Name="Hosted">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="TemplateBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PopupContentElement">
                            <Border x:Name="TemplateBorder" CornerRadius="{DynamicResource CommonCornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" Background="{TemplateBinding Background}">
                                <Grid>
                                    <Border x:Name="IconSeparatorBackground" BorderBrush="#FF848484" BorderThickness="0" Background="Transparent" HorizontalAlignment="Left" Width="{Binding IconColumnWidth, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <ScrollViewer x:Name="PART_ScrollViewer" telerik:SharedSizeScope.IsSharedSizeScope="True">
                                        <ScrollViewer.Style>
                                            <Style TargetType="{x:Type ScrollViewer}">
                                                <Setter Property="Padding" Value="0"/>
                                                <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
                                                <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                                                <Setter Property="CanContentScroll" Value="True"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                            <Grid SnapsToDevicePixels="True">
                                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}"/>
                                                                <RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineUpCommand" Focusable="False" VerticalAlignment="Top">
                                                                    <RepeatButton.Style>
                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                            <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                                                                            <VisualStateManager.VisualStateGroups>
                                                                                                <VisualStateGroup x:Name="CommonStates">
                                                                                                    <VisualState x:Name="Normal"/>
                                                                                                    <VisualState x:Name="Pressed">
                                                                                                        <Storyboard>
                                                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                        <SolidColorBrush Color="Black"/>
                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                        <SolidColorBrush Color="White"/>
                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                        <Thickness>1,3,1,1</Thickness>
                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualState>
                                                                                                    <VisualState x:Name="Disabled">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
                                                                                                        </Storyboard>
                                                                                                    </VisualState>
                                                                                                </VisualStateGroup>
                                                                                                <VisualStateGroup x:Name="FocusStates">
                                                                                                    <VisualState x:Name="Focused"/>
                                                                                                    <VisualState x:Name="Unfocused"/>
                                                                                                </VisualStateGroup>
                                                                                            </VisualStateManager.VisualStateGroups>
                                                                                            <Grid x:Name="ContentContainer" Margin="1,2">
                                                                                                <Path x:Name="BackgroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="White" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
                                                                                                <Path x:Name="ForegroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="Black" Height="4" Margin="0,1" Stretch="None" Width="7"/>
                                                                                            </Grid>
                                                                                        </Border>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Style.BasedOn>
                                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                                    <Setter Property="Interval" Value="50"/>
                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                    <Setter Property="MinWidth" Value="0"/>
                                                                                    <Setter Property="MinHeight" Value="0"/>
                                                                                    <Setter Property="Background" Value="#FFDEDEDE"/>
                                                                                    <Setter Property="BorderBrush" Value="White"/>
                                                                                    <Setter Property="BorderThickness" Value="0"/>
                                                                                    <Setter Property="ClickMode" Value="Hover"/>
                                                                                </Style>
                                                                            </Style.BasedOn>
                                                                        </Style>
                                                                    </RepeatButton.Style>
                                                                    <RepeatButton.Visibility>
                                                                        <MultiBinding ConverterParameter="0" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
                                                                            <MultiBinding.Converter>
                                                                                <MenuScrollingVisibilityConverter/>
                                                                            </MultiBinding.Converter>
                                                                            <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                            <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                            <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                            <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                        </MultiBinding>
                                                                    </RepeatButton.Visibility>
                                                                </RepeatButton>
                                                                <RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineDownCommand" Focusable="False" VerticalAlignment="Bottom">
                                                                    <RepeatButton.Style>
                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                            <Setter Property="BorderThickness" Value="0,1,0,0"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                                                                            <VisualStateManager.VisualStateGroups>
                                                                                                <VisualStateGroup x:Name="CommonStates">
                                                                                                    <VisualState x:Name="Normal"/>
                                                                                                    <VisualState x:Name="Pressed">
                                                                                                        <Storyboard>
                                                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                        <SolidColorBrush Color="Black"/>
                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                        <SolidColorBrush Color="White"/>
                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
                                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                                        <Thickness>1,3,1,1</Thickness>
                                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                                </DiscreteObjectKeyFrame>
                                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                                        </Storyboard>
                                                                                                    </VisualState>
                                                                                                    <VisualState x:Name="Disabled">
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
                                                                                                        </Storyboard>
                                                                                                    </VisualState>
                                                                                                </VisualStateGroup>
                                                                                                <VisualStateGroup x:Name="FocusStates">
                                                                                                    <VisualState x:Name="Focused"/>
                                                                                                    <VisualState x:Name="Unfocused"/>
                                                                                                </VisualStateGroup>
                                                                                            </VisualStateManager.VisualStateGroups>
                                                                                            <Grid x:Name="ContentContainer" Margin="1,2">
                                                                                                <Path x:Name="BackgroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="White" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
                                                                                                <Path x:Name="ForegroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="Black" Height="4" Margin="0,1" Stretch="None" Width="7"/>
                                                                                            </Grid>
                                                                                        </Border>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Style.BasedOn>
                                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                                    <Setter Property="Interval" Value="50"/>
                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                    <Setter Property="MinWidth" Value="0"/>
                                                                                    <Setter Property="MinHeight" Value="0"/>
                                                                                    <Setter Property="Background" Value="#FFDEDEDE"/>
                                                                                    <Setter Property="BorderBrush" Value="White"/>
                                                                                    <Setter Property="BorderThickness" Value="0"/>
                                                                                    <Setter Property="ClickMode" Value="Hover"/>
                                                                                </Style>
                                                                            </Style.BasedOn>
                                                                        </Style>
                                                                    </RepeatButton.Style>
                                                                    <RepeatButton.Visibility>
                                                                        <MultiBinding ConverterParameter="100" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
                                                                            <MultiBinding.Converter>
                                                                                <MenuScrollingVisibilityConverter/>
                                                                            </MultiBinding.Converter>
                                                                            <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                            <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                            <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                            <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                        </MultiBinding>
                                                                    </RepeatButton.Visibility>
                                                                </RepeatButton>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="PanningMode" Value="None"/>
                                            </Style>
                                        </ScrollViewer.Style>
                                        <Grid>
                                            <ItemsPresenter  />
                                        </Grid>
                                    </ScrollViewer>
                                </Grid>
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="telerik:AnimationManager.AnimationSelector">
                <Setter.Value>
                    <telerik:AnimationSelector>
                        <telerik:SlideAnimation AnimationName="Expand" Direction="In" Duration="-10675199.-2:-48:-5.477" Easing="{x:Null}" Orientation="Vertical" PixelsToAnimate="NaN" SlideMode="Top" SpeedRatio="0" TargetElementName="PopupContentElement"/>
                    </telerik:AnimationSelector>
                </Setter.Value>
            </Setter>-->
    </Style>
    
    <ControlTemplate x:Key="RadMenuItemControlTemplate" TargetType="{x:Type telerik:RadMenuItem}">
        <Grid x:Name="RootElement">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="SubMenuOpen">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Highlighted">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentGrid"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused"/>
                    <VisualState x:Name="Focused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckedStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked"/>
                    <VisualState x:Name="HideIcon">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="RoleStates">
                    <VisualState x:Name="TopLevelItem">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>-2,0,-7,0</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="TopLevelHeader">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>-2,0,-7,0</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="SubmenuItem"/>
                    <VisualState x:Name="SubmenuHeader">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ExpandIcon">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Separator"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Horizontal"/>
                    <VisualState x:Name="Vertical"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ChildrenStates">
                    <VisualState x:Name="HasChildren"/>
                    <VisualState x:Name="NoChildren"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="HeaderStates">
                    <VisualState x:Name="VisibleHeader"/>
                    <VisualState x:Name="EmptyHeader">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="Icon">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>5,3,4,3</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Content">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="InputGestureTextStates">
                    <VisualState x:Name="EmptyInputGestureText"/>
                    <VisualState x:Name="VisibleInputGestureText">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_InputGestureText">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
            <Grid x:Name="ContentGrid" Margin="0" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="25"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto" MinWidth="40"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="HighlightVisual" BorderThickness="0" Background="{DynamicResource MainWindowGrayBackgroundColor}" Grid.ColumnSpan="4" CornerRadius="1" Opacity="0">
                    <Border x:Name="HighlightInnerBorderVisual" BorderBrush="White" BorderThickness="0" CornerRadius="0"/>
                </Border>
                <Grid x:Name="IconHost" Margin="0" Width="{TemplateBinding IconColumnWidth}">
                    <Path x:Name="Tick" Data="M4,7.1L5.7,7.2 7.4,9.1 12,2.4 13.2,2 7.3,13.8z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Height="16" Margin="0 0 4 0 " Visibility="Collapsed" Width="16"/>
                    <ContentPresenter x:Name="Icon" ContentTemplate="{TemplateBinding IconTemplate}" VerticalAlignment="Center" Content="{TemplateBinding Icon}" Margin="5,3,4,3"/>
                </Grid>
                <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="Bottom"/>
                <telerik:SharedSizeContentPresenter x:Name="PART_InputGestureText" Content="{TemplateBinding InputGestureText}" Grid.Column="2" Margin="40,3,3,3" SharedSizeGroupWidth="IGTColumn" Visibility="Collapsed"/>
                <telerik:SharedSizeContentPresenter Grid.Column="3" HorizontalAlignment="Right" SharedSizeGroupWidth="ExpandIconColumn">
                    <Grid x:Name="ExpandIcon" Height="19" Margin="0,0,2,0" Visibility="Collapsed" Width="16">
                        <Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="White" Margin="6,7,6,5"/>
                        <Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="{DynamicResource LightGrayTextForegroundColor}" Margin="6"/>
                    </Grid>
                </telerik:SharedSizeContentPresenter>
            </Grid>
            <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-1" IsOpen="{TemplateBinding IsSubmenuOpen}" VerticalOffset="-1">
                <Grid Height="{TemplateBinding DropDownHeight}" Width="{TemplateBinding DropDownWidth}">
                    <Grid x:Name="PopupContentElement">
                        <Border BorderBrush="{DynamicResource SettingsLightGrayBorderColor}" BorderThickness="1" Background="White">
                            <Grid MaxHeight="300">
                                <Border x:Name="IconSeparatorBackground" BorderBrush="#FF848484" BorderThickness="0" Background="Transparent" HorizontalAlignment="Left" Width="{Binding IconColumnWidth, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <ScrollViewer x:Name="PART_ScrollViewer" telerik:SharedSizeScope.IsSharedSizeScope="True">
                                    <!--<ScrollViewer.Style>
                                        <Style TargetType="{x:Type ScrollViewer}">
                                            <Setter Property="Padding" Value="0"/>
                                            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
                                            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                                            <Setter Property="CanContentScroll" Value="True"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                        <Grid SnapsToDevicePixels="True">
                                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}"/>
                                                            <RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineUpCommand" Focusable="False" VerticalAlignment="Top">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                <VisualState x:Name="Normal"/>
                                                                                                <VisualState x:Name="Pressed">
                                                                                                    <Storyboard>
                                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                    <SolidColorBrush Color="Black"/>
                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                    <SolidColorBrush Color="White"/>
                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                    <Thickness>1,3,1,1</Thickness>
                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Disabled">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                            </VisualStateGroup>
                                                                                            <VisualStateGroup x:Name="FocusStates">
                                                                                                <VisualState x:Name="Focused"/>
                                                                                                <VisualState x:Name="Unfocused"/>
                                                                                            </VisualStateGroup>
                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                        <Grid x:Name="ContentContainer" Margin="1,2">
                                                                                            <Path x:Name="BackgroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="White" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
                                                                                            <Path x:Name="ForegroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="Black" Height="4" Margin="0,1" Stretch="None" Width="7"/>
                                                                                        </Grid>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Style.BasedOn>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="Interval" Value="50"/>
                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                <Setter Property="MinWidth" Value="0"/>
                                                                                <Setter Property="MinHeight" Value="0"/>
                                                                                <Setter Property="Background" Value="#FFDEDEDE"/>
                                                                                <Setter Property="BorderBrush" Value="White"/>
                                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                                <Setter Property="ClickMode" Value="Hover"/>
                                                                            </Style>
                                                                        </Style.BasedOn>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                                <RepeatButton.Visibility>
                                                                    <MultiBinding ConverterParameter="0" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
                                                                        <MultiBinding.Converter>
                                                                            <MenuScrollingVisibilityConverter/>
                                                                        </MultiBinding.Converter>
                                                                        <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                        <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                        <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                        <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                    </MultiBinding>
                                                                </RepeatButton.Visibility>
                                                            </RepeatButton>
                                                            <RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineDownCommand" Focusable="False" VerticalAlignment="Bottom">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="BorderThickness" Value="0,1,0,0"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                <VisualState x:Name="Normal"/>
                                                                                                <VisualState x:Name="Pressed">
                                                                                                    <Storyboard>
                                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                    <SolidColorBrush Color="Black"/>
                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                    <SolidColorBrush Color="White"/>
                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                    <Thickness>1,3,1,1</Thickness>
                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Disabled">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                            </VisualStateGroup>
                                                                                            <VisualStateGroup x:Name="FocusStates">
                                                                                                <VisualState x:Name="Focused"/>
                                                                                                <VisualState x:Name="Unfocused"/>
                                                                                            </VisualStateGroup>
                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                        <Grid x:Name="ContentContainer" Margin="1,2">
                                                                                            <Path x:Name="BackgroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="White" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
                                                                                            <Path x:Name="ForegroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="Black" Height="4" Margin="0,1" Stretch="None" Width="7"/>
                                                                                        </Grid>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Style.BasedOn>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="Interval" Value="50"/>
                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                <Setter Property="MinWidth" Value="0"/>
                                                                                <Setter Property="MinHeight" Value="0"/>
                                                                                <Setter Property="Background" Value="#FFDEDEDE"/>
                                                                                <Setter Property="BorderBrush" Value="White"/>
                                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                                <Setter Property="ClickMode" Value="Hover"/>
                                                                            </Style>
                                                                        </Style.BasedOn>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                                <RepeatButton.Visibility>
                                                                    <MultiBinding ConverterParameter="100" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
                                                                        <MultiBinding.Converter>
                                                                            <MenuScrollingVisibilityConverter/>
                                                                        </MultiBinding.Converter>
                                                                        <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                        <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                        <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                        <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                    </MultiBinding>
                                                                </RepeatButton.Visibility>
                                                            </RepeatButton>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="PanningMode" Value="None"/>
                                        </Style>
                                    </ScrollViewer.Style>-->
                                    <Grid>
                                        <ItemsPresenter/>
                                    </Grid>
                                </ScrollViewer>
                            </Grid>
                        </Border>
                    </Grid>
                </Grid>
            </Popup>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="RadSubMenuItemControlTemplate" TargetType="{x:Type telerik:RadMenuItem}">
        <Grid x:Name="RootElement">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="SubMenuOpen">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Highlighted">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightVisual"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentGrid"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused"/>
                    <VisualState x:Name="Focused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckedStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tick">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked"/>
                    <VisualState x:Name="HideIcon">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Icon">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="RoleStates">
                    <VisualState x:Name="TopLevelItem">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>-2,0,-7,0</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="TopLevelHeader">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="IconHost">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>-2,0,-7,0</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="SubmenuItem"/>
                    <VisualState x:Name="SubmenuHeader">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ExpandIcon">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Separator"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Horizontal"/>
                    <VisualState x:Name="Vertical"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ChildrenStates">
                    <VisualState x:Name="HasChildren"/>
                    <VisualState x:Name="NoChildren"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="HeaderStates">
                    <VisualState x:Name="VisibleHeader"/>
                    <VisualState x:Name="EmptyHeader">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="Icon">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>5,3,4,3</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Content">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="InputGestureTextStates">
                    <VisualState x:Name="EmptyInputGestureText"/>
                    <VisualState x:Name="VisibleInputGestureText">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_InputGestureText">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
            <Grid x:Name="ContentGrid" Margin="0" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="0"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto" MinWidth="40"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="HighlightVisual" BorderThickness="0" Background="{DynamicResource MainWindowGrayBackgroundColor}" Grid.ColumnSpan="4" CornerRadius="1" Opacity="0">
                    <Border x:Name="HighlightInnerBorderVisual" BorderBrush="White" BorderThickness="0" CornerRadius="0"/>
                </Border>
                <Grid x:Name="IconHost" Margin="0" Width="0">
                    <Path x:Name="Tick" Data="M4,7.1L5.7,7.2 7.4,9.1 12,2.4 13.2,2 7.3,13.8z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Height="16" Margin="0 0 4 0 " Visibility="Collapsed" Width="16"/>
                    <ContentPresenter x:Name="Icon" ContentTemplate="{TemplateBinding IconTemplate}" VerticalAlignment="Center" Content="{TemplateBinding Icon}" Margin="5,3,4,3"/>
                </Grid>
                <ContentPresenter x:Name="Content" 
                                  ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="Bottom"/>
                <telerik:SharedSizeContentPresenter x:Name="PART_InputGestureText" Content="{TemplateBinding InputGestureText}" Grid.Column="2" Margin="40,3,3,3" SharedSizeGroupWidth="IGTColumn" Visibility="Collapsed"/>
                <telerik:SharedSizeContentPresenter Grid.Column="3" HorizontalAlignment="Right" SharedSizeGroupWidth="ExpandIconColumn">
                    <Grid x:Name="ExpandIcon" Height="19" Margin="0,0,2,0" Visibility="Collapsed" Width="16">
                        <Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="White" Margin="6,7,6,5"/>
                        <Path Data="M0,0L0,7 1,7 1,6 2,6 2,5 3,5 3,4 4,4 4,3 3,3 3,2 2,2 2,1 1,1 1,0z" Fill="{DynamicResource LightGrayTextForegroundColor}" Margin="6"/>
                    </Grid>
                </telerik:SharedSizeContentPresenter>
            </Grid>
            <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-1" IsOpen="{TemplateBinding IsSubmenuOpen}" VerticalOffset="-1">
                <Grid Height="{TemplateBinding DropDownHeight}" Width="{TemplateBinding DropDownWidth}">
                    <Grid x:Name="PopupContentElement">
                        <Border BorderBrush="{DynamicResource SettingsLightGrayBorderColor}" BorderThickness="1" Background="White">
                            <Grid >
                                <Border x:Name="IconSeparatorBackground" BorderBrush="#FF848484" BorderThickness="0" Background="Transparent" HorizontalAlignment="Left" Width="{Binding IconColumnWidth, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <ScrollViewer x:Name="PART_ScrollViewer" telerik:SharedSizeScope.IsSharedSizeScope="True" VerticalScrollBarVisibility="Auto">
                                    <!--<ScrollViewer.Style>
                                        <Style TargetType="{x:Type ScrollViewer}">
                                            <Setter Property="Padding" Value="0"/>
                                            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
                                            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                                            <Setter Property="CanContentScroll" Value="True"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                        <Grid SnapsToDevicePixels="True">
                                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}"/>
                                                            <RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineUpCommand" Focusable="False" VerticalAlignment="Top">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                <VisualState x:Name="Normal"/>
                                                                                                <VisualState x:Name="Pressed">
                                                                                                    <Storyboard>
                                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                    <SolidColorBrush Color="Black"/>
                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                    <SolidColorBrush Color="White"/>
                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                    <Thickness>1,3,1,1</Thickness>
                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Disabled">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                            </VisualStateGroup>
                                                                                            <VisualStateGroup x:Name="FocusStates">
                                                                                                <VisualState x:Name="Focused"/>
                                                                                                <VisualState x:Name="Unfocused"/>
                                                                                            </VisualStateGroup>
                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                        <Grid x:Name="ContentContainer" Margin="1,2">
                                                                                            <Path x:Name="BackgroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="White" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
                                                                                            <Path x:Name="ForegroundIcon" Data="M0,4L3.5,0.5 7,4z" Fill="Black" Height="4" Margin="0,1" Stretch="None" Width="7"/>
                                                                                        </Grid>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Style.BasedOn>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="Interval" Value="50"/>
                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                <Setter Property="MinWidth" Value="0"/>
                                                                                <Setter Property="MinHeight" Value="0"/>
                                                                                <Setter Property="Background" Value="#FFDEDEDE"/>
                                                                                <Setter Property="BorderBrush" Value="White"/>
                                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                                <Setter Property="ClickMode" Value="Hover"/>
                                                                            </Style>
                                                                        </Style.BasedOn>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                                <RepeatButton.Visibility>
                                                                    <MultiBinding ConverterParameter="0" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
                                                                        <MultiBinding.Converter>
                                                                            <MenuScrollingVisibilityConverter/>
                                                                        </MultiBinding.Converter>
                                                                        <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                        <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                        <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                        <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                    </MultiBinding>
                                                                </RepeatButton.Visibility>
                                                            </RepeatButton>
                                                            <RepeatButton CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="ScrollBar.LineDownCommand" Focusable="False" VerticalAlignment="Bottom">
                                                                <RepeatButton.Style>
                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                        <Setter Property="BorderThickness" Value="0,1,0,0"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                <VisualState x:Name="Normal"/>
                                                                                                <VisualState x:Name="Pressed">
                                                                                                    <Storyboard>
                                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="ForegroundIcon">
                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                    <SolidColorBrush Color="Black"/>
                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundIcon">
                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                    <SolidColorBrush Color="White"/>
                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentContainer">
                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                    <Thickness>1,3,1,1</Thickness>
                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Disabled">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                            </VisualStateGroup>
                                                                                            <VisualStateGroup x:Name="FocusStates">
                                                                                                <VisualState x:Name="Focused"/>
                                                                                                <VisualState x:Name="Unfocused"/>
                                                                                            </VisualStateGroup>
                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                        <Grid x:Name="ContentContainer" Margin="1,2">
                                                                                            <Path x:Name="BackgroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="White" Height="4" Margin="0,2,0,0" Stretch="None" Width="7"/>
                                                                                            <Path x:Name="ForegroundIcon" Data="M0,0L3.5,3.5 7,0z" Fill="Black" Height="4" Margin="0,1" Stretch="None" Width="7"/>
                                                                                        </Grid>
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Style.BasedOn>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="Interval" Value="50"/>
                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                <Setter Property="MinWidth" Value="0"/>
                                                                                <Setter Property="MinHeight" Value="0"/>
                                                                                <Setter Property="Background" Value="#FFDEDEDE"/>
                                                                                <Setter Property="BorderBrush" Value="White"/>
                                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                                <Setter Property="ClickMode" Value="Hover"/>
                                                                            </Style>
                                                                        </Style.BasedOn>
                                                                    </Style>
                                                                </RepeatButton.Style>
                                                                <RepeatButton.Visibility>
                                                                    <MultiBinding ConverterParameter="100" FallbackValue="Visibility.Collapsed" UpdateSourceTrigger="Default">
                                                                        <MultiBinding.Converter>
                                                                            <MenuScrollingVisibilityConverter/>
                                                                        </MultiBinding.Converter>
                                                                        <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                        <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                        <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                        <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                    </MultiBinding>
                                                                </RepeatButton.Visibility>
                                                            </RepeatButton>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="PanningMode" Value="None"/>
                                        </Style>
                                    </ScrollViewer.Style>-->
                                    <Grid MaxHeight="300">
                                        <ItemsPresenter/>
                                    </Grid>
                                </ScrollViewer>
                            </Grid>
                        </Border>
                    </Grid>
                </Grid>
            </Popup>
        </Grid>
    </ControlTemplate>


    <Style  TargetType="{x:Type telerik:RadMenuItem}">
        <Setter Property="Padding" Value="0 10"/>     
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{DynamicResource LightGrayTextForegroundColor}"/>
        <Setter Property="FontFamily" Value="{DynamicResource ProximaRegular}"/>
        <Setter Property="FontSize" Value="10pt"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
        <Setter Property="Template" Value="{StaticResource RadMenuItemControlTemplate}"/>
        <Setter Property="TopLevelHeaderTemplateKey" Value="{StaticResource RadMenuItemControlTemplate}"/>
        <Setter Property="TopLevelItemTemplateKey" Value="{StaticResource RadMenuItemControlTemplate}"/>
        <Setter Property="SubmenuHeaderTemplateKey" Value="{StaticResource RadMenuItemControlTemplate}"/>
        <Setter Property="SubmenuItemTemplateKey" Value="{StaticResource RadMenuItemControlTemplate}"/>
        <Setter Property="IconColumnWidth" Value="26"/>
        <Setter Property="SeparatorTemplateKey">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadMenuItem}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OrientationStates">
                                <VisualState x:Name="VerticalState"/>
                                <VisualState x:Name="HorizontalState">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HorizontalSeparator">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="VerticalSeparator">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="HorizontalSeparator">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0" HorizontalAlignment="Left" Width="{TemplateBinding IconColumnWidth}"/>
                            <Grid Grid.Column="1" Height="2" Margin="4,4,4,3">
                                <Rectangle Fill="#FF848484" Height="1" VerticalAlignment="Top"/>
                                <Rectangle Fill="Transparent" Height="1" VerticalAlignment="Bottom"/>
                            </Grid>
                        </Grid>
                        <Grid x:Name="VerticalSeparator" Margin="2" Visibility="Collapsed" Width="2">
                            <Rectangle Fill="#FF848484" HorizontalAlignment="Left" Width="1"/>
                            <Rectangle Fill="Transparent" HorizontalAlignment="Right" Width="1"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Style.BasedOn>
            <Style TargetType="{x:Type telerik:RadMenuItem}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="#FF848484"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Visibility" Value="{Binding Visibility}"/>
                <Setter Property="Icon" Value="{Binding Icon}"/>
                <Setter Property="Tag" Value="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type telerik:RadTreeViewItem}}}"/>
                <Setter Property="IconTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image Source="{Binding}" Height="16" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Header" Value="{Binding Name}"/>
                <Setter Property="ItemsSource" Value="{Binding SubItems}"/>
                <Setter Property="Command" Value="{Binding Action}"/>
                <Setter Property="CommandParameter" Value="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type telerik:RadTreeViewItem}}}" />
            </Style>
        </Style.BasedOn>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{Binding TopLevelHeaderTemplateKey, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{Binding TopLevelItemTemplateKey, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{Binding SubmenuHeaderTemplateKey, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{Binding SubmenuItemTemplateKey, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="Role" Value="Separator">
                <Setter Property="Template" Value="{Binding SeparatorTemplateKey, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource SettingsGreenColor}"/>
                <Setter Property="Icon" Value="{Binding  IconHover}"/>
            </Trigger>
        </Style.Triggers>
    </Style> 
    
  
</ResourceDictionary>