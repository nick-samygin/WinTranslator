<UserControl x:Class="PasswordBoss.Views.AccountSettings.AccountSettings"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:uc="clr-namespace:PasswordBoss.Views.UserControls"
             xmlns:v="clr-namespace:PasswordBoss.Helpers"
             xmlns:dashboard="clr-namespace:PasswordBoss.ViewModel.AccountSettings"
             xmlns:src="clr-namespace:PasswordBoss.ViewModel.Account"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             d:DesignHeight="800" d:DesignWidth="900"
             Height="Auto" Width="Auto">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
        <sys:Int32 x:Key="intTenMinutes">10</sys:Int32>
        <sys:Int32 x:Key="intThirtyMinutes">30</sys:Int32>
        <sys:Int32 x:Key="intFortyFiveMinutes">45</sys:Int32>
        <sys:Int32 x:Key="intSixtyMinutes">60</sys:Int32>
        <sys:Int32 x:Key="intTwentyFourHours">1440</sys:Int32>
        <sys:Int32 x:Key="intNever">-1</sys:Int32>
        <v:RadioButtonCheckedConverter x:Key="RadioButtonCheckedConverter" />
    </UserControl.Resources>

    <!-- Account Setting Grid-->
    <Grid x:Name="accountsetting_grid" Grid.Column="1" Background="{DynamicResource MainWindowGrayBackgroundColor}">
        <!--  <Grid.Visibility>
          <Binding Path="(dashboard:AccountSettingsViewModel.AccountSettingVisibility)" UpdateSourceTrigger="PropertyChanged"
                                 Converter="{StaticResource BoolToVisiblity}" /> 
        </Grid.Visibility> -->
        <Grid.RowDefinitions>
            <RowDefinition Height="44" />
            <!--<RowDefinition Height="10" />
            <RowDefinition Height="4" />
            <RowDefinition Height="25" />-->
            <RowDefinition Height="*" />
            <!--<RowDefinition Height="70" />-->
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <!--<ColumnDefinition Width="22" />-->
            <ColumnDefinition Width="*" />
            <!--<ColumnDefinition Width="20" />-->
        </Grid.ColumnDefinitions>
        
        <Border Grid.Row="0" Grid.Column="0" Background="{DynamicResource WhiteColor}" HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
            <Grid HorizontalAlignment="Stretch">
                <TextBlock Text="{DynamicResource Settings}" HorizontalAlignment="Left"
                       Foreground="{DynamicResource HeaderForegroundColorColor}" VerticalAlignment="Center"
                       Margin="22,0,0,0"
                       FontFamily="{DynamicResource ProximaSemiBold}" FontSize="14" FontWeight="Bold" />
                <TextBlock FontFamily="{DynamicResource ProximaRegular}" 
                           Focusable="True" FontSize="14" 
                           HorizontalAlignment="Right" Text="X" 
                           Foreground="{DynamicResource GrayColor}" VerticalAlignment="Center" 
                           MouseLeftButtonDown="TextBlock_MouseLeftButtonDown"
                           FontWeight="Bold" Margin="0,0,22,0">
                </TextBlock>
            </Grid>
            
        </Border>
        <!--<TextBlock Grid.Row="3" Grid.Column="1" Visibility="Hidden"
                   FontFamily="{DynamicResource ProximaLight}" Foreground="{DynamicResource LightGrayTextForegroundColor}" FontSize="12" />-->
        <!--account setting window tab-->
        <TabControl Name="accountSettingsTab" Grid.Row="1" Grid.Column="0" BorderThickness="2,0,0,0" SelectedIndex="{Binding TabSelectedIndex}" SelectionChanged="accountSettingsTab_SelectionChanged" IsVisibleChanged="accountSettingsTab_IsVisibleChanged"
                    BorderBrush="Transparent" Background="{DynamicResource WhiteColor}" VerticalAlignment="Stretch" Margin="0,-1,0,0">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="LostFocus">
                    <i:InvokeCommandAction Command="{Binding TabControlLostFocusCommand}" CommandParameter="{Binding ElementName=accountSettingsTab}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <!--  SelectedIndex="{Binding SelectedIndexTabControl,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" -->
            <TabControl.Resources>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid x:Name="grid">
                                    <Border Name="Border" Background="{DynamicResource TextboxBorderbrush}" BorderThickness="0 2 0 0">
                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center"
                                                    VerticalAlignment="Center">
                                            <ContentPresenter ContentSource="Header" VerticalAlignment="Center"
                                                              HorizontalAlignment="Stretch" />
                                        </StackPanel>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource WhiteColor}" />
                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PasswordBossGreenColor}" />
                                        <Setter TargetName="Border" Property="BorderThickness" Value="0,2,0,0" />
                                        <Setter Property="Foreground" Value="{DynamicResource BlackColor}" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource TextBoxBackground}" />
                                        <Setter TargetName="Border" Property="BorderThickness" Value="0,0,1,0" />
                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource TextboxBorderbrush}" />
                                        <Setter Property="Foreground" Value="{DynamicResource LightGrayTextForegroundColor}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <!--general tab design-->
            <TabItem x:Name="tabGeneral" Height="Auto" Width="120" Background="{DynamicResource WhiteColor}" IsSelected="True">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="LostFocus">
                        <i:InvokeCommandAction Command="{Binding TabLostFocusCommand}" CommandParameter="{Binding ElementName=tabGeneral}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <TabItem.Header>
                    <TextBlock Text="{DynamicResource Profile}" FontSize="12"
                               FontWeight="SemiBold" FontFamily="{DynamicResource ProximaSemiBold}" />
                </TabItem.Header>
                <TabItem.Content>
                    <!--main general tab grid-->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="15" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Right" Width="1"
                                Background="{DynamicResource WhiteColor}"
                                Margin="0,-2,0,0" />
                        <Border Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom" Height="1"
                                Background="{DynamicResource WhiteColor}"
                                Margin="-2,0,-2,0" />
                        <!--left panel-->
                        <Grid Grid.Row="1" Grid.Column="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30" />
                                <RowDefinition Height="5" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="5" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="5" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="5" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="10" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="5" />
                                <RowDefinition Height="30" />
                                <RowDefinition MinHeight="31" Height="31" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="5" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="5" />
                                <RowDefinition Height="30" />
                                <RowDefinition MinHeight="31" Height="31" />
                                <RowDefinition Height="50" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="260" />
                                <ColumnDefinition Width="300" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="1" Grid.Row="0" Text="{DynamicResource FirstName}" Style="{DynamicResource LabelTextBlockStyle}" />
                            <TextBox Name="firstName" Grid.Row="0" Grid.Column="2" Text="{Binding FirstName, UpdateSourceTrigger=PropertyChanged}" Background="{DynamicResource WhiteColor}" Style="{DynamicResource AddControlTextBoxStyleAccountSettings}"/>
                            <TextBlock Grid.Column="1" Grid.Row="2" Text="{DynamicResource LastName}" Style="{DynamicResource LabelTextBlockStyle}" />
                            <TextBox Grid.Row="2" Grid.Column="2" Text="{Binding LastName, UpdateSourceTrigger=PropertyChanged}" Background="{DynamicResource WhiteColor}" Style="{DynamicResource AddControlTextBoxStyleAccountSettings}"/>
                            <TextBlock Grid.Column="1" Grid.Row="4" Text="{DynamicResource AccountEmail}" Style="{DynamicResource LabelTextBlockStyle}" />
                            <TextBox IsEnabled="False" Grid.Row="4" Grid.Column="2" Text="{Binding Email, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource AddControlTextBoxStyleAccountSettings}"/>
                            <ContentControl HorizontalAlignment="Left" Name="emailHelp" Grid.Row="4" Grid.Column="3" Style="{DynamicResource HelpControl}" Tag="{DynamicResource AccountSettingMailHelperText}" />

                            <TextBlock Grid.Column="1" Grid.Row="6" Text="{DynamicResource MobileNumber}" Style="{DynamicResource LabelTextBlockStyle}" />
                            <TextBox Grid.Row="6" Grid.Column="2" Text="{Binding Mobile, UpdateSourceTrigger=PropertyChanged}" Background="{DynamicResource WhiteColor}" Style="{DynamicResource AddControlTextBoxStyleAccountSettings}"/>
                            <StackPanel Grid.Row="8" Grid.Column="2" Grid.ColumnSpan="2">
                                <TextBlock Text="{DynamicResource IncludePlusSign}" FontFamily="{DynamicResource ProximaRegular}" />
                                <ContentControl HorizontalAlignment="Left" Width="Auto" Style="{DynamicResource LinkHelpControl}" FontSize="11" Content="{DynamicResource WhyDoWeAsk}" Tag="{DynamicResource MobileNumberProfileInfo}" />
                            </StackPanel>

                            <TextBlock Grid.Column="1" Grid.Row="10" Text="{DynamicResource Language}"
                                      Style="{DynamicResource LabelTextBlockStyle}" />
                            <ComboBox x:Name="AccountSettingsLanguageCombobox" Grid.Column="2" Grid.Row="10" Width="200" Height="30" HorizontalAlignment="Left"
                                      Style="{DynamicResource AddControlComboboxStyle}" SelectionChanged="ComboBox_SelectionChanged"
                                      BorderThickness="1"
                                      ItemContainerStyle="{DynamicResource LocationComboboxItemStyle}"
                                      ItemsSource="{Binding Path=Languages}"
                                     SelectedItem="{Binding SelectedLanguage}"
                                      TextSearch.TextPath="Name" IsTextSearchEnabled="True">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                        <TextBlock Text="{Binding TranslationName}" Margin="0,4,0,0" FontFamily="{DynamicResource ProximaRegular}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding AccountSettingsComboboxChangedCommand}" CommandParameter="{Binding ElementName=AccountSettingsLanguageCombobox}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>
                            <TextBlock Grid.Column="1" Grid.Row="12" Text="{DynamicResource Country}"
                                       Style="{DynamicResource LabelTextBlockStyle}" />
                            <ComboBox x:Name="AccountSettingsCountriesCombobox" Grid.Column="2" Grid.Row="12" Width="200" HorizontalAlignment="Left"
                                      Style="{DynamicResource AddControlComboboxStyle}" SelectionChanged="ComboBox_SelectionChanged"
                                      BorderThickness="1" ItemContainerStyle="{DynamicResource LocationComboboxItemStyle}"
                                      ItemsSource="{Binding Path=Countries}" Height="30"
                                    SelectedItem="{Binding SelectedCountry}"
                                      TextSearch.TextPath="Name" IsTextSearchEnabled="True">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                        <TextBlock Text="{Binding Name}" Margin="0,4,0,0" FontFamily="{DynamicResource ProximaRegular}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding AccountSettingsComboboxChangedCommand}" CommandParameter="{Binding ElementName=AccountSettingsCountriesCombobox}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>
                            <Border Grid.Row="13" Grid.Column="1" Height="1" Grid.ColumnSpan="3"
                                    VerticalAlignment="Center" Background="{DynamicResource AccountSettingsGrayBackgroundColor}" Margin="0,5,0,0" />
                            <TextBlock Grid.Column="1" Grid.Row="14" Text="{DynamicResource SubscriptionType}"
                                      Style="{DynamicResource LabelTextBlockStyle}" />
                            <TextBlock Grid.Column="2"  Grid.Row="14" Text="{Binding MembershipType}"
                                               FontWeight="Bold" Style="{DynamicResource LabelTextBlockStyle}" Foreground="{DynamicResource PasswordBossGreenColor}" />
                            <TextBlock Grid.Column="1" Grid.Row="16" Text="{DynamicResource SubscriptionValidThrough}" TextWrapping="Wrap"
                                      Style="{DynamicResource LabelTextBlockStyle}" />
                            <TextBlock Grid.Column="2"  Grid.Row="16" Text="{Binding MembershipExpiresDate, StringFormat='{}{0:MMMM dd, yyyy}'}"
                                               FontWeight="Bold" Style="{DynamicResource LabelTextBlockStyle}" Foreground="{DynamicResource PasswordBossGreenColor}" />
                            <TextBlock Grid.Column="2"  Grid.Row="16" Text="{DynamicResource Renew}" FontWeight="Bold" Style="{DynamicResource LabelTextBlockStyle}" 
                                       HorizontalAlignment="Right" Foreground="#F87459" MouseLeftButtonDown="TextBlock_MouseLeftButtonDown"
                                       Visibility="{Binding RenewVisibility, Converter={StaticResource BoolToVisibility}}" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding RenewCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBlock>
                            <TextBlock Grid.Column="2"  Grid.Row="16" Text="{DynamicResource Upgrade}" FontWeight="Bold" Style="{DynamicResource LabelTextBlockStyle}" 
                                       HorizontalAlignment="Right" Foreground="#F87459" MouseLeftButtonDown="TextBlock_MouseLeftButtonDown"
                                       Visibility="{Binding UpgradeVisibility, Converter={StaticResource BoolToVisibility}}" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding UpgradeCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBlock>
                            <TextBlock Grid.Column="1" Grid.Row="18" Text="{DynamicResource PasswordBossPortal}"
                                      Style="{DynamicResource LabelTextBlockStyle}" />
                            <Button Grid.Row="18" Grid.Column="2" Height="25" Width="100" HorizontalAlignment="Left"
                                Content="{DynamicResource Login}" Background="{DynamicResource PasswordBossGreenColor}" Foreground="{DynamicResource WhiteColor}" Command="{Binding LoginPortalCommand}"
                                FontWeight="SemiBold" Style="{DynamicResource roundButton}" />
                            
                            <Border Grid.Row="19" Grid.Column="1" Height="1" Grid.ColumnSpan="3"
                                    VerticalAlignment="Center" Background="{DynamicResource AccountSettingsGrayBackgroundColor}" Margin="0,5,0,0" />
                            <Button Grid.Row="20" Grid.Column="1" Grid.ColumnSpan="3" Height="25" Width="100" Command="{Binding SaveTabGeneralDataCommand}"
                                Content="{DynamicResource Save}" Foreground="{DynamicResource WhiteColor}" VerticalAlignment="Center"
                                FontWeight="SemiBold" Style="{DynamicResource roundButton}" />
                        </Grid>
                    </Grid>
                </TabItem.Content>
            </TabItem>
            <TabItem x:Name="tabPreferences" Height="30" Width="120" Background="{DynamicResource WhiteColor}" 
                     IsSelected="{Binding DisplayXamlTab, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="LostFocus">
                        <i:InvokeCommandAction Command="{Binding TabLostFocusCommand}" CommandParameter="{Binding ElementName=tabPreferences}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <TabItem.Header>
                    <TextBlock Text="{DynamicResource Preferences}" FontSize="12"
                               FontWeight="SemiBold" FontFamily="{DynamicResource ProximaSemiBold}" />
                </TabItem.Header>
                <TabItem.Content>
                    <Grid x:Name="PreferencesTabGrid">
                            <Grid.RowDefinitions>
                            <RowDefinition Height="20" />
                                <RowDefinition Height="*" />
                            <RowDefinition Height="20"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                        <Grid Grid.Row="1" Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.5*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition MinHeight="51" Height="51" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition MinHeight="51" Height="51" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Vertical">
                                <TextBlock Text="{DynamicResource CloudBackup}"
                                           Foreground="{Binding CommonForegroundTextColor}" FontSize="14"
                                           FontFamily="{DynamicResource ProximaRegular}"
                                           FontWeight="SemiBold" />
                                <TextBlock Foreground="{DynamicResource LightGrayTextForegroundColor}" TextWrapping="Wrap"
                                           FontFamily="{DynamicResource ProximaRegular}"
                                       Text="{DynamicResource AccountSettingEnableBackup}" />
                                <Border Height="10"/>
                                <TextBlock Foreground="{DynamicResource LightGrayTextForegroundColor}" TextWrapping="Wrap"
                                           FontFamily="{DynamicResource ProximaRegular}"
                                       Text="{DynamicResource AccountSettingEnableBackup2}" />
                            </StackPanel>
                            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center"
                                            Margin="40,0,40,0" HorizontalAlignment="Left">
                                <CheckBox Style="{DynamicResource togglebuttonstyleEmpty}" HorizontalAlignment="Left" 
                                          IsChecked="{Binding EnableStorageCloudBackup}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                            <i:InvokeCommandAction Command="{Binding EnableStorageCloudBackupCommand}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </CheckBox>
                                <TextBlock Text="{DynamicResource LastBackup}" FontSize="11" FontFamily="{DynamicResource ProximaRegular}"
                                               Foreground="{Binding CommonForegroundTextColor}" />
                                <TextBlock Text="{Binding LastSync, StringFormat=g}" FontSize="11" FontFamily="{DynamicResource ProximaRegular}"
                                               Foreground="{Binding CommonForegroundTextColor}" />
                            </StackPanel>
                            <StackPanel Grid.Row="0" Grid.Column="3" Orientation="Vertical" VerticalAlignment="Center"
                                        HorizontalAlignment="Left" Margin="76,0,0,0">
                                    <Image Source="{Binding BackupImage, UpdateSourceTrigger=PropertyChanged}" Width="77" Height="53" />
                                <Border Margin="0,5,0,0" BorderThickness="1">
                                    <Button VerticalContentAlignment="Center" BorderThickness="0" Width="80"
                                                Height="20" Foreground="{DynamicResource WhiteColor}"
                                                Content="{DynamicResource BackupNowUppercase}" FontSize="10"
                                                FontWeight="SemiBold"
                                                IsEnabled="{Binding BackupEnabled, UpdateSourceTrigger=PropertyChanged}"
                                                Command="{Binding AccountSettingCommand}"
                                                Style="{DynamicResource backupButtonstyle}" />
                                    </Border>
                                </StackPanel>
                            <Border Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Center" Background="{DynamicResource AccountSettingsGrayBackgroundColor}" />
                            <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Vertical">
                                <TextBlock Text="{DynamicResource SetStorageLocation}" FontWeight="SemiBold" FontSize="14"
                                           FontFamily="{DynamicResource ProximaRegular}"
                                               Foreground="{Binding CommonForegroundTextColor}" />

                                <TextBlock Text="{DynamicResource AccountSettingChooseLocation}" TextWrapping="Wrap"
                                           FontFamily="{DynamicResource ProximaRegular}"
                                           Foreground="{DynamicResource LightGrayTextForegroundColor}" />
                                </StackPanel>
                            <Grid Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Width="400" Margin="40,0,0,0" HorizontalAlignment="Left">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*" />
                                </Grid.RowDefinitions>
                                <ItemsControl ItemsSource="{Binding StorageRegions}" VerticalAlignment="Stretch">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" Height="20">
                                                <RadioButton Style="{DynamicResource AutoLockRadioButtonStyle}"
                                                             VerticalAlignment="Center" IsChecked="{Binding Checked}"
                                                             GroupName="cloudbackupgroup"
                                                             IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.EnableStorageCloudBackup}">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Checked">
                                                            <i:InvokeCommandAction
                                                                Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.StorageRegionChangedCommand}"
                                                                CommandParameter="{Binding UUID}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </RadioButton>
                                                <TextBlock VerticalAlignment="Center" Margin="4,2,0,0"
                                                           Text="{Binding Name}" FontSize="12" FontFamily="{DynamicResource ProximaRegular}"
                                                           Foreground="{Binding CommonForegroundTextColor}" />
                                            </StackPanel>

                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <UniformGrid Columns="2" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </Grid>
                            <Border Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Center" Background="{DynamicResource AccountSettingsGrayBackgroundColor}" />
                            <Button Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" Height="25" Width="100" Command="{Binding SaveTabPreferencesCommand}"
                                Content="{DynamicResource Save}" Background="{DynamicResource PasswordBossGreenColor}" Foreground="{DynamicResource WhiteColor}"
                                FontWeight="SemiBold" Style="{DynamicResource roundButton}" />
                        </Grid>
                        </Grid>

                </TabItem.Content>
            </TabItem>
            <!--Security tab design-->
            <TabItem x:Name="tabSecurity" Height="30" Width="120" Background="{DynamicResource WhiteColor}"
                     IsSelected="{Binding DisplayXamlTab, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <TabItem.Header>
                    <TextBlock Text="{DynamicResource Security}" FontSize="12" 
                               FontWeight="SemiBold" FontFamily="{DynamicResource ProximaSemiBold}" />
                </TabItem.Header>
                <TabItem.Content>
                    <Grid x:Name="SecurityTabGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border Margin="0,-10,0,-10" Grid.Column="0" Width="1" HorizontalAlignment="Right"
                                Background="{DynamicResource AccountSettingsGrayBackgroundColor}" />
                        <!--left side grid-->
                        <Grid Grid.Column="0" HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="10" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="31" />
                                <RowDefinition Height="Auto" MaxHeight="31" />
                                <RowDefinition Height="Auto" MaxHeight="31" />
                                <RowDefinition Height="31" />
                                <RowDefinition Height="31" />
								<RowDefinition Height="31" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <!--Header row-->

                            <Border Margin="-2,0,0,0" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    Background="{DynamicResource AccountSettingsGrayBackgroundColor}"
                                    VerticalAlignment="Bottom" />
                            <!--first row-->
                            <Border Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource TextBoxBackground}"
                                    Margin="-2,0,1,0" />
                            <RadioButton Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" GroupName="security"
                                         HorizontalContentAlignment="Left" VerticalAlignment="Stretch"
                                         VerticalContentAlignment="Stretch" Margin="-2,0,1,0" Background="{DynamicResource WhiteColor}"
                                         Style="{DynamicResource SecurityTabButtonStyle}"
                                         Command="{Binding SetAutoLockCommand}">
                                <TextBlock Text="{DynamicResource AutoLockTime}"
                                           FontFamily="{DynamicResource ProximaLight}"
                                           HorizontalAlignment="Left" VerticalAlignment="Stretch"
                                           Padding="22,9,0,0" />
                            </RadioButton>

                            <!--second row-->
                            <RadioButton Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" GroupName="security"
                                         HorizontalContentAlignment="Left" VerticalAlignment="Stretch"
                                         VerticalContentAlignment="Stretch" Margin="-2,0,1,0" Background="{DynamicResource WhiteColor}"
                                         Style="{DynamicResource SecurityTabButtonStyle}"
                                         Command="{Binding ChangeMasterPasswordCommand}"
                                         CommandParameter="{Binding ElementName=SetNewPasswordBox}">
                                <TextBlock Text="{DynamicResource ChangeMasterPass}"
                                           FontFamily="{DynamicResource ProximaLight}"
                                           HorizontalAlignment="Left" VerticalAlignment="Stretch"
                                           Padding="22,9,0,0" />
                            </RadioButton>
                            <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource TextBoxBackground}"
                                    Margin="-2,0,1,0" />

                            <!--third row-->
                            <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Height="31" Margin="0" Visibility="{Binding TouchScreenDetected, Converter={StaticResource BoolToVisibility}}" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{DynamicResource EnablePIN}" FontSize="13"
                                       Foreground="{DynamicResource AccountSettingTextColor}" 
                                       Grid.Column="1"
                                       FontFamily="{DynamicResource ProximaLight}"
                                       HorizontalAlignment="Left" VerticalAlignment="Stretch" Padding="0,8,0,0" />
                                <CheckBox Grid.Column="1" Style="{DynamicResource togglebuttonstyleEmpty}"
                                      IsChecked="{Binding EnablePinAccessIsChecked}"
                                      HorizontalAlignment="Right" HorizontalContentAlignment="Center"
                                      IsEnabled="{Binding TouchScreenDetected}"
                                      VerticalAlignment="Center" />
                                <Border Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource TextBoxBackground}"
                                    Margin="-2,0,1,0" />
                            </Grid>

                            <!--fourth row-->
                            <Grid Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" Height="31" Margin="0" Visibility="{Binding TouchScreenDetected, Converter={StaticResource BoolToVisibility}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <RadioButton Grid.Column="0" Grid.ColumnSpan="3" GroupName="security"
                                         HorizontalContentAlignment="Left" VerticalAlignment="Stretch"
                                         VerticalContentAlignment="Stretch" Margin="-2,0,1,0" Background="{DynamicResource WhiteColor}"
                                         Style="{DynamicResource SecurityTabButtonStyle}"
                                         Command="{Binding ChangePINCommand}">
                                    <TextBlock Text="{DynamicResource ChangePIN}"
                                           FontFamily="{DynamicResource ProximaLight}"
                                           HorizontalAlignment="Left" VerticalAlignment="Stretch"
                                           Padding="32,9,0,0" />
                                </RadioButton>
                                <Border Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource TextBoxBackground}"
                                    Margin="-2,0,1,0" />
                            </Grid>
                            <!--fifth row-->
                            <TextBlock Text="{DynamicResource RememberEmailLogout}" FontSize="13"
                                    Foreground="{DynamicResource AccountSettingTextColor}" Grid.Row="5"
                                    Grid.Column="1"
                                    FontFamily="{DynamicResource ProximaLight}"
                                    HorizontalAlignment="Left" VerticalAlignment="Stretch" Padding="0,8,0,0" />
                            <CheckBox Grid.Row="5" Grid.Column="1" Style="{DynamicResource togglebuttonstyleEmpty}"
                                    HorizontalAlignment="Right" HorizontalContentAlignment="Center"
                                    VerticalAlignment="Center"
                                    IsChecked="{Binding SecurityRememberLastLogin}" />
                            <Border Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                VerticalAlignment="Bottom" Background="{DynamicResource TextBoxBackground}"
                                Margin="-2,0,1,0" />
                            
                            <!--sixth row-->
                            <TextBlock Text="{DynamicResource FactorAuth}" FontSize="13"
                                       Foreground="{DynamicResource AccountSettingTextColor}" Grid.Row="6"
                                       Grid.Column="1"
                                       FontFamily="{DynamicResource ProximaLight}"
                                       HorizontalAlignment="Left" VerticalAlignment="Stretch" Padding="0,8,0,0" />
                            <CheckBox x:Name="chkTwoStepVerification" Grid.Row="6" Grid.Column="1" Style="{DynamicResource togglebuttonstyleEmpty}"                                      
                                      HorizontalAlignment="Right" HorizontalContentAlignment="Center"
                                      VerticalAlignment="Center"
                                      IsChecked="{Binding TwoStepVerification}" Command="{Binding ShowTwoStepVerificationDialogCommand}"></CheckBox>
							<Border Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource TextBoxBackground}"
                                    Margin="-2,0,1,0" />

						<StackPanel Orientation="Horizontal" Grid.Row="7" Grid.Column="1">
                            <TextBlock Text="{DynamicResource TwoStepTrustedDevice}" FontSize="13"
                                       FontFamily="{DynamicResource ProximaLight}"
                                       HorizontalAlignment="Left" VerticalAlignment="Stretch" Padding="10,8,0,0">
								<TextBlock.Style>
									<Style TargetType="TextBlock">
										<Style.Triggers>
											<DataTrigger Binding="{Binding ElementName=chkTwoStepVerification, Path=IsChecked}" Value="False">
												<Setter Property="Foreground" Value="#a7aaaa" />
											</DataTrigger>
											<DataTrigger Binding="{Binding ElementName=chkTwoStepVerification, Path=IsChecked}" Value="True">
												<Setter Property="Foreground" Value="{DynamicResource AccountSettingTextColor}" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>	
							</TextBlock>
                                <ContentControl Style="{DynamicResource HelpControl}" VerticalAlignment="Center" Tag="{DynamicResource AccountSettingTrustedDeviceTooltipText}"/>
                        </StackPanel>
							
                            <CheckBox x:Name="chkTwoStepTrustedDevice" Grid.Row="7" Grid.Column="1" 
                                      HorizontalAlignment="Right" HorizontalContentAlignment="Center"
                                      VerticalAlignment="Center"
                                      IsChecked="{Binding TwoStepTrustedDevice}" >
								<CheckBox.Style>
									<Style TargetType="CheckBox" BasedOn="{StaticResource togglebuttonstyleEmpty}">
										<Style.Triggers>
											<DataTrigger Binding="{Binding ElementName=chkTwoStepVerification, Path=IsChecked}" Value="False">
												<!--<Setter Property="Visibility" Value="Collapsed" />-->
												<Setter Property="IsEnabled" Value="False" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</CheckBox.Style>
									  </CheckBox>

                            <Border Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource TextBoxBackground}"
                                    Margin="-2,0,1,0">
								<!--<Border.Style>
									<Style TargetType="Border">
										<Style.Triggers>
											<DataTrigger Binding="{Binding ElementName=chkTwoStepVerification, Path=IsChecked}" Value="False">
												<Setter Property="Visibility" Value="Collapsed" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Border.Style>	-->
							</Border>

                        </Grid>

                        <!--right side grid for change master password content-->
                        <Grid x:Name="changepassword_grid" Grid.Column="1"
                              Visibility="{Binding ChangePasswordVisibility, Converter={StaticResource BoolToVisibility}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="28" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="28" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40" />
                                <RowDefinition Height="43" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="46" />
                                <RowDefinition Height="6" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="17" />
                                <RowDefinition Height="17" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="40" />
                                <RowDefinition Height="43" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="25" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <!--<TextBlock Grid.Row="1" Grid.Column="1" Text="{DynamicResource ChangeMasterPass}"
                                       FontSize="13"
                                       Foreground="{DynamicResource PasswordBossGreenColor}" FontFamily="{DynamicResource ProximaRegular}"
                                       HorizontalAlignment="Left" FontWeight="Normal" />-->
                            <TextBlock Grid.Row="0" Grid.Column="1" Text="{DynamicResource ExistingMasterPassword}" 
                                       VerticalAlignment="Bottom" 
                                       FontSize="13" 
                                       FontWeight="Bold"
                                       Margin="0,0,0,5"
                                       FontFamily="{DynamicResource ProximaRegular}"/>
                            <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="1" >
                                <uc:PasswordTextBox x:Name="OldPasswordBox"  FontSize="12" Height="30">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="GotFocus">
                                            <i:InvokeCommandAction Command="{Binding ApplyPasswordBoxFocusedStyleCommand}"  CommandParameter="{Binding ElementName=OldPasswordBox}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="LostFocus">
                                            <i:InvokeCommandAction Command="{Binding ApplyPasswordBoxDefaultStyleCommand}"  CommandParameter="{Binding ElementName=OldPasswordBox}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="Loaded">
                                            <i:InvokeCommandAction Command="{Binding ApplyPasswordBoxDefaultStyleCommand}"  CommandParameter="{Binding ElementName=OldPasswordBox}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </uc:PasswordTextBox>
                                <TextBlock Text="{Binding ExistingMasterPasswordErrorMessage, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Foreground="{DynamicResource PasswordBossRedColor}" FontFamily="{DynamicResource ProximaRegular}"
                                        FontSize="13" TextAlignment="Left" />
                            </StackPanel>

                            <TextBlock Grid.Row="2" Grid.Column="1" Text="{DynamicResource NewMasterPassword}" 
                                       VerticalAlignment="Bottom" 
                                       FontSize="13" 
                                       FontWeight="Bold"
                                       Margin="0,0,0,5"
                                       FontFamily="{DynamicResource ProximaRegular}"/>
                            <StackPanel Orientation="Vertical" Grid.Row="3" Grid.Column="1">
                                <uc:PasswordTextBox x:Name="SetNewPasswordBox"  FontSize="12" Height="30"  IsEnabled="False" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="GotFocus">
                                            <i:InvokeCommandAction Command="{Binding ApplyPasswordBoxFocusedStyleCommand}"  CommandParameter="{Binding ElementName=SetNewPasswordBox}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="LostFocus">
                                            <i:InvokeCommandAction Command="{Binding ApplyPasswordBoxDefaultStyleCommand}"  CommandParameter="{Binding ElementName=SetNewPasswordBox}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="Loaded">
                                            <i:InvokeCommandAction Command="{Binding ApplyPasswordBoxDefaultStyleCommand}"  CommandParameter="{Binding ElementName=SetNewPasswordBox}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </uc:PasswordTextBox>
                                <TextBlock Text="{Binding NewMasterPasswordErrorMessage, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Foreground="{DynamicResource PasswordBossRedColor}" FontFamily="{DynamicResource ProximaRegular}"
                           FontSize="13" TextAlignment="Left" />
                            </StackPanel>
                            <ProgressBar Grid.Row="5" Grid.Column="1" Height="4" Width="205" Value="{Binding PasswordMeterValue}"
                                         HorizontalAlignment="Left" Style="{DynamicResource ProgressBarSetup2}" />
                            <TextBlock Grid.Row="5" Grid.Column="1" Text="{Binding PasswordMeterText}"
                                       Foreground="{DynamicResource PasswordProgressGrayColor}" FontSize="11"
                                       VerticalAlignment="Center" HorizontalAlignment="Right"
                                       FontFamily="{DynamicResource  ProximaRegular}" FontStyle="Italic" />
                            <TextBlock Grid.Row="7" Grid.Column="1" Text="{DynamicResource PasswordMustContains}"
                                       FontSize="11"
                                       Foreground="{DynamicResource LightGrayTextForegroundColor}" FontFamily="{DynamicResource ProximaLight}"
                                       HorizontalAlignment="Left" Margin="2,0,0,0" />

                            <Grid Grid.Row="8" Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="35" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="35" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <RadioButton x:Name="cbxletters" Grid.Row="0" Grid.Column="0"
                                             GroupName="lettersgroup"
                                             VerticalAlignment="Center"
                                             IsChecked="{Binding LettersChecked}"
                                             Style="{StaticResource SetNewPasswordRadioButtonStyle}"
                                             Content="{DynamicResource Letters}"
                                             IsEnabled="False" HorizontalAlignment="Left"
                                             VerticalContentAlignment="Center" />
                                <RadioButton x:Name="cbxsymbols" Grid.Row="0" Grid.Column="2"
                                             GroupName="symbolsgroup"
                                             VerticalAlignment="Center"
                                             Style="{StaticResource SetNewPasswordRadioButtonStyle}"
                                             Content="{DynamicResource Symbols}"
                                             IsChecked="{Binding SymbolsChecked}"
                                             IsEnabled="False" />
                                <RadioButton x:Name="cbxnumbers" Grid.Row="0" Grid.Column="4"
                                             GroupName="numbersgroup"
                                             VerticalAlignment="Center"
                                             Style="{StaticResource SetNewPasswordRadioButtonStyle}"
                                             Content="{DynamicResource Numbers}"
                                             FontSize="11" FontWeight="SemiBold"
                                             IsChecked="{Binding NumbersChecked}"
                                             IsEnabled="False" />
                                <RadioButton x:Name="cbxcapitals" Grid.Row="1" Grid.Column="0"
                                             GroupName="capitalsgroup"
                                             VerticalAlignment="Center"
                                             Style="{StaticResource SetNewPasswordRadioButtonStyle}"
                                             Content="{DynamicResource Capitals}"
                                             FontSize="11" FontWeight="SemiBold"
                                             IsChecked="{Binding CapitalChecked}"
                                             IsEnabled="False" />
                                <RadioButton x:Name="cbx8characters" Grid.Row="1" Grid.Column="2"
                                              GroupName="lengthgroup"
                                             VerticalAlignment="Center"
                                             Style="{StaticResource SetNewPasswordRadioButtonStyle}"
                                             Content="{DynamicResource EightCharacters}"
                                             FontSize="11" FontWeight="SemiBold"
                                             IsChecked="{Binding CharactersChecked}"
                                             IsEnabled="False" />
                            </Grid>
                            <TextBlock Grid.Row="9" Grid.Column="1" Text="{DynamicResource ConfirmMasterPassword}" 
                                       VerticalAlignment="Bottom" 
                                       FontSize="13" 
                                       FontWeight="Bold"
                                       Margin="0,0,0,5"
                                       FontFamily="{DynamicResource ProximaRegular}"/>
                            <StackPanel Orientation="Vertical" Grid.Row="10" Grid.Column="1">
                                <uc:PasswordTextBox x:Name="ConfirmPasswordBox"  FontSize="12"  Height="30" IsEnabled="False">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="GotFocus">
                                            <i:InvokeCommandAction Command="{Binding ApplyPasswordBoxFocusedStyleCommand}"  CommandParameter="{Binding ElementName=ConfirmPasswordBox}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="LostFocus">
                                            <i:InvokeCommandAction Command="{Binding ApplyPasswordBoxDefaultStyleCommand}"  CommandParameter="{Binding ElementName=ConfirmPasswordBox}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="Loaded">
                                            <i:InvokeCommandAction Command="{Binding ApplyPasswordBoxDefaultStyleCommand}"  CommandParameter="{Binding ElementName=ConfirmPasswordBox}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </uc:PasswordTextBox>
                                <TextBlock Text="{Binding ConfirmMasterPasswordErrorMessage, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Foreground="{DynamicResource PasswordBossRedColor}" FontFamily="{DynamicResource ProximaRegular}"
                                        FontSize="13" TextAlignment="Left" />
                            </StackPanel>

                            <TextBlock Text="{DynamicResource ConfirmMasterPasswordAlertMessage}" Grid.Row="12" Grid.Column="1" FontWeight="Bold" 
                                       FontFamily="{DynamicResource ProximaLight}" FontSize="13" VerticalAlignment="Center"
                                       TextWrapping="Wrap" Foreground="{DynamicResource PasswordBossRedColor}" />
                            <StackPanel Grid.Row="14" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                                <Button  Style="{DynamicResource roundButton}"
                                    Background="{DynamicResource PasswordBossGreenColor}" HorizontalAlignment="Center"
                                    Height="25" Width="100" Content="{DynamicResource Save}" Foreground="{DynamicResource WhiteColor}"
                                    Command="{Binding MasterPasswordChangeCommand}" CommandParameter="{Binding ElementName=SetNewPasswordBox}"
                                    FontFamily="{DynamicResource ProximaRegular}" />
                                <Button  Style="{DynamicResource CancelButton_style}"
                                    Background="Transparent" HorizontalAlignment="Center"
                                    Command="{Binding MasterPasswordChangeCancelCommand}" CommandParameter="{Binding ElementName=SetNewPasswordBox}"
                                    Height="25" Width="100" Content="{DynamicResource Cancel}" Foreground="{DynamicResource BlackColor}"
                                    FontFamily="{DynamicResource ProximaRegular}" />
                            </StackPanel>
                            

                        </Grid>
                        <!--right side grid for set auto lock limit content-->
                        <Grid x:Name="SetAutoLockGrid" Grid.Column="1" Width="360" HorizontalAlignment="Left" Margin="4,0,0,0"
                              Visibility="{Binding SetAutoLockVisibility, Converter={StaticResource BoolToVisibility}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="28" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="28" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="10" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                            </Grid.RowDefinitions>
                            <!--header row-->
                            <!--<TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                                       Text="{DynamicResource AutoLock}" Foreground="{DynamicResource PasswordBossGreenColor}"
                                       HorizontalAlignment="Left" VerticalAlignment="Bottom" Padding="28,0,0,0"
                                       FontSize="13" FontFamily="{DynamicResource ProximaLight}" />-->
                            <!--first row-->
                            <TextBlock Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Text="{DynamicResource Never}" Foreground="{DynamicResource AccountSettingsAutoLockTimeLimit}" FontSize="13"
                                       FontFamily="{DynamicResource ProximaRegular}" />
                            <RadioButton Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right"
                                         VerticalAlignment="Center"
                                         HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                         IsChecked="{Binding AutoLockMinutes, Converter={StaticResource RadioButtonCheckedConverter}, 
                                         ConverterParameter={StaticResource intNever}, UpdateSourceTrigger=PropertyChanged}"
                                         Style="{DynamicResource AutoLockRadioButtonStyle}" />

                            <Border Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource AccountSettingsGrayBackgroundColor}"
                                    Margin="0,0,-2,0" />
                            <!--second row-->
                            <TextBlock Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Text="{DynamicResource _10minutes}" Foreground="{DynamicResource AccountSettingsAutoLockTimeLimit}" FontSize="13"
                                       FontFamily="{DynamicResource ProximaRegular}" />
                            <RadioButton Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right"
                                         VerticalAlignment="Center"
                                         HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                         IsChecked="{Binding AutoLockMinutes, Converter={StaticResource RadioButtonCheckedConverter}, 
                                         ConverterParameter={StaticResource intTenMinutes}, UpdateSourceTrigger=PropertyChanged}"
                                         Style="{DynamicResource AutoLockRadioButtonStyle}" />
                            <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource AccountSettingsGrayBackgroundColor}"
                                    Margin="0,0,-2,-1" />
                            <!--third row-->
                            <TextBlock Grid.Row="3" Grid.Column="1" HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Text="{DynamicResource _30minutes}" Foreground="{DynamicResource AccountSettingsAutoLockTimeLimit}" FontSize="13"
                                       FontFamily="{DynamicResource ProximaRegular}" />
                            <RadioButton Grid.Row="3" Grid.Column="1" HorizontalAlignment="Right"
                                         VerticalAlignment="Center"
                                         HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                         IsChecked="{Binding AutoLockMinutes, Converter={StaticResource RadioButtonCheckedConverter}, 
                                         ConverterParameter={StaticResource intThirtyMinutes}, UpdateSourceTrigger=PropertyChanged}"
                                         Style="{DynamicResource AutoLockRadioButtonStyle}" />
                            <Border Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource AccountSettingsGrayBackgroundColor}"
                                    Margin="0,0,-2,-2" />

                            <!--fourth row-->
                            <TextBlock Grid.Row="4" Grid.Column="1" HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Text="{DynamicResource _45minutes}" Foreground="{DynamicResource AccountSettingsAutoLockTimeLimit}" FontSize="13"
                                       FontFamily="{DynamicResource ProximaRegular}" />
                            <RadioButton Grid.Row="4" Grid.Column="1" HorizontalAlignment="Right"
                                         VerticalAlignment="Center"
                                         HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                         IsChecked="{Binding AutoLockMinutes, Converter={StaticResource RadioButtonCheckedConverter}, 
                                            ConverterParameter={StaticResource intFortyFiveMinutes}, UpdateSourceTrigger=PropertyChanged}"
                                         Style="{DynamicResource AutoLockRadioButtonStyle}" />
                            <Border Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource AccountSettingsGrayBackgroundColor}"
                                    Margin="0,0,-2,-3" />

                            <!--fifth row-->
                            <TextBlock Grid.Row="5" Grid.Column="1" HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Text="{DynamicResource _1hour}" Foreground="{DynamicResource AccountSettingsAutoLockTimeLimit}" FontSize="13"
                                       FontFamily="{DynamicResource ProximaRegular}" />
                            <RadioButton Grid.Row="5" Grid.Column="1" HorizontalAlignment="Right"
                                         VerticalAlignment="Center"
                                         HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                            IsChecked="{Binding AutoLockMinutes, Converter={StaticResource RadioButtonCheckedConverter}, 
                                            ConverterParameter={StaticResource intSixtyMinutes}, UpdateSourceTrigger=PropertyChanged}"
                                         Style="{DynamicResource AutoLockRadioButtonStyle}" />
                            <Border Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource AccountSettingsGrayBackgroundColor}"
                                    Margin="0,0,-2,-4" />

                            <!--sixth row-->
                            <TextBlock Grid.Row="6" Grid.Column="1" HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Text="{DynamicResource _1day}" Foreground="{DynamicResource AccountSettingsAutoLockTimeLimit}" FontSize="13"
                                       FontFamily="{DynamicResource ProximaRegular}" />
                            <RadioButton Grid.Row="6" Grid.Column="1" HorizontalAlignment="Right"
                                         VerticalAlignment="Center"
                                         HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                        IsChecked="{Binding AutoLockMinutes, Converter={StaticResource RadioButtonCheckedConverter}, 
                                            ConverterParameter={StaticResource intTwentyFourHours}, UpdateSourceTrigger=PropertyChanged}"
                                         Style="{DynamicResource AutoLockRadioButtonStyle}" />
                            <!--<Border Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="3"
                                                VerticalAlignment="Top" Height="1"
                                                Background="{DynamicResource AccountSettingsGrayBackgroundColor}" Margin="0,2,-2,0"/>-->


                        </Grid>
                        <!--right side grid for Change PIN content-->
                        <Grid x:Name="ChangePINGrid" Grid.Column="1"
                              Visibility="{Binding ChangePINVisibility, Converter={StaticResource BoolToVisibility}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="28" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="28" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="182" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <!--header row-->
                            <TextBlock Grid.Row="0" Grid.Column="1" VerticalAlignment="Bottom"
                                       HorizontalAlignment="Left"
                                       Text="{DynamicResource ExistingPin}"
                                       FontFamily="{DynamicResource ProximaRegular}"
                                       Margin="0,0,0,5"
                                       Foreground="{DynamicResource BlackColor}" FontWeight="Bold" />
                            <!--first row-->
                            <uc:PinUserControl x:Name="ExistingPinUc" Grid.Row="1" Grid.Column="1" 
                                               LostFocusCommand="{Binding ExistingPinLostFocusCommand}"
                                               PinChangedCommand="{Binding ExistingPinChangedCommand}"
                                               VerticalAlignment="Top" 
                                               Pin="{Binding ExistingPin}" >
                            </uc:PinUserControl>
                            <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding ExistingPinErrorMessage}" Foreground="{DynamicResource PasswordBossRedColor}" FontFamily="{DynamicResource ProximaRegular}"
                                        FontSize="13" TextAlignment="Left" />
                            <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Vertical" VerticalAlignment="Bottom">
                                <TextBlock VerticalAlignment="Bottom"
                                       HorizontalAlignment="Left"
                                       Text="{DynamicResource NewPin}" 
                                       FontFamily="{DynamicResource ProximaRegular}" 
                                       Foreground="{DynamicResource BlackColor}" FontWeight="Bold" />
                                <TextBlock Grid.Row="2" Grid.Column="1" VerticalAlignment="Bottom"
                                       HorizontalAlignment="Left"
                                       Text="{DynamicResource NumbersOnly}" 
                                       FontSize="11"
                                       FontFamily="{DynamicResource ProximaRegular}" 
                                       Margin="0,0,0,5"
                                       Foreground="{DynamicResource GrayColor}"/>
                            </StackPanel>
                            <!--second row-->
                            <uc:PinUserControl x:Name="NewPinUc" Grid.Row="4" Grid.Column="1" VerticalAlignment="Top" 
                                               Pin="{Binding NewPin}" IsEnabled="{Binding PinChangeEnabled}"
                                               PinChangedCommand="{Binding NewPinChangedCommand}"
                                               LostFocusCommand="{Binding NewPinLostFocusCommand}" />
                            <TextBlock Grid.Row="5" Grid.Column="1" Text="{Binding NewPinErrorMessage}" Foreground="{DynamicResource PasswordBossRedColor}" FontFamily="{DynamicResource ProximaRegular}"
                                        FontSize="13" TextAlignment="Left" />
                            <!--third row-->
                            <TextBlock Grid.Row="6" Grid.Column="1" VerticalAlignment="Bottom"
                                       HorizontalAlignment="Left"
                                       Text="{DynamicResource ConfirmPin}" 
                                       FontFamily="{DynamicResource ProximaRegular}" 
                                       Margin="0,0,0,5"
                                       Foreground="{DynamicResource BlackColor}" FontWeight="Bold" />
                            <uc:PinUserControl x:Name="ConfirmPinUc" Grid.Row="7" Grid.Column="1" VerticalAlignment="Top" 
                                               Pin="{Binding ConfirmPin}" IsEnabled="{Binding PinChangeEnabled}"
                                               PinChangedCommand="{Binding ConfirmPinChangedCommand}"
                                               LostFocusCommand="{Binding ConfirmPinLostFocusCommand}" />
                            <TextBlock Grid.Row="8" Grid.Column="1" Text="{Binding ConfirmPinErrorMessage}" Foreground="{DynamicResource PasswordBossRedColor}" FontFamily="{DynamicResource ProximaRegular}"
                                        FontSize="13" TextAlignment="Left" />
                            <StackPanel Grid.Row="9" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                                <Button  Style="{DynamicResource roundButton}"
                                    Background="{DynamicResource PasswordBossGreenColor}" HorizontalAlignment="Center"
                                    Height="25" Width="100" Content="{DynamicResource Save}" Foreground="{DynamicResource WhiteColor}"
                                    FontFamily="{DynamicResource ProximaRegular}" Command="{Binding PinChangeCommand}" />
                                <Button  Style="{DynamicResource CancelButton_style}"
                                    Background="Transparent" HorizontalAlignment="Center" Command="{Binding PinChangeCancelCommand}"
                                    Height="25" Width="100" Content="{DynamicResource Cancel}" Foreground="{DynamicResource BlackColor}"
                                    FontFamily="{DynamicResource ProximaRegular}" />
                            </StackPanel>
                            <!--<Button Grid.Row="4" Grid.Column="1" Style="{DynamicResource roundButton}"
                                    Background="{DynamicResource PasswordBossGreenColor}" Command="{Binding ChangeMasterPasswordSubmitCommand}"
                                    Height="30" Content="{DynamicResource Submit}" Foreground="{DynamicResource WhiteColor}"
                                    FontFamily="{DynamicResource ProximaRegular}" />-->

                        </Grid>
                    </Grid>
                </TabItem.Content>
            </TabItem>
            <!--Sync tab design-->
            <TabItem x:Name="tabSync" Height="30" Width="120" Background="{DynamicResource WhiteColor}">
                <TabItem.Header>
                    <TextBlock Text="{DynamicResource Devices}" FontSize="12" FontWeight="SemiBold"
                               FontFamily="{DynamicResource ProximaSemiBold}" />
                </TabItem.Header>
                <TabItem.Content>
                    <!--sync tab design grid-->
                    <Grid Background="{DynamicResource WhiteColor}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="30" />
                        </Grid.RowDefinitions>

                        <Grid x:Name="SyncDeviceGrid" Grid.Row="1" Grid.ColumnSpan="3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="240" />
                                <ColumnDefinition Width="395" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <!--first row-->
                            <TextBlock Grid.Row="0" Grid.Column="1" Text="{DynamicResource Name}"
                                       Foreground="{DynamicResource BlackColor}"
                                       FontWeight="Bold"
                                       FontSize="12.8"
                                       FontFamily="{DynamicResource ProximaRegular}" />
                            <TextBlock Grid.Row="0" Grid.Column="2" Text="{DynamicResource DateAdded}"
                                       Foreground="{DynamicResource BlackColor}"
                                       FontWeight="Bold"
                                       FontSize="12.8"
                                       HorizontalAlignment="Left"
                                       FontFamily="{DynamicResource ProximaRegular}" />
                            <Border Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3"
                                    BorderThickness="0,0,0,1" BorderBrush="{DynamicResource AccountSettingsGrayBackgroundColor}" Background="Transparent" />
                            <!--second row with grid-->
                            <!--<ScrollViewer Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3"
                                          VerticalScrollBarVisibility="Auto"
                                          Template="{DynamicResource CustomScrollViewerTemplate}">-->
                                <ListView x:Name="SyncDevicesList" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3"
                                          Margin="0,0,0,-1" BorderThickness="0"
                                          Background="Transparent" HorizontalAlignment="Stretch"
                                          ItemsSource="{Binding Path=SyncItemSource, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                          ItemTemplate="{DynamicResource SyncDeviceListTemplate}"
                                          HorizontalContentAlignment="Stretch"
                                          Template="{DynamicResource SecurityScoreListViewTemplate}"
                                          ItemContainerStyle="{DynamicResource SecureShareListViewStyle}" />
                            <!--  -->
                            <!--</ScrollViewer>-->
                        </Grid>
                    </Grid>
                </TabItem.Content>
            </TabItem>
            <!--category tab design-->
            <TabItem x:Name="tabCategory" Height="30" Width="120" Background="{DynamicResource WhiteColor}">
                <TabItem.Header>
                    <TextBlock Text="{DynamicResource Categories}" FontSize="12" 
                               FontWeight="SemiBold"
                               FontFamily="{DynamicResource ProximaSemiBold}" />
                </TabItem.Header>
                <TabItem.Content>
                    <!--category tab grid-->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="20" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>

                        <!--third row-->
                        <Grid x:Name="PasswordVaultGrid" Grid.Row="1" Grid.Column="1" VerticalAlignment="Stretch">
                            <Grid.Visibility>
                                <Binding
                                    Path="(dashboard:AccountSettingsViewModel.AccountSettingPasswordVaultVisibility)"
                                    UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource BoolToVisibility}" />
                            </Grid.Visibility>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="238" />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="348" />
                                <ColumnDefinition Width="40" />
                                <ColumnDefinition Width="40" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center"
                                        HorizontalAlignment="Left">
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="{DynamicResource Categories}"
                                           Foreground="{DynamicResource BlackColor}"
                                           FontWeight="Bold" Cursor="Hand"
                                           FontSize="12.8"
                                           FontFamily="{DynamicResource ProximaRegular}" HorizontalAlignment="Left">
                                    <TextBlock.InputBindings>
                                        <MouseBinding Command="{Binding SortCategoriesCommand}" MouseAction="LeftClick" />
                                    </TextBlock.InputBindings>
                                </TextBlock>
                                <StackPanel Margin="15,3,0,0" Grid.Row="0" Grid.Column="0" Orientation="Vertical"
                                            HorizontalAlignment="Left">
                                    <Image Width="8" Height="5" RenderOptions.BitmapScalingMode="HighQuality" Visibility="{Binding SortCategoriesAscendingVisibility, Converter={StaticResource BoolToVisibility}}"
                                           Source="{DynamicResource imgUpArrow}" Cursor="Hand">
                                        <Image.InputBindings>
                                            <MouseBinding MouseAction="LeftClick" Command="{Binding SortCategoriesAscendingCommand}"/>
                                        </Image.InputBindings>
                                    </Image>
                                    <Image Width="8" Height="5" Margin="0,2,0,0" Visibility="{Binding SortCategoriesDescendingVisibility, Converter={StaticResource BoolToVisibility}}"
                                           Source="{DynamicResource imgDownArrow1}" Cursor="Hand"
                                           RenderOptions.BitmapScalingMode="HighQuality">
                                        <Image.InputBindings>
                                            <MouseBinding MouseAction="LeftClick" Command="{Binding SortCategoriesDescendingCommand}"/>
                                        </Image.InputBindings>
                                    </Image>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center">
                                <TextBlock Text="{DynamicResource UseSecureBrowser}"
                                       Foreground="{DynamicResource BlackColor}"
                                       FontWeight="Bold"
                                       FontSize="12.8"
                                       FontFamily="{DynamicResource ProximaRegular}" HorizontalAlignment="Left" />

                                <ContentControl Style="{DynamicResource HelpControl}" Margin="0,-2,0,0" Tag="{DynamicResource InfoMessageCategories}" />
                            </StackPanel>
                            <!--first row-->
                            <Border Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="6" VerticalAlignment="Top"
                                    Height="1.5" Background="#B7BEC0" Margin="0,-2,0,0" />

                            <Button Height="24" Width="100" Background="{DynamicResource LightGrayTextForegroundColor}" BorderThickness="1" VerticalAlignment="Bottom"
                                Grid.Row="0" Grid.Column="5" HorizontalAlignment="Right"
                                 
                                Style="{DynamicResource roundAddButton}" Command="{Binding AddNewCategoryCommand}" Margin="0,-10,3,7">
                                <StackPanel Orientation="Horizontal" Background="Transparent" VerticalAlignment="Center">
                                    <!--<Image Margin="0,0,2,0" Source="{DynamicResource imgAdd}" Height="15"/>-->
                                    <TextBlock FontSize="15" FontWeight="Bold" VerticalAlignment="Center" FontFamily="{DynamicResource ProximaRegular}"
                                           Padding="0,3,5,0" Text="+" />
                                    <TextBlock Text="{DynamicResource AddNew}" FontSize="12" Padding="0,1,0,0"
                                           FontFamily="{DynamicResource ProximaRegular}"
                                           VerticalAlignment="Center" />
                                </StackPanel>
                            </Button>


                            <ListView Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="6" x:Name="CategoryList" BorderThickness="0" VerticalAlignment="Top"
                                          Background="Transparent" HorizontalAlignment="Stretch"
                                          ItemsSource="{Binding Path=AccountCategoryItemSource}" 
                                          HorizontalContentAlignment="Stretch"
                                          ItemContainerStyle="{DynamicResource SecureShareListViewStyle}"
                                      Template="{DynamicResource SecurityScoreListViewTemplate}">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid HorizontalAlignment="Stretch">
                                                <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="238" />
                                                    <ColumnDefinition Width="5" />
                                                <ColumnDefinition Width="348" />
                                                    <ColumnDefinition Width="40" />
                                                    <ColumnDefinition Width="40" />
                                                <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="30" />
                                                    <RowDefinition />
                                                </Grid.RowDefinitions>
                                                <TextBlock Text="{Binding category}" Grid.Column="0"
                                                           VerticalAlignment="Center"
                                                           FontSize="13"
                                                           Foreground="{DynamicResource AccountSettingTextColor}"
                                                           FontFamily="{DynamicResource ProximaRegular}" />
                                                <CheckBox Margin="0,0,0,0" Grid.Column="2"
                                                          Style="{DynamicResource togglebuttonstyleEmpty}"
                                                          HorizontalAlignment="Left" VerticalAlignment="Center"
                                                        IsChecked="{Binding browser}">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Checked">
                                                            <i:InvokeCommandAction Command="{Binding  ElementName=CategoryList,Path=DataContext.UseSecureBrowserCheckedCommand}" CommandParameter="{Binding uuid}"/>
                                                        </i:EventTrigger>

                                                        <i:EventTrigger EventName="Unchecked">
                                                            <i:InvokeCommandAction Command="{Binding ElementName=CategoryList,Path=DataContext.UseSecureBrowserUnCheckedCommand}" CommandParameter="{Binding uuid}"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </CheckBox>

                                                <Image Grid.Column="3" Height="14" Width="14"
                                                       HorizontalAlignment="Center"
                                                       RenderOptions.BitmapScalingMode="HighQuality"
                                                       Source="{DynamicResource imgEditNormal}" Visibility="{Binding delete, Converter={StaticResource BoolToVisibility}}">
                                                    <Image.InputBindings>
                                                        <MouseBinding MouseAction="LeftClick"
                                                                      Command="{Binding ElementName=CategoryList,Path=DataContext.EditCategoryCommand}"
                                                                      CommandParameter="{Binding uuid}" />
                                                    </Image.InputBindings>
                                                <Image.ToolTip>
                                                    <TextBlock Text="{DynamicResource Edit}" FontFamily="{DynamicResource ProximaRegular}"/>
                                                </Image.ToolTip>
                                                </Image>
                                                <Image Grid.Column="4" Height="14" Width="14"
                                                       RenderOptions.BitmapScalingMode="HighQuality"
                                                       HorizontalAlignment="Center"
                                                       Source="{DynamicResource imgTabDelete}" Visibility="{Binding delete, Converter={StaticResource BoolToVisibility}}">
                                                    <Image.InputBindings>
                                                        <MouseBinding MouseAction="LeftClick"
                                                                      Command="{Binding ElementName=CategoryList,Path=DataContext.DeleteCategoryCommand}"
                                                                      CommandParameter="{Binding uuid}" />
                                                    </Image.InputBindings>
                                                <Image.ToolTip>
                                                    <TextBlock Text="{DynamicResource Delete}" FontFamily="{DynamicResource ProximaRegular}"/>
                                                </Image.ToolTip>
                                                </Image>
                                            <Border Grid.Column="0" Grid.ColumnSpan="6" VerticalAlignment="Bottom"
                                                        Height="1.5" Background="{DynamicResource TextBoxBackground}" Margin="0,0,0,0" />
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                <!--<ListView.Template>
                                    <ControlTemplate TargetType="ItemsControl">
                                        <ScrollViewer Template="{DynamicResource CustomScrollViewerTemplate}"
                                          VerticalScrollBarVisibility="Auto">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </ControlTemplate>
                                </ListView.Template>-->
                                </ListView>
                        </Grid>
                    </Grid>
                </TabItem.Content>
            </TabItem>
            <!--Advanced tab design-->
            <TabItem x:Name="tabAdvanced" Height="30" Width="120" Background="{DynamicResource WhiteColor}">
                <!-- Saving on advanced tab after state of buttons has changed. No need for message dialog. -->
                <!--<i:Interaction.Triggers>
                    <i:EventTrigger EventName="LostFocus">
                        <i:InvokeCommandAction Command="{Binding TabLostFocusCommand}" CommandParameter="{Binding ElementName=tabAdvanced}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>-->
                <TabItem.Header>
                    <TextBlock Text="{DynamicResource Advanced}" FontSize="12" 
                               FontWeight="SemiBold"
                               FontFamily="{DynamicResource ProximaSemiBold}" />
                </TabItem.Header>
                <TabItem.Content>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="615" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="45" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="25" />
                            <RowDefinition Height="30" />
                        </Grid.RowDefinitions>
                        <Border Margin="-2,0,-2,0" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"
                                BorderThickness="0,0,0,1" BorderBrush="{DynamicResource AccountSettingsGrayBackgroundColor}" />
                        <TextBlock Grid.Row="0" Grid.Column="1" FontFamily="{DynamicResource ProximaLight}"
                                   FontSize="13" Foreground="{DynamicResource BlackColor}" HorizontalAlignment="Left" Text="{DynamicResource Settings}"
                                   VerticalAlignment="Bottom" FontWeight="Bold" Margin="0,0,0,4" />

                        <!-- first row-->
                        <StackPanel Grid.Row="1" Grid.Column="1"  Orientation="Horizontal">
                            <TextBlock Text="{DynamicResource AutomaticLoginByDefault}" TextWrapping="Wrap"
                                   HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="13"
                                   Foreground="{DynamicResource AccountSettingTextColor}"
                                   FontFamily="{DynamicResource ProximaRegular}" />
                            <ContentControl Style="{DynamicResource HelpControl}" VerticalAlignment="Center" Tag="{DynamicResource AutomaticLoginByDefaultInfo}" />
                        </StackPanel>
                        <CheckBox Grid.Row="1" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center"
                                  Style="{DynamicResource togglebuttonstyleEmpty}"
                                  VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                  Margin="0,0,-2,0" 
                                  IsChecked="{Binding AutoLogin}"/>
                        <Border Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom"
                                BorderBrush="{DynamicResource TextBoxBackground}"
                                BorderThickness="0,0,0,1" Margin="-2,0,-2,0" />
                        <!--second row-->
                        <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal">
                            <TextBlock Text="{DynamicResource ClearPassBrowser}"
                                   HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="13"
                                   Foreground="{DynamicResource AccountSettingTextColor}"
                                   FontFamily="{DynamicResource ProximaRegular}" />
                            <ContentControl Style="{DynamicResource HelpControl}" VerticalAlignment="Center" Tag="{DynamicResource SettingAdvancedClearSite}" />
                        </StackPanel>

                        <CheckBox Grid.Row="2" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center"
                                  Style="{DynamicResource togglebuttonstyleEmpty}"
                                  VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                  Margin="0,0,-2,0" 
                                  IsChecked="{Binding ClearPasswordsFromBrowsers}"/>

                        <!--<TextBlock Grid.Row="2" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="{DynamicResource ProximaRegular}"
                                   Background="Transparent">
                            <Hyperlink TextDecorations="{x:Null}" Foreground="#09CFA6"
                                       FontFamily="{DynamicResource ProximaRegular}" Command="{Binding ClearFromBrowsersCommand}">
                                <TextBlock Text="{DynamicResource Clear}" FontFamily="{DynamicResource ProximaRegular}"/>
                            </Hyperlink>
                        </TextBlock>-->
                        
                        <Border Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom"
                                BorderBrush="{DynamicResource TextBoxBackground}"
                                BorderThickness="0,0,0,1" Margin="-2,0,-2,0" />
                        <!--third row-->
                        <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal">
                            <TextBlock  Text="{DynamicResource DisablePassSaveBrowser}"
                                   HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="13"
                                   Foreground="{DynamicResource AccountSettingTextColor}"
                                   FontFamily="{DynamicResource ProximaRegular}" />
                            <ContentControl Style="{DynamicResource HelpControl}" VerticalAlignment="Center" Tag="{DynamicResource AccountSettingAdvancedHelperText3}" />
                        </StackPanel>
                        <CheckBox Grid.Row="3" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center"
                                  Style="{DynamicResource togglebuttonstyleEmpty}"
                                  VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                  Margin="0,0,-2,0" 
                                  IsChecked="{Binding TurnOffPassSaving}"/>
                        <Border Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom"
                                BorderBrush="{DynamicResource TextBoxBackground}"
                                BorderThickness="0,0,0,1" Margin="-2,0,-2,0" />
                        <!--fourth row-->
                        <StackPanel Orientation="Horizontal" Grid.Row="4" Grid.Column="1" >
                            <TextBlock Text="{DynamicResource DisableStatusMessages}"
                                   HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="13"
                                   Foreground="{DynamicResource AccountSettingTextColor}"
                                   FontFamily="{DynamicResource ProximaRegular}" />
                            <ContentControl Style="{DynamicResource HelpControl}" VerticalAlignment="Center" Tag="{DynamicResource AccountSettingAdvancedHelperText4}" />
                        </StackPanel>

                        <CheckBox Grid.Row="4" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center"
                                  Style="{DynamicResource togglebuttonstyleEmpty}"
                                  VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                  Margin="0,0,-2,0" 
                                  IsChecked="{Binding DisableStatusMessages}"/>
                        <Border Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom"
                                BorderBrush="{DynamicResource TextBoxBackground}"
                                BorderThickness="0,0,0,1" Margin="-2,0,-2,0" />
                        <!--fifth row-->
                        <StackPanel Orientation="Horizontal" Grid.Row="5" Grid.Column="1">
                            <TextBlock Text="{DynamicResource AutoStoreFormFillData}"
                                   HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="13"
                                   Foreground="{DynamicResource AccountSettingTextColor}"
                                   FontFamily="{DynamicResource ProximaRegular}" />
                            <ContentControl Style="{DynamicResource HelpControl}" VerticalAlignment="Center" Tag="{DynamicResource AutoStoreFormFillDataInfo}"/>
                        </StackPanel>
                        <CheckBox Grid.Row="5" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center"
                                  Style="{DynamicResource togglebuttonstyleEmpty}"
                                  VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                  Margin="0,0,-2,0" 
                                  IsChecked="{Binding AutoStoreData}"/>
                        <Border Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom"
                                BorderBrush="{DynamicResource TextBoxBackground}"
                                BorderThickness="0,0,0,1" Margin="-2,0,-2,0" />
                        <!--sisth row-->
                        <StackPanel Orientation="Horizontal" Grid.Row="6" Grid.Column="1" >
                            <TextBlock Text="{DynamicResource ClearSitesAutoSave}"
                                   HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="13"
                                   Foreground="{DynamicResource AccountSettingTextColor}"
                                   FontFamily="{DynamicResource ProximaRegular}" />
                            <ContentControl Style="{DynamicResource HelpControl}" VerticalAlignment="Center" Tag="{DynamicResource ClearSitesAutoSaveInfo}" />
                        </StackPanel>
                        <TextBlock Grid.Row="6" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="{DynamicResource ProximaRegular}"
                                   Background="Transparent">
                            <Hyperlink TextDecorations="{x:Null}" Foreground="#09CFA6"
                                       FontFamily="{DynamicResource ProximaRegular}" Command="{Binding ClearSitesAutoSaveCommand}">
                                <TextBlock Text="{DynamicResource Clear}" FontFamily="{DynamicResource ProximaRegular}" />
                            </Hyperlink>
                        </TextBlock>
                        <Border Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom"
                                BorderBrush="{DynamicResource TextBoxBackground}"
                                BorderThickness="0,0,0,1" Margin="-2,0,-2,0" />
                        <!--seventh row-->
                        <StackPanel Grid.Row="7" Grid.Column="1" Orientation="Horizontal">
                            <TextBlock  Text="{DynamicResource RequireMasterPasswordForAllFormFilling}"
                                   HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="13"
                                   Foreground="{DynamicResource AccountSettingTextColor}"
                                   FontFamily="{DynamicResource ProximaRegular}" />
                            <ContentControl Style="{DynamicResource HelpControl}" VerticalAlignment="Center" Tag="{DynamicResource RequireMasterPasswordForAllFormFillingInfo}" />
                        </StackPanel>

                        <CheckBox Grid.Row="7" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center"
                                  Style="{DynamicResource togglebuttonstyleEmpty}"
                                  VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                  Margin="0,0,-2,0" 
                                  IsChecked="{Binding RequireMasterPasswordForAll}"/>
                        <Border Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom"
                                BorderBrush="{DynamicResource TextBoxBackground}"
                                BorderThickness="0,0,0,1" Margin="-2,0,-2,0" />

                        <Border Grid.Row="9" Grid.Column="1" Grid.ColumnSpan="2" Height="1"
                                    VerticalAlignment="Top" Background="{DynamicResource AccountSettingsGrayBackgroundColor}" />
                        <!--<Button Grid.Row="10" Grid.Column="1" Grid.ColumnSpan="2" Height="25" Width="100" Command="{Binding SaveTabAdvancedDataCommand}"
                                Content="{DynamicResource Save}" Background="{DynamicResource PasswordBossGreenColor}" Foreground="{DynamicResource WhiteColor}"
                                FontWeight="SemiBold" Style="{DynamicResource roundButton}" />-->

                    </Grid>
                </TabItem.Content>
            </TabItem>

        </TabControl>
        <uc:CustomMessageBoxUserControl 
            MessageBoxDialogVisibility="{Binding MessageBoxAccountSettingsChangedVisibility}" 
            CustomMessageBoxType="Confirmation" 
            MessageBoxDialogCancelButtonText="{DynamicResource Discard}" 
            MessageBoxDialogConfirmButtonText="{DynamicResource Save}" 
            MessageBoxDialogHeaderText="{DynamicResource SettingsChanged}"
            MessageBoxDialogText="{DynamicResource SettingsChangedConfirmText}"
            MessageBoxDialogConfirmCommand="{Binding MessageBoxAccountSettingsChangedConfirmCommand}"
            MessageBoxDialogCancelCommand="{Binding MessageBoxAccountSettingsChangedCancelCommand}"
            />

        <uc:CustomMessageBoxUserControl 
                                                MessageBoxDialogVisibility="{Binding MessageBoxMasterPasswordChangedVisibility}" 
                                                CustomMessageBoxType="Info" 
                                                MessageBoxDialogOkButtonText="{DynamicResource OK}"
                                                MessageBoxDialogHeaderText="{DynamicResource MasterPassChangedTitle}" 
                                                MessageBoxDialogText="{DynamicResource MasterPassChangedText}"
                                                MessageBoxDialogOkCommand="{Binding MessageBoxMasterPasswordChangedOKCommand}"
                                                />
    </Grid>
</UserControl>
