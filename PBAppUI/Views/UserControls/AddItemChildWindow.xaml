<uc:CustomChildWindow x:Class="PasswordBoss.Views.UserControls.AddItemChildWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
        xmlns:uc="clr-namespace:PasswordBoss.UserControls;assembly=theme"
        mc:Ignorable="d"  >
    <uc:CustomChildWindow.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
        <telerik:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibility"/>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ListBoxItemBorderStyle" TargetType="{x:Type Border}">
            <Style.Triggers>
                <Trigger Property="Border.IsMouseOver" Value="True">
                    <Setter Property="Border.BorderBrush" Value="{DynamicResource PasswordBossGreenColor}" />
                </Trigger>
                <DataTrigger Binding="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor,  AncestorType={x:Type ListBoxItem}}}" Value="True">
                    <Setter Property="Border.BorderBrush" Value="{DynamicResource PasswordBossGreenColor}" />
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>
        
        <Style x:Key="AddItem_ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Margin" Value="12 1"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ItemsPanelTemplate x:Key="ThreeColumnsItems">
            <UniformGrid Columns="3" />
        </ItemsPanelTemplate>

        <ItemsPanelTemplate x:Key="FourColumnsItems">
            <UniformGrid Columns="4" />
        </ItemsPanelTemplate>
        

    </uc:CustomChildWindow.Resources>
    <uc:CustomChildWindow.TitelContent>
        <StackPanel>
            <TextBlock  Margin="0 23 0 0" FontFamily="{DynamicResource OBProximaRegular}" x:Name="txtTitel"  TextWrapping="Wrap"  Grid.Column="1" Foreground="{DynamicResource SettingsTextLableForeground}" FontSize="30"/>
            <TextBlock x:Name="txtSubTitel" TextWrapping="Wrap"  Margin="0 4 0 13" VerticalAlignment="Center"  Foreground="{DynamicResource  LightGrayTextForegroundColor}" FontSize="16" />
        </StackPanel>       
    </uc:CustomChildWindow.TitelContent>
    <Grid Margin="0 20">
        <ListBox x:Name="typesList" SelectionChanged="typesList_SelectionChanged" BorderThickness="0" VerticalContentAlignment="Top" ItemContainerStyle="{StaticResource AddItem_ListBoxItemStyle}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border  Style="{StaticResource ListBoxItemBorderStyle}">
                    <Grid Width="136" HorizontalAlignment="Center" VerticalAlignment="Stretch" >
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Border BorderBrush="{DynamicResource TextboxBorderbrush}" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="71" Background="{Binding BackgoundColor}">
                            <Image Source="{Binding Icon}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None"/>
                        </Border>
                        <TextBlock Grid.Row="1" Text="{Binding ItemTitel}" TextWrapping="Wrap"  Margin="5 4 0 5" HorizontalAlignment="Center" VerticalAlignment="Center"
                                          Foreground="{DynamicResource  LightGrayTextForegroundColor}" FontSize="16" TextAlignment="Center" />
                    </Grid>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="3"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
        </ListBox>
        <ListBox x:Name="childTypesList" SelectionChanged="childTypesList_SelectionChanged" BorderThickness="0" VerticalContentAlignment="Top" ItemContainerStyle="{StaticResource AddItem_ListBoxItemStyle}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border  Style="{StaticResource ListBoxItemBorderStyle}">
                        <Grid Width="130" HorizontalAlignment="Center" VerticalAlignment="Top" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="65"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <Button x:Name="addBtn"  Visibility="{Binding IsEmpty,Converter={StaticResource BoolToVisibility}}" Width="40" Height="40"  HorizontalAlignment="Center" VerticalAlignment="Center" Cursor="Hand">
                                <Button.Content>
                                    <Image Height="20" Width="20" Source="{DynamicResource plusThinRed}"/>
                                </Button.Content>
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Grid>
                                            <Ellipse Stroke="{DynamicResource PasswordBossRedColor}" />
                                            <ContentPresenter HorizontalAlignment="Center"  VerticalAlignment="Center"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>

                            <Border BorderBrush="{DynamicResource TextboxBorderbrush}" Visibility="{Binding IsEmpty,Converter={StaticResource InvertedBooleanToVisibility}}" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Background="{Binding BackgoundColor}">
                                <Image Source="{Binding Icon}"  HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None"/>
                            </Border>

                            <TextBlock Grid.Row="1" Text="{Binding ItemTitel}" TextWrapping="Wrap"  Margin="5 4 0 5" HorizontalAlignment="Center" VerticalAlignment="Center"
                                          Foreground="{DynamicResource  LightGrayTextForegroundColor}" FontSize="16" TextAlignment="Center" />
                        </Grid>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>            
        </ListBox>
    </Grid>
</uc:CustomChildWindow>
