<UserControl x:Class="PasswordBoss.Views.UserControls.SelectFolderControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PasswordBoss.Views.UserControls"
             mc:Ignorable="d" >
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibility"/>
        <telerik:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibility"/>

        <DataTemplate x:Key="FolderTemplate">
            <Grid>
                <StackPanel Orientation="Horizontal">
                    <TextBlock    Margin="0" Text="{Binding Name}" TextWrapping="Wrap"/>
                </StackPanel>
            </Grid>

        </DataTemplate>

        <HierarchicalDataTemplate ItemsSource="{Binding ChildList}" x:Key="HierarchicalDataTemplate">
            <ContentControl ContentTemplate="{StaticResource FolderTemplate}" Content="{Binding .}"/>
        </HierarchicalDataTemplate>
    </UserControl.Resources>
    <StackPanel  x:Name="folderTreeViewButton" Visibility="{Binding ElementName=LeftMenuExpander,Path=IsExpanded,Converter={StaticResource BooleanToVisibility}}" Background="White">
        <Button Style="{DynamicResource CommonButtonStyle}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Visibility="{Binding ShowMenuTreeView,Converter={StaticResource InvertedBooleanToVisibility}}"
                                Command="{Binding ShowHideFolderTreeCommand}" Height="27" Padding="0" Background="Transparent" BorderThickness="0">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding SelectedFolderText,Mode=TwoWay}" Margin="13,0,10,0"  TextWrapping="Wrap" FontSize="12" FontFamily="{DynamicResource ProximaRegular}" Foreground="{DynamicResource SettingsTextLableForeground}" HorizontalAlignment="Left"  />
                <Path Grid.Column="1" Data="M0,0L2,0 1,1z" Fill="{DynamicResource SettingsTextLableForeground}" Margin="0 0 10 0" HorizontalAlignment="Center" Height="6"  Stretch="Fill" Stroke="Black" VerticalAlignment="Center" Width="9"/>
            </Grid>
        </Button>
        
     

        <Rectangle Grid.Row="2" VerticalAlignment="Top" Margin="0 0 6 0" HorizontalAlignment="Stretch" Height="0.5" Fill="{DynamicResource LightGrayTextForegroundColor}"/>

        <Grid x:Name="treeViewGrid" Visibility="{Binding ShowMenuTreeView,Converter={StaticResource BooleanToVisibility}}"   Margin="0 3 0 0" >
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Button  Content="{DynamicResource MenuAllFolders}" Margin="19 3 9 5"  Command="{Binding ShowAllCommand}">
                <Button.Style>
                    <Style  TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Foreground" Value="{DynamicResource SettingsTextLableForeground}"/>
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="3 4 0 0 "/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="#23B194" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <StackPanel Orientation="Horizontal"  HorizontalAlignment="Right" Margin="0 0 10 0">
                <Button  Style="{DynamicResource CommonButtonStyle}"  Command="{Binding PinPopupCommand}" Margin="0 0 3 0">
                    <Path Fill="{DynamicResource LightGrayTextForegroundColor}" Width="8" Height="10" Stretch="Fill"
                        Data="M331.8,228C331.8,228,331.8,228,331.8,228c-1.2-0.5-2.4-1-3.5-1.7c-7-4-12.2-10.9-13.9-19.2L295.9,89.4l-0.2-5.8
	                        c0-7.1,4.1-10.2,10-13l0,0c0.7-0.3,1.4-0.6,2.1-0.9c7.2-3.4,12.1-7.8,12.1-16.3c0-20.1-6.5-21.4-18.2-21.4h-91.3
	                        c-11.7,0-18.2,1.2-18.2,21.4c0,8.5,4.9,12.9,12.1,16.3c0.7,0.3,1.4,0.5,2.1,0.9c0,0,0,0,0,0c5.9,2.9,10,6,10,13l-0.2,5.8
	                        l-18.5,117.7c-1.7,8.3-6.9,15.2-13.9,19.2c-1.1,0.7-2.3,1.2-3.5,1.7c0,0,0,0,0,0c-19.7,10.2-36.2,30.8-36.2,54.7
	                        c0,15.9,3.5,21.3,15.2,21.3H240l12,176h8l12-176h80.8c11.7,0,15.2-4.7,15.2-21.3C368,258.8,351.5,238.2,331.8,228z">                        <Path.Style>                            <Style TargetType="Path">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPined}" Value="True">
                                        <Setter Property="LayoutTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="90"/>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsPined}" Value="False">
                                        <Setter Property="LayoutTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="0"/>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>                    </Path>                </Button>
                <Button   Style="{DynamicResource NoHoverEffectButtonStyle}" BorderThickness="0" Command="{Binding ClosePopupCommand}"  HorizontalAlignment="Right" Background="Transparent"  >
                    <Image Source="{DynamicResource imgCloseAlertBig}" Height="10" />
                </Button>
            </StackPanel>
            <telerik:RadTreeView Grid.Row="1" x:Name="treeView"  Margin="2" AllowDrop="True" Grid.ColumnSpan="2" HorizontalAlignment="Stretch"
                               ItemContainerStyle="{DynamicResource MenuFolderTreeViewItemStyle}" SelectedItem="{Binding SelectedFolder,Mode=TwoWay}" SelectionMode="Single"
                               ItemTemplate="{StaticResource HierarchicalDataTemplate}"   ItemsSource="{Binding FoldersTreeCollection}" />
            <Rectangle Fill="{StaticResource LightGrayTextForegroundColor}" Height="1" HorizontalAlignment="Stretch" Grid.Row="2" VerticalAlignment="Top" Margin="9 0"/>

            <Button Grid.Row="3" Content="Add new folder" Margin="19 3 9 10"  Command="{Binding AddNewFolderCommand}">
                <Button.Style>
                    <Style  TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Foreground" Value="{StaticResource SettingsTextLableForeground}"/>
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="3 4 0 0 "/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
    </StackPanel>

</UserControl>
