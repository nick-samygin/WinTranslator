<Window x:Class="PasswordBoss.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        mc:Ignorable="d"
        xmlns:userControls="clr-namespace:PasswordBoss.Views.UserControls"
        xmlns:accountSettingsUserControls="clr-namespace:PasswordBoss.Views.AccountSettings"
        xmlns:viewModels="clr-namespace:PasswordBoss.ViewModel"
        xmlns:accountSettingsViewModel="clr-namespace:PasswordBoss.ViewModel.AccountSettings"
        xmlns:helpers="clr-namespace:PasswordBoss.Helpers"
        xmlns:themeUserControls="clr-namespace:PasswordBoss.UserControls;assembly=theme"
        d:DesignHeight="300" d:DesignWidth="300"  AllowsTransparency="False"
        AllowDrop="False" Height="650" MinWidth="1024" ResizeMode="NoResize" MinHeight="725"
        WindowStartupLocation="CenterScreen" Style="{DynamicResource MetroWindowStyle}"
        Width="1024" Icon="pack://application:,,,/image;component/images/favicon.ico" PreviewMouseDown="MouseHasInteraction" PreviewKeyDown="KeyboardHasInteraction" >
   <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibility"/>
        <telerik:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibility"/>
        
        <viewModels:MenuViewModel x:Key="menuViewModel" />
        <accountSettingsViewModel:AccountSettingsViewModel x:Key="accountSettingsViewModel" />

        <helpers:IsExpandedToWidthConverter x:Key="IsExpandedToWidthConverter" />
        
        <Style x:Key="MetroWindowStyle" TargetType="{x:Type Window}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="WindowStyle" Value="None" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Grid Background="{DynamicResource MainWindowBackgroundColor}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="5" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Grid.Column="0" Fill="{DynamicResource MainWindowBackgroundColor}" Height="7" Canvas.ZIndex ="33333"
                                               HorizontalAlignment="Left" Name="topLeft" VerticalAlignment="Top"
                                               Width="4" MouseEnter="DisplayResizeCursor" MouseLeave="ResetCursor"
                                               PreviewMouseDown="Resize" />
                            <Rectangle Grid.Column="0" Fill="{DynamicResource MainWindowBackgroundColor}" HorizontalAlignment="Left" Canvas.ZIndex ="33333"
                                                           Margin="0,7,0,15" Name="left" VerticalAlignment="Stretch"
                                                           Width="4" MouseEnter="DisplayResizeCursor"
                                                           MouseLeave="ResetCursor" PreviewMouseDown="Resize" />
                            <Rectangle Grid.Column="0" Fill="{DynamicResource MainWindowBackgroundColor}" Height="7" Canvas.ZIndex ="33333"
                                               HorizontalAlignment="Left" Name="bottomLeft" VerticalAlignment="Bottom"
                                               Width="4" MouseEnter="DisplayResizeCursor" MouseLeave="ResetCursor"
                                               PreviewMouseDown="Resize" />
                            <Rectangle Grid.Column="2" Fill="{DynamicResource MainWindowBackgroundColor}" Height="7" HorizontalAlignment="Right" Canvas.ZIndex ="33333"
                                                           Margin="0,0,0,0" Name="topRight" VerticalAlignment="Top"
                                                           Width="4" MouseEnter="DisplayResizeCursor"
                                                           MouseLeave="ResetCursor" PreviewMouseDown="Resize" />
                            <Rectangle Grid.Column="2" Fill="{DynamicResource MainWindowBackgroundColor}" HorizontalAlignment="Right" Canvas.ZIndex ="33333"
                                                           Margin="0,7,0,7" Name="right" VerticalAlignment="Stretch"
                                                           Width="4" MouseEnter="DisplayResizeCursor"
                                                           MouseLeave="ResetCursor" PreviewMouseDown="Resize" />
                            <Rectangle Grid.Column="2" Fill="{DynamicResource MainWindowBackgroundColor}" Height="7" HorizontalAlignment="Right" Canvas.ZIndex ="33333"
                                                           Margin="0,0,0,0" Name="bottomRight" VerticalAlignment="Bottom"
                                                           Width="4" MouseEnter="DisplayResizeCursor"
                                                           MouseLeave="ResetCursor" PreviewMouseDown="Resize" />
                            <Border Grid.Column="0" Grid.ColumnSpan="3" x:Name="MainBorder" BorderThickness="5,1,5,1" Background="{DynamicResource MainWindowBackgroundColor}"
                                    BorderBrush="{DynamicResource MainWindowBackgroundColor}">
                                <DockPanel LastChildFill="True" Margin="0,0,0,0">

                                    <Rectangle DockPanel.Dock="Bottom" Stroke="{x:Null}" Fill="{DynamicResource MainWindowBackgroundColor}"
                                               Margin="2,0,2,0" Name="bottom" MouseEnter="DisplayResizeCursor"
                                               MouseLeave="ResetCursor" PreviewMouseDown="Resize" Height="2"
                                               VerticalAlignment="Bottom" />

                                    <Border x:Name="PART_TITLEBAR"
                                            Margin="0,0,-3,0" Height="22" DockPanel.Dock="Top"
                                            MouseLeftButtonDown="PART_TITLEBAR_MouseLeftButtonDown"
                                            Background="Transparent">

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="2" />
                                            </Grid.ColumnDefinitions>
                                            <Rectangle Grid.Column="1" Grid.ColumnSpan="2" Margin="0,0,0,0"
                                                       DockPanel.Dock="Top" Name="top" Fill="{DynamicResource MainWindowBackgroundColor}"
                                                       MouseEnter="DisplayResizeCursor" MouseLeave="ResetCursor"
                                                       PreviewMouseDown="Resize" Height="2" VerticalAlignment="Top"
                                                       AllowDrop="True" />

                                            <userControls:MenuUserControl Name="menuUserControl" Grid.Column="1" DataContext="{StaticResource menuViewModel}" />
                                            <userControls:CustomMessageBoxUserControl 
                                                DataContext="{StaticResource menuViewModel}"
                                                MessageBoxDialogVisibility="{Binding MessageBoxIEUninstalledVisibility}" 
                                                CustomMessageBoxType="Info" 
                                                MessageBoxDialogOkButtonText="{DynamicResource OK}"
                                                MessageBoxDialogHeaderText="{DynamicResource IEExtensionRemoved}"
                                                MessageBoxDialogText="{DynamicResource IEExtensionRemovedConfirmText}"
                                                MessageBoxDialogOkCommand="{Binding MessageBoxAccountIEUninstalledOkCommand}"
                                                />

                                            <userControls:CustomMessageBoxUserControl 
                                                DataContext="{StaticResource menuViewModel}"
                                                MessageBoxDialogVisibility="{Binding MessageBoxFFUninstalledVisibility}" 
                                                CustomMessageBoxType="Info" 
                                                MessageBoxDialogOkButtonText="{DynamicResource OK}"
                                                MessageBoxDialogHeaderText="{DynamicResource FFExtensionRemoved}"
                                                MessageBoxDialogText="{DynamicResource FFExtensionRemovedConfirmText}"
                                                MessageBoxDialogOkCommand="{Binding MessageBoxAccountFFUninstalledOkCommand}"
                                                />

                                            <userControls:CustomMessageBoxUserControl 
                                                DataContext="{StaticResource menuViewModel}"
                                                MessageBoxDialogVisibility="{Binding MessageBoxImportErrorVisibility}" 
                                                CustomMessageBoxType="Info" 
                                                MessageBoxDialogOkButtonText="{DynamicResource OK}"
                                                MessageBoxDialogHeaderText="{Binding MessageBoxImportErrorMessageNumberOfPasswords}"
                                                MessageBoxDialogText="{Binding MessageBoxImportErrorMessageNumberOfPasswordsDescription}"
                                                MessageBoxDialogOkCommand="{Binding MessageBoxImportErrorVisibilityOKCommand}"
                                                />

                                            <userControls:CustomMessageBoxUserControl 
                                                DataContext="{StaticResource menuViewModel}"
                                                MessageBoxDialogVisibility="{Binding MessageBoxExportSuccesfullVisibility}" 
                                                CustomMessageBoxType="Info" 
                                                MessageBoxDialogOkButtonText="{DynamicResource OK}"
                                                MessageBoxDialogHeaderText="{DynamicResource ExportSuccessfulHeader}"
                                                MessageBoxDialogText=""
                                                MessageBoxDialogOkCommand="{Binding MessageBoxExportSuccessfullCommand}"
                                                />

                                            <TextBlock Grid.ColumnSpan="3" Margin="0,0,0,0" VerticalAlignment="Center"
                                                       TextWrapping="NoWrap" HorizontalAlignment="Center"
                                                       Text="{TemplateBinding Title}" FontSize="14" />
                                            <Grid Grid.Column="2" Margin="0,0,0,0" VerticalAlignment="Stretch"
                                                  HorizontalAlignment="Right">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="32" />
                                                    <ColumnDefinition Width="32" />
                                                    <ColumnDefinition Width="46" />
                                                </Grid.ColumnDefinitions>
                                                <Button Grid.Column="3" x:Name="PART_CLOSE" BorderThickness="0,0,0,0" Focusable="False"
                                                        Template="{DynamicResource TopleftClosebtn}"
                                                        Click="PART_CLOSE_Click">

                                                    <!--<Path Data="F1M54.0573,47.8776L38.1771,31.9974 54.0547,16.1198C55.7604,14.4141 55.7604,11.6511 54.0573,9.94531 52.3516,8.23962 49.5859,8.23962 47.8802,9.94531L32.0026,25.8229 16.1224,9.94531C14.4167,8.23962 11.6511,8.23962 9.94794,9.94531 8.24219,11.6511 8.24219,14.4141 9.94794,16.1198L25.8255,32 9.94794,47.8776C8.24219,49.5834 8.24219,52.3477 9.94794,54.0534 11.6511,55.7572 14.4167,55.7585 16.1224,54.0534L32.0026,38.1745 47.8802,54.0534C49.5859,55.7585 52.3516,55.7572 54.0573,54.0534 55.7604,52.3477 55.763,49.5834 54.0573,47.8776z" 
                                                      Stretch="Uniform" Fill="#FBFBFB" Stroke="White" Width="10" Margin="0,0,0,0" ></Path>-->
                                                </Button>
                                                <Button Grid.Column="1" x:Name="PART_MAXIMIZE_RESTORE" Focusable="False"
                                                        BorderThickness="0,0,0,0"
                                                        Template="{DynamicResource TopleftMaxbtn}"
                                                        Click="PART_MAXIMIZE_RESTORE_Click">
                                                    <!--<Image Source="/resources/images/maximise.png" Stretch="Fill"/>-->
                                                    <!--<Path Data="F1 M 34,17L 43,17L 43,23L 34,23L 34,17 Z M 34.5,19L 34.5,22.5 42.5,22.5L 42.5,19L 35,19 Z"
                                                      Stretch="Uniform" Fill="White" Stroke="White" Width="15" Margin="0,0,0,0" ></Path>-->
                                                </Button>
                                                <Button Grid.Column="0" x:Name="PART_MINIMIZE" Focusable="False"
                                                        BorderThickness="0,0,0,0"
                                                        Template="{DynamicResource TopleftMinbtn}"
                                                        Click="PART_MINIMIZE_Click" VerticalContentAlignment="Bottom">
                                                    <!--<Image Source="/resources/images/minimise.png" Stretch="Fill" />-->
                                                    <!--<Path Data="M0,20L53.333,20 53.333,8.888 1,8.888z" 
                                                          Stretch="Uniform" Fill="White" Stroke="White" Width="15" Margin="0,0,0,5"></Path>-->
                                                </Button>

                                            </Grid>
                                            <StackPanel Grid.Column="4" Orientation="Vertical">
                                                <!--<Rectangle Fill="{DynamicResource MainWindowBackgroundColor}" Height="7" HorizontalAlignment="Right"
                                                           Margin="0,0,0,0" Name="topRight" VerticalAlignment="Top"
                                                           Width="2" MouseEnter="DisplayResizeCursor"
                                                           MouseLeave="ResetCursor" PreviewMouseDown="Resize" />-->
                                                <!--<Rectangle Fill="{DynamicResource MainWindowBackgroundColor}" Height="15" HorizontalAlignment="Right"
                                                           Margin="0,0,0,5" Name="right" VerticalAlignment="Bottom"
                                                           Width="2" MouseEnter="DisplayResizeCursor"
                                                           MouseLeave="ResetCursor" PreviewMouseDown="Resize" />-->
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                    <AdornerDecorator DockPanel.Dock="Bottom">
                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                                          Content="{TemplateBinding Content}"
                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}" />
                                    </AdornerDecorator>
                                </DockPanel>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Window}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}">
                                    <Grid>
                                        <AdornerDecorator>
                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                                              Content="{TemplateBinding Content}"
                                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" />
                                        </AdornerDecorator>
                                        <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right"
                                                    IsTabStop="False" Visibility="Collapsed" VerticalAlignment="Bottom" />
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                            <Condition Property="WindowState" Value="Normal" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible" />
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <SolidColorBrush x:Key="Button.Static.Background" Color="Transparent" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="Transparent" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="Transparent" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="Transparent" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="Transparent" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="Transparent" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="Transparent" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="Transparent" />

        <Style x:Key="ComboboxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisualCustomStyle}" />
            <Setter Property="Background" Value="{DynamicResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{DynamicResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border"
                                        Value="{DynamicResource Button.MouseOver.Background}" />
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{DynamicResource Button.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border"
                                        Value="{DynamicResource Button.Pressed.Background}" />
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{DynamicResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border"
                                        Value="{DynamicResource Button.Disabled.Background}" />
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{DynamicResource Button.Disabled.Border}" />
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter"
                                        Value="{DynamicResource Button.Disabled.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListBoxItem}">
            <Style.Triggers>
                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="{DynamicResource AlertsAndNotificationsBackgroundColor}" />
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="{DynamicResource AlertsAndNotificationsBackgroundColor}" />
                </Trigger>
                <Trigger Property="IsSelected" Value="false" />
                <Trigger Property="IsMouseOver" Value="false" />
            </Style.Triggers>
        </Style>


        
    </Window.Resources>

    <Grid Name="MainContent" Background="{DynamicResource DashboardGridBackground}" Margin="-2,0,-2,0" MouseLeftButtonUp="ResetCursor">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Background="{DynamicResource DashboardGridBackground}" Margin="-2,0,-2,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2" />
            </Grid.ColumnDefinitions>
            <Border Grid.Row="0" Grid.Column="1" Background="{DynamicResource MainWindowGrayBackgroundColor}" BorderBrush="{DynamicResource LightGrayTextForegroundColor}" BorderThickness="0 1">
            <Grid Name="HeaderGrid"     IsHitTestVisible="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="180" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Grid.Column="0" Background="{DynamicResource PasswordBossBlackBackgroundColor}">
                    <Image Source="{DynamicResource imgLoginLogoGreen}" Margin="0,0,0,0" HorizontalAlignment="Center"
                           VerticalAlignment="Center" Height="30" Width="150" RenderOptions.BitmapScalingMode="HighQuality" />
                </Grid>
                <Grid Grid.Row="0" Grid.Column="2" Height="40">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="auto" MinWidth="320" />
                        <ColumnDefinition MaxWidth="465" Width="*" />
                    </Grid.ColumnDefinitions>
                        <Button x:Name="addBtn" Click="addBtn_Click" Width="30" Height="30" Foreground="White" FontSize="24" Margin="12 5" Cursor="Hand">
                            <Button.Content>
                                <Image Height="14" Width="14" Source="{DynamicResource plus_thin_white}"/>
                            </Button.Content>
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Grid>
                                        <Ellipse Fill="{DynamicResource PasswordBossRedColor}" />
                                        <ContentPresenter HorizontalAlignment="Center"  VerticalAlignment="Center"/>
                        </Grid>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                        <Grid x:Name="topGrid"  Grid.Column="1" >
                        <themeUserControls:TopPanelTextBox  x:Name="topPanelTextBox"/>
                        <themeUserControls:ViewByTopPanel   x:Name="viewByTopPanel"/>
                    </Grid>
                        <Grid Grid.Row="0" Grid.Column="2" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                            <Rectangle Width="1" VerticalAlignment="Stretch" Fill="{DynamicResource LightGrayTextForegroundColor}"/>
                            <userControls:SecurityNotificationUserControl  x:Name="alertMessagesButton"   Grid.Column="1"  />
                            <userControls:AlertButtonUserControl x:Name="alertButton" Grid.Column="2" />
                            <userControls:MainSearchBox x:Name="ucMainSearchBox" Grid.Column="3" Margin="20,0,32,0"   MinWidth="100" HorizontalAlignment="Stretch"></userControls:MainSearchBox>
                    </Grid>
                </Grid>
            </Grid>
            </Border>

            <Grid x:Name="LayoutGrid" Grid.Row="1" Grid.Column="1" Background="{DynamicResource WhiteColor}" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MaxWidth="180" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Grid Background="{DynamicResource PasswordBossBlackBackgroundColor}" Grid.RowSpan="2" MaxWidth="180"  >
                        <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>                        
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                    <userControls:SelectFolderControl x:Name="selectFolderControl" Margin="1" Visibility="{Binding ElementName=LeftMenuExpander,Path=IsExpanded,Converter={StaticResource BooleanToVisibility}}"/>

                    <Expander x:Name="LeftMenuExpander" Grid.Row="1"
                          BorderThickness="0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Stretch" Collapsed="LeftMenuExpander_Collapsed"
                          ExpandDirection="Right" VerticalContentAlignment="Bottom"
                          IsExpanded="True" Style="{DynamicResource MainMenuExpanderStyle}"
                          Height="Auto" IsHitTestVisible="True">
                    <Expander.Header>
                            <StackPanel Name="MenuPanel" Margin="0,0,0,5" Width="{Binding ElementName=LeftMenuExpander,Path=IsExpanded,Converter={StaticResource IsExpandedToWidthConverter}}">
                            </StackPanel>
                        </Expander.Header>

                     <Grid x:Name="OtherItemsContainerGrid"   >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>

                            <Border Grid.Row="0" Grid.Column="0" BorderThickness="0, 0, 0, 0.5" BorderBrush="{DynamicResource LightGrayTextForegroundColor}">
                                <userControls:SetupProgressUserControl Margin="15,0,0,10"/>
                            </Border>

                            <Border Grid.Row="1" Grid.Column="0" Visibility="Collapsed"  BorderThickness="0,0,0,0.5" BorderBrush="{DynamicResource LightGrayTextForegroundColor}">
                                <Grid Margin="15,0,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="1" Text="{DynamicResource AccountStatus}" FontSize="13" Foreground="{DynamicResource WhiteColor}" Cursor="Hand"
                                       HorizontalAlignment="Left" VerticalAlignment="Center" PreviewMouseDown="GetPremiumButton_Click"
                                       FontFamily="{DynamicResource ProximaRegular}" Margin="0,0,0,5"  Tag="LeftNav" />
                                    <TextBlock Grid.Row="2" Text="{Binding MembershipType}" FontSize="13" Foreground="{DynamicResource WhiteColor}"
                                           PreviewMouseDown="GetPremiumButton_Click" DataContext="{StaticResource accountSettingsViewModel}" 
                                       HorizontalAlignment="Left" VerticalAlignment="Center" Cursor="Hand"  Tag="LeftNav"
                                       FontFamily="{DynamicResource ProximaRegular}" />

                                    <Button Name="GetPremiumButton" Background="Transparent" DataContext="{StaticResource accountSettingsViewModel}"
                                            Click="GetPremiumButton_Click" Grid.Row="2" HorizontalAlignment="Right" Grid.Column="1"
                                            VerticalAlignment="Center" Margin="0,0,20,0" Cursor="Hand"  Tag="LeftNav"
                                            Style="{DynamicResource btnStyleNoHover}">
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="{Binding SubscriptionImage}"
                                                Height="15" Width="15" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="HighQuality" />
                                        </StackPanel>
                                    </Button>
                                </Grid>
                            </Border>

                            <Grid  Grid.Row="2" Grid.Column="0" Margin="0 10 0 2" DataContext="{StaticResource accountSettingsViewModel}" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="auto" />
                                        <RowDefinition Height="auto" />
                                    </Grid.RowDefinitions>

                                <Grid x:Name="DataStorageGrid" Grid.Row="0" Margin="0,0,0,5" UseLayoutRounding="True">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Text="{DynamicResource DataStorage}" TextWrapping="Wrap" FontSize="13" Foreground="{DynamicResource WhiteColor}"
                                       HorizontalAlignment="Left" VerticalAlignment="Center" PreviewMouseDown="AccountSettings_Click" Tag="1" Focusable="False"
                                           FontFamily="{DynamicResource ProximaRegular}" Margin="15,0,0,0" Style="{DynamicResource HandCursorStyle}" />
                                    <TextBlock Grid.Row="1" TextWrapping="Wrap" Text="{Binding DataStorageMainWindow, UpdateSourceTrigger=PropertyChanged}" FontSize="13" Foreground="{Binding CloudBackupColor}"
                                       HorizontalAlignment="Left" VerticalAlignment="Center" PreviewMouseDown="AccountSettings_Click" Style="{DynamicResource HandCursorStyle}"
                                           FontFamily="{DynamicResource ProximaRegular}" Margin="15,0,0,0" Tag="1" Focusable="False" />
                                        <Button Name="DataStorageButton" Background="Transparent" Cursor="Hand" Grid.Column="1"
                                            Click="AccountSettings_Click" Grid.Row="0" HorizontalAlignment="Right" 
                                            VerticalAlignment="Center" Margin="0,0,20,-2"
                                            Focusable="False" Tag="1"
                                            Style="{DynamicResource btnStyleNoHover}">
                                            <StackPanel Orientation="Horizontal">
                                                <Image Source="{DynamicResource imgAccountSettingIcon}"
                                                Height="15" Width="15" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="HighQuality" />
                                            </StackPanel>
                                        </Button>
                                    </Grid>

                                    <Grid x:Name="OnlineBackupsGrid" Grid.Row="1" Margin="0 0 0 10" UseLayoutRounding="True">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="0" Text="{DynamicResource OnlineBackups}" TextWrapping="Wrap" FontSize="13" Foreground="{DynamicResource WhiteColor}" Tag="1" Focusable="False"
                                       HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15,2,0,0" Style="{DynamicResource HandCursorStyle}"
                                           FontFamily="{DynamicResource ProximaRegular}" PreviewMouseDown="AccountSettings_Click" />
                                        <!--Text="{DynamicResource EnabledUppercase}"-->
                                    <TextBlock Grid.Row="1" FontSize="13"  TextWrapping="Wrap" Text="{Binding CloudBackupMainWindow, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Tag="1" Focusable="False"
                                       HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15,0,0,0" Foreground="{Binding CloudBackupColor}" Style="{DynamicResource HandCursorStyle}"
                                           FontFamily="{DynamicResource ProximaRegular}" PreviewMouseDown="AccountSettings_Click" />
                                        <Button Name="CloudBackupButton" Grid.Row="0" Background="Transparent" Grid.Column="1"
                                            Click="AccountSettings_Click" Tag="1" HorizontalAlignment="Right" 
                                            VerticalAlignment="Center" Margin="0,2,20,-2" Cursor="Hand" Focusable="False"
                                            Style="{DynamicResource btnStyleNoHover}">
                                            <StackPanel Orientation="Horizontal">
                                                <Image Source="{DynamicResource imgAccountSettingIcon}"
                                                Height="15" Width="15" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="HighQuality" />
                                            </StackPanel>
                                        </Button>
                                    </Grid>

                                    <Grid Name="spsyndevGrid" Grid.Row="2" Margin="0 0 0 10" VerticalAlignment="Center"
                                  HorizontalAlignment="Left">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Image Grid.Row="1" Source="{DynamicResource imgSyncTick}" Width="15" Height="15" Tag="3"
                                       VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15,0,0,0" PreviewMouseDown="SyncClick"
                                           Focusable="False" Cursor="Hand"/>
                                        <TextBlock Margin="5,0,0,0" Grid.Row="1" TextWrapping="Wrap" Grid.Column="1" PreviewMouseDown="SyncClick"
                                           FontSize="11" FontWeight="Normal" Foreground="{DynamicResource WhiteColor}" Text=""
                                                   Focusable="False" Tag="3" Style="{DynamicResource HandCursorStyle}" MaxWidth="115"
                                           VerticalAlignment="Top" HorizontalAlignment="Left" FontFamily="{DynamicResource ProximaRegular}">
                                                 <Run Text="{DynamicResource SyncedDevices}" />
                                                  <Run Text=" "/>
                                                  <Run FontSize="10" Text="{Binding NumberOfSyncedDevices, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" PreviewMouseDown="SyncClick"/>
                                        </TextBlock>
                                    </Grid>
                        </Grid>
                    </Grid>
                    
                </Expander>
                    <Rectangle Grid.Row="2" VerticalAlignment="Top" Margin="0 0 6 0" HorizontalAlignment="Stretch" Height="0.5" Fill="{DynamicResource LightGrayTextForegroundColor}"/>
                    <ToggleButton Margin="10" Grid.Row="2" IsChecked="{Binding ElementName=LeftMenuExpander,Path=IsExpanded,Mode=TwoWay}" HorizontalAlignment="Right" Style="{DynamicResource ExpanderHeaderStyle}" />
                </Grid>
                
                <Grid Name="ContentPanel" Grid.Column="1" VerticalAlignment="Stretch"
                      HorizontalAlignment="Stretch" Background="Transparent"  />
                <Grid Name="ContentSubPanel"  Grid.Column="1" HorizontalAlignment="Stretch"
                      VerticalAlignment="Bottom" Background="{DynamicResource MainWindowGrayBackgroundColor}" />

                <userControls:MainSearchResultPanel   Grid.Column="1" VerticalAlignment="Stretch"
                      HorizontalAlignment="Stretch" x:Name="mainSearchResultPanel" Visibility="{Binding IsOpen,Converter={StaticResource BooleanToVisibility}}"/>
            
            </Grid>

            <!--<userControls:MenuUserControlPopup x:Name="menuUserControlPopup" Grid.Column="0" Grid.RowSpan="2" Grid.Row="0" Grid.ColumnSpan="2"
                                              DataContext="{StaticResource menuViewModel}" />-->

            <!--<userControls:SetupProgressUserControlPopup Canvas.ZIndex="150" Grid.Column="0" Grid.Row="1"
                                                        Grid.ColumnSpan="2" Margin="3,36,0,0"
                                                        DataContext="{Binding ElementName=setupProgressUc, Path=DataContext}" />-->
            <accountSettingsUserControls:AccountSettingsPopup Canvas.ZIndex="1" Grid.Column="0" Grid.Row="1"
                                                              Grid.ColumnSpan="2"
                                                              DataContext="{StaticResource accountSettingsViewModel}" />
        </Grid>

        <!--<userControls:SetupWizardUserControl />-->
        <Border Grid.Row="1" BorderThickness="0,0.3,0,0" BorderBrush="{DynamicResource LightGrayTextForegroundColor}">
            <Grid Name="inAppAdvertisingGrid" Background="{DynamicResource PasswordBossBlackBackgroundColor}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="180"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
            </Grid>
        </Border>

		<Grid Canvas.ZIndex="1" Grid.Column="0" Grid.Row="0" 
			  Visibility="{Binding IsInSync, Converter={StaticResource BoolToVisibility}}">
			<Grid.Background>
				<SolidColorBrush Color="#000000" Opacity="0.5"/>
			</Grid.Background>
		</Grid>
    </Grid>
</Window>