<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:PasswordBoss.Converters"
                    xmlns:passwordBoss="clr-namespace:PasswordBoss"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ShareExpanderTheme.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <DataTemplate  x:Key="ShareSecureItemTemplateWithBorder">
        <Border x:Name="mainBorder" Margin="0" Padding="5 0 14 0" Height="51"
                CornerRadius="2" Background="{DynamicResource WhiteColor}" HorizontalAlignment="Stretch">
            <Border.Style>
                <Style>
                    <Setter Property="Border.BorderThickness" Value="1"/>
                    <Setter Property="Border.BorderBrush" Value="{DynamicResource GrayColor}"/>
                    <Style.Triggers>
                        <Trigger Property="Border.IsMouseOver" Value="True">
                            <Setter Property="Border.BorderBrush" Value="{DynamicResource PasswordBossGreenColor}" />
                            <Setter Property="Border.BorderThickness" Value="1" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

            <Grid x:Name="gridlist" ContextMenu="{x:Null}"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"     Background="{DynamicResource WhiteColor}" UseLayoutRounding="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition MinWidth="280" Width="*"/>
                    <ColumnDefinition Width="130"/>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition  Width="50"/>
                    <ColumnDefinition  Width="50"/>
                    <ColumnDefinition  Width="50"/>
                </Grid.ColumnDefinitions>

                <Grid Background="{Binding Background}" Grid.Column="0"  Margin="0 0 12 0" HorizontalAlignment="Center" Width="90" Height="45"  VerticalAlignment="Center">
                    <Image x:Name="dataImg"  Visibility="{Binding IsDefaultImage,Converter={StaticResource InvertedBooleanToVisibility}}"
                            Source="{Binding Image}" Stretch="Fill" >
                    </Image>
                    <Image   MaxHeight="35" Width="90" Visibility="{Binding IsDefaultImage,Converter={StaticResource BoolToVisibility}}"
                            Source="{Binding Image}" Stretch="Uniform" VerticalAlignment="Center" >
                    </Image>
                </Grid>
                <telerik:RadDropDownButton x:Name="settingsButton" Style="{DynamicResource RadDropDownButtonWithArowStyle}" Grid.Column="1" Height="30" Width="30" Margin="12 0" VerticalAlignment="Center" HorizontalAlignment="Center"
                           RenderOptions.BitmapScalingMode="HighQuality" Visibility="Hidden" Background="Transparent"
                           BorderThickness="0" IsOpen="{Binding ShowItemMenu,Mode=TwoWay}">
                    <telerik:RadDropDownButton.Content>
                        <Image Height="30" Width="30"  ContextMenu="{x:Null}" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="HighQuality">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="{DynamicResource menu_grey}"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="{DynamicResource menu_green}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </telerik:RadDropDownButton.Content>
                    <telerik:RadDropDownButton.DropDownContent>
                        <ListBox ItemsSource="{Binding Actions}"             ItemContainerStyle="{DynamicResource SecureItemsListBoxItemStyle}"  BorderThickness="0" >
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <telerik:RadMenuItem  HorizontalAlignment="Stretch" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </telerik:RadDropDownButton.DropDownContent>
                </telerik:RadDropDownButton>
                <!--</Border>-->

                <StackPanel x:Name="LeftPartOfItemGrid" Grid.Column="2" Background="Transparent" VerticalAlignment="Center" Margin="0 0 12 0" >

                    <Grid Margin="3 0 0 0">
                        <TextBlock x:Name="dataTb" HorizontalAlignment="Left" Width="260" 
                                Foreground="{DynamicResource PasswordBossBlackBackgroundColor}" TextWrapping="Wrap" TextAlignment="Left"
                                Padding="0,0,0,0" VerticalAlignment="Bottom" FontSize="11pt" FontWeight="Bold" 
                                FontFamily="{DynamicResource ProximaRegular}" Text="{Binding Name}" />
                        <TextBox x:Name="editDataTb" HorizontalAlignment="Left" Width="260" Margin="-4 0 0 0"
                                Foreground="{DynamicResource PasswordBossBlackBackgroundColor}" TextWrapping="Wrap" TextAlignment="Left" Style="{DynamicResource TextBoxTemplate}" Grid.RowSpan="2"
                                Padding="0" VerticalAlignment="Bottom" FontSize="11pt" FontWeight="Bold" 
                                FontFamily="{DynamicResource ProximaRegular}" Text="{Binding Name}" Visibility="Collapsed" />
                    </Grid>
                    <TextBlock x:Name="UsernameTextBlock" HorizontalAlignment="Left" TextAlignment="Left" Margin="3 2 0 0"
                            Foreground="{DynamicResource LightGrayTextForegroundColor}"
                            Padding="0,0,0,0" VerticalAlignment="Top" FontSize="10pt" FontWeight="Normal"   TextWrapping="Wrap"
                            FontFamily="{DynamicResource ProximaRegular}" Text="{Binding ListViewSecondName}" />

                </StackPanel>

                <Grid x:Name="lastUsedGrid"  HorizontalAlignment="Left" Grid.Column="3" Margin="0 0 12 0" Background="Transparent" Visibility="Collapsed" >
                    <StackPanel VerticalAlignment="Center" Visibility="{Binding ShowLastModifiedDate,Converter={StaticResource InvertedBooleanToVisibility}}">

                        <TextBlock HorizontalAlignment="Left" Visibility="{Binding IsWebSite,Converter={StaticResource BoolToVisibility}}" Foreground="{DynamicResource PasswordBossBlackBackgroundColor}" TextWrapping="Wrap" TextAlignment="Left"
                                Padding="0,0,0,0" VerticalAlignment="Bottom" FontSize="10pt" FontWeight="Thin" 
                                FontFamily="{DynamicResource ProximaRegular}" Text="{DynamicResource LastUsedAndroidSort}" />



                        <TextBlock  Visibility="{Binding IsWebSite,Converter={StaticResource BoolToVisibility}}" HorizontalAlignment="Left" TextAlignment="Left"
                            Foreground="{DynamicResource LightGrayTextForegroundColor}" Grid.Column="0" Grid.Row="2"  
                            Padding="0,2,0,0" VerticalAlignment="Top" FontSize="10pt" TextWrapping="Wrap" FontWeight="Thin" 
                            FontFamily="{DynamicResource ProximaRegular}" Text="{Binding LastAcceessTime}" />

                    </StackPanel>
                    <StackPanel VerticalAlignment="Center"  Visibility="{Binding ShowLastModifiedDate,Converter={StaticResource BoolToVisibility}}">

                        <TextBlock HorizontalAlignment="Left" Foreground="{DynamicResource PasswordBossBlackBackgroundColor}" TextWrapping="Wrap" TextAlignment="Left"
                                Padding="0,0,0,0" VerticalAlignment="Bottom" FontSize="10pt" FontWeight="Thin" 
                                FontFamily="{DynamicResource ProximaRegular}" Text="{DynamicResource MenuLastModified}" />

                        <TextBlock 
                       HorizontalAlignment="Left" TextAlignment="Left"
                            Foreground="{DynamicResource LightGrayTextForegroundColor}" Grid.Column="0" Grid.Row="2"  
                            Padding="0,2,0,0" VerticalAlignment="Top" FontSize="10pt" TextWrapping="Wrap" FontWeight="Thin" 
                            FontFamily="{DynamicResource ProximaRegular}" Text="{Binding LastModifiedDate,StringFormat='{}{0:MMM yyyy}'}" />
                    </StackPanel>
                </Grid>


                <Image Visibility="{Binding Shared, Converter={StaticResource BoolToVisibility}}" x:Name="listBoxShare"  Margin="12 0"  Grid.Column="4"  Width="20" Height="20" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="HighQuality"  ToolTip="{DynamicResource Sharing}" Source="{DynamicResource sharedHeaderIcon}"/>
                <Image  Visibility="{Binding Favorite, Converter={StaticResource BoolToVisibility}}" Grid.Column="5" Margin="12 0" x:Name="favoritesGridImage" Source="{DynamicResource star_green_21x20}"  Width="21" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center"  ToolTip="{DynamicResource Favorite}"/>
                <Image Visibility="{Binding HasNote, Converter={StaticResource BoolToVisibility}}" x:Name="notesGridImage" Margin="12 0"  Grid.Column="6"  ToolTip="{DynamicResource Notes}" Source="{DynamicResource imgNotes}" Width="17" Height="20" />
            </Grid>
            <Border.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding DoubleClickCommand}" />
            </Border.InputBindings>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=mainBorder}" Value="True">
                <Setter Property="Visibility" TargetName="settingsButton" Value="Visible"/>
                <!--<Setter Property="Visibility" TargetName="FavoritesImageBorder" Value="Visible" />-->
                <Setter Property="Visibility" TargetName="settingsButton" Value="Visible" />
                <Setter Property="Visibility" TargetName="lastUsedGrid" Value="Visible" />
            </DataTrigger>

            <DataTrigger Binding="{Binding IsMouseOver, ElementName=dataTb}" Value="True">
                <Setter Property="Visibility" TargetName="editDataTb" Value="Visible"/>
                <Setter Property="Visibility" TargetName="dataTb" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsMouseOver, ElementName=editDataTb}" Value="True">
                <Setter Property="Visibility" TargetName="dataTb" Value="Collapsed"/>
                <Setter Property="Visibility" TargetName="editDataTb" Value="Visible"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" Value="True">
                <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource PasswordBossGreenColor}"/>
                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1"/>
            </DataTrigger>
            <!--<MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type telerik:RadTreeViewItem}, Mode=FindAncestor}}" Value="True" />
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type telerik:RadTreeViewItem}, Mode=FindAncestor}}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource WhiteColor}" />
                </MultiDataTrigger>-->
        </DataTemplate.Triggers>

    </DataTemplate>

    <converters:StatusToVisibilityConverter x:Key="CancelVisibilityConverter">
        <converters:StatusToVisibilityConverter.AcceptedStatuses>
            <x:Array Type="{x:Type passwordBoss:ShareWithStatus}">
                <passwordBoss:ShareWithStatus>Accepted</passwordBoss:ShareWithStatus>
                <passwordBoss:ShareWithStatus>Pending</passwordBoss:ShareWithStatus>
            </x:Array>
        </converters:StatusToVisibilityConverter.AcceptedStatuses>
    </converters:StatusToVisibilityConverter>

    <converters:StatusToVisibilityConverter x:Key="ResendlVisibilityConverter">
        <converters:StatusToVisibilityConverter.AcceptedStatuses>
            <x:Array Type="{x:Type passwordBoss:ShareWithStatus}">
                <passwordBoss:ShareWithStatus>Pending</passwordBoss:ShareWithStatus>
            </x:Array>
        </converters:StatusToVisibilityConverter.AcceptedStatuses>
    </converters:StatusToVisibilityConverter>

    <HierarchicalDataTemplate x:Key="SharedByMeShareHeaderTemplate" ItemsSource="{Binding Path=Items}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <DockPanel Grid.Row="0">
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                    <Image Source="{DynamicResource sharedHeaderIcon}" Height="22" Width="22" Stretch="Fill" Margin="5" />
                    <TextBlock Foreground="{DynamicResource LightGrayTextForegroundColor}" VerticalAlignment="Center" FontSize="16" Text="{Binding Path=ShareName}" />
                    <TextBlock FontSize="16"
                                   VerticalAlignment="Center"
                                   FontWeight="SemiBold"
                                   Foreground="{DynamicResource LightGrayTextForegroundColor}"
                                   FontFamily="{DynamicResource ProximaRegular}"
                                   Text="{Binding Path=Count, StringFormat='{} ({0})'}"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" DockPanel.Dock="Right" Margin="0,0,20,0">
                    <Border HorizontalAlignment="Right" VerticalAlignment="Center" Background="Transparent" Cursor="Hand">
                        <Border Height="26" Width="26" BorderBrush="{DynamicResource LightGrayTextForegroundColor}" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.ChangeShareCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type telerik:RadTreeView}}}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Image HorizontalAlignment="Center" VerticalAlignment="Center" Height="20" Width="20" Source="{DynamicResource gearGrey}" RenderOptions.BitmapScalingMode="HighQuality" />
                        </Border>
                    </Border>

                    <Border HorizontalAlignment="Right" VerticalAlignment="Center" Background="Transparent" Cursor="Hand" Margin="5,0,0,0">
                        <Border Height="26" Width="26" BorderBrush="{DynamicResource LightGrayTextForegroundColor}" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.CancelSharingCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type telerik:RadTreeView}}}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Image HorizontalAlignment="Center" VerticalAlignment="Center" Height="20" Width="20" Source="{DynamicResource imgDisableGrey}" RenderOptions.BitmapScalingMode="HighQuality" />
                        </Border>
                    </Border>
                </StackPanel>
            </DockPanel>

            <Rectangle Grid.Row="1"
                           Visibility="{Binding Path=IsExpanded, Converter={StaticResource BoolToVisibility}}"
                           Fill="{DynamicResource LightGrayTextForegroundColor}"
                           Height="1"
                           Margin="5,5,5,0"
                           HorizontalAlignment="Stretch" />
        </Grid>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="SharedFolderTemplate" ItemsSource="{Binding Path=SubItems}">
        <Grid x:Name="gridlist" ContextMenu="{x:Null}"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"     Background="{DynamicResource WhiteColor}" UseLayoutRounding="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition MinWidth="280" Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid Background="{Binding Background}" Grid.Column="0"  Margin="0 0 7 0" HorizontalAlignment="Center" Width="50" Height="45"  VerticalAlignment="Center">
                <Image Height="30" Width="45" x:Name="dataImg" Source="{DynamicResource addFolder}" Stretch="Fill">
                    <Image.InputBindings>
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding DoubleClickCommand}" />
                    </Image.InputBindings>
                </Image>
            </Grid>

            <StackPanel Grid.Column="1" Background="Transparent" VerticalAlignment="Center" Margin="0 0 12 0" Orientation="Horizontal" >
                <TextBlock HorizontalAlignment="Left"
                                    Foreground="{DynamicResource PasswordBossBlackBackgroundColor}"
                                    TextWrapping="Wrap"
                                    TextAlignment="Left"
                                    VerticalAlignment="Bottom"
                                    FontSize="11pt"
                                    FontWeight="Bold"
                                    FontFamily="{DynamicResource ProximaRegular}"
                                    Text="{Binding Name}" />
                <TextBlock Foreground="{DynamicResource PasswordBossBlackBackgroundColor}"
                                   TextWrapping="Wrap"
                                   TextAlignment="Left"
                                   VerticalAlignment="Bottom"
                                   FontSize="11pt"
                                   FontWeight="Bold"
                                   Text="{Binding Path=Count, StringFormat='{} ({0})'}"/>
            </StackPanel>
        </Grid>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="FolderCategoryTemplate" ItemsSource="{Binding Path=Items}" ItemTemplate="{StaticResource ShareSecureItemTemplateWithBorder}">
        <Grid Height="35" ContextMenu="{x:Null}"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
              Background="{DynamicResource WhiteColor}" UseLayoutRounding="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition MinWidth="280" Width="*"/>
                <ColumnDefinition Width="130"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition  Width="50"/>
                <ColumnDefinition  Width="50"/>
                <ColumnDefinition  Width="50"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="2" Background="Transparent" VerticalAlignment="Center" Margin="0 0 12 0" Orientation="Horizontal">
                <TextBlock HorizontalAlignment="Left" 
                                       Foreground="{DynamicResource PasswordBossBlackBackgroundColor}"
                                       TextWrapping="Wrap" TextAlignment="Left"
                                       VerticalAlignment="Bottom" FontSize="11pt"
                                       FontWeight="Bold"
                                       FontFamily="{DynamicResource ProximaRegular}"
                                       Text="{Binding Path=CategoryName}" />
                <TextBlock Foreground="{DynamicResource PasswordBossBlackBackgroundColor}"
                                   TextAlignment="Left"
                                   Padding="0,0,0,0" VerticalAlignment="Bottom" FontSize="11pt"
                                   FontWeight="Bold"
                                   FontFamily="{DynamicResource ProximaRegular}"
                                   Text="{Binding Path=Count, StringFormat='{} ({0})'}"/>
            </StackPanel>
        </Grid>
    </HierarchicalDataTemplate>

    <DataTemplate x:Key="SharedWithTemplate">
        <Border BorderBrush="{DynamicResource GrayBorderColor}" BorderThickness="0,0,0,1">
            <Grid Margin="0,0,0,3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200" />
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Text="{Binding Path=ShareWithName}"
                               Grid.Column="0"
                               Grid.Row="0"
                               FontSize="12"
                               FontWeight="SemiBold"
                               Foreground="{DynamicResource GrayBorderColor}"
                               FontFamily="{DynamicResource ProximaRegular}" />

                    <TextBlock Text="{Binding Path=Status}"
                               Grid.Column="1"
                               Grid.Row="0"
                               FontSize="12"
                               FontWeight="SemiBold"
                               Foreground="{DynamicResource GrayBorderColor}"
                               FontFamily="{DynamicResource ProximaRegular}" />

                    <Border Grid.Column="2" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Center" Background="{DynamicResource GrayColor}" Cursor="Hand"
                            Visibility="{Binding Path=Status, Converter={StaticResource ResendlVisibilityConverter}}">
                        <Border Height="14" Width="20" BorderBrush="{DynamicResource LightGrayTextForegroundColor}" >
                            <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                                <i:InvokeCommandAction Command="{Binding DeleteItemCommand}" CommandParameter="{Binding Id}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                            <Image HorizontalAlignment="Center" VerticalAlignment="Center" Height="16" Width="20" Stretch="Fill" Source="{DynamicResource imgPersonalInfoEmailHover}" RenderOptions.BitmapScalingMode="HighQuality" />
                        </Border>
                    </Border>

                    <Border Grid.Column="3" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Center" Background="Transparent" Cursor="Hand"
                            Visibility="{Binding Path=Status, Converter={StaticResource CancelVisibilityConverter}}">
                        <Border Height="16" Width="16" BorderBrush="{DynamicResource LightGrayTextForegroundColor}">
                            <!--<i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                    <i:InvokeCommandAction Command="{Binding DeleteItemCommand}" CommandParameter="{Binding Id}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>-->
                            <Image HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill" Height="16" Width="16" Source="{DynamicResource imgDisableGrey}" RenderOptions.BitmapScalingMode="HighQuality" />
                        </Border>
                    </Border>
                </Grid>
            </Grid>
        </Border>
    </DataTemplate>

    <Style x:Key="ShareWithListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border
                            BorderThickness="{TemplateBinding Border.BorderThickness}"
                            Padding="{TemplateBinding Control.Padding}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                            Background="{TemplateBinding Panel.Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter
                            Content="{TemplateBinding ContentControl.Content}"
                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SharedByMeItemContainerStyle" TargetType="{x:Type telerik:RadTreeViewItem}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="0" Stroke="Transparent" StrokeThickness="0"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="telerik:DragDropManager.AllowCapturedDrag" Value="False" />
        <Setter Property="telerik:DragDropManager.AllowDrag" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="1,4,5,4"/>
        <Setter Property="IsDropAllowed" Value="True"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadTreeViewItem}">
                    <Grid x:Name="RootElement" UseLayoutRounding="True" Background="{DynamicResource WhiteColor}" Margin="0,0,0,1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Display"/>
                                <VisualState x:Name="Edit">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="EditHeaderElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Header">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Header"/>
                                        <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Image"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Header">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="#23B194"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Expander">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="#23B194"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected"/>
                                <VisualState x:Name="SelectedUnfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LoadingOnDemandStates">
                                <VisualState x:Name="LoadingOnDemand">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LoadingVisual">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Expander">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:1" From="0" RepeatBehavior="Forever" To="359" Storyboard.TargetProperty="Angle" Storyboard.TargetName="LoadingVisualAngleTransform"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LoadingOnDemandReverse"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpandStates">
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHostBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Grid.Row="0" Grid.RowSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Grid x:Name="HeaderRow" MinHeight="{TemplateBinding MinHeight}" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <!--<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="6" Grid.Column="2" CornerRadius="2"/>-->
                            <Border x:Name="MouseOverVisual" BorderBrush="#FFFFC92B" BorderThickness="1" Grid.ColumnSpan="6" Grid.Column="2" CornerRadius="1" Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFFFBA3" Offset="1"/>
                                        <GradientStop Color="#FFFFFBDA" Offset="0"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                            </Border>
                            <Border x:Name="SelectionUnfocusedVisual" BorderBrush="#FFDBDBDB" BorderThickness="1" Grid.ColumnSpan="6" Grid.Column="2" CornerRadius="1" Visibility="Collapsed">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0,1">
                                        <GradientStop Color="#FFF8F6F9" Offset="0"/>
                                        <GradientStop Color="#FFF0F0F0" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="Transparent" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                            </Border>
                            <Border x:Name="SelectionVisual" BorderBrush="#FFFFC92B" BorderThickness="1" Grid.ColumnSpan="6" Grid.Column="2" CornerRadius="1" Visibility="Collapsed">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFCE79F" Offset="1"/>
                                        <GradientStop Color="#FFFDD3A8"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                            </Border>
                            <StackPanel x:Name="IndentContainer" Orientation="Horizontal">
                                <Rectangle x:Name="IndentFirstVerticalLine" Stroke="#FFCCCCCC" Visibility="Collapsed" VerticalAlignment="Top"/>
                            </StackPanel>
                            <Grid x:Name="ListRootContainer"   Grid.Column="1" HorizontalAlignment="Center" MinWidth="21" VerticalAlignment="Top" Margin="0,10,0,0">
                                <Rectangle x:Name="HorizontalLine" HorizontalAlignment="Right" Height="1" Stroke="#FFCCCCCC" VerticalAlignment="Center"/>
                                <Rectangle x:Name="VerticalLine" HorizontalAlignment="Center" Stroke="#FFCCCCCC" VerticalAlignment="Top" Width="1"/>
                                <ToggleButton x:Name="Expander" VerticalAlignment="Top" Margin="10,9,0,0" Template="{DynamicResource SimpleExpanderToggleButtonControlTemplate}" Background="{TemplateBinding Background}" IsTabStop="False"/>
                                <Grid x:Name="LoadingVisual" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed" VerticalAlignment="Center">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="0" CenterY="0.5" CenterX="0.5"/>
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                    <Path Data="M1,0A1,1,90,1,1,0,-1" Height="10" StrokeStartLineCap="Round" Stretch="Fill" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Width="10"/>
                                    <Path Data="M0,-1.1L0.1,-1 0,-0.9" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Height="4" Margin="5,-1.5,0,0" Stretch="Fill" StrokeThickness="1" VerticalAlignment="Top" Width="4"/>
                                </Grid>
                            </Grid>
                            <Image x:Name="Image" Grid.Column="3" HorizontalAlignment="Center" MaxWidth="16" MaxHeight="16" Margin="2" VerticalAlignment="Center"/>
                            <Rectangle x:Name="FocusVisual" Grid.ColumnSpan="6" Grid.Column="2" IsHitTestVisible="False" RadiusY="3" RadiusX="3" Stroke="{DynamicResource BlackColor}" StrokeThickness="1" StrokeDashArray="1 2" Visibility="Collapsed"/>

                            <Grid x:Name="HeaderContentPanel" Background="Transparent" Grid.ColumnSpan="2" Grid.Column="4">
                                <ContentControl x:Name="Header"  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ContentPresenter x:Name="EditHeaderElement" ContentTemplate="{TemplateBinding HeaderEditTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <CheckBox x:Name="CheckBoxElement" Grid.Column="2" IsTabStop="False" Margin="5,0,0,0" Visibility="Collapsed" VerticalAlignment="Center">
                                <telerik:StyleManager.Theme>
                                    <telerik:Office_BlackTheme/>
                                </telerik:StyleManager.Theme>
                            </CheckBox>
                            <RadioButton x:Name="RadioButtonElement" Grid.Column="2" IsTabStop="False" Margin="5,0,0,0" Visibility="Collapsed" VerticalAlignment="Center">
                                <telerik:StyleManager.Theme>
                                    <telerik:Office_BlackTheme/>
                                </telerik:StyleManager.Theme>
                            </RadioButton>
                        </Grid>
                        <Border x:Name="ItemsHostBorder" Margin="5,0,5,0"  BorderThickness="0" Grid.Row="1" Visibility="Collapsed" HorizontalAlignment="Stretch">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Expander Grid.Row="0" Style="{StaticResource ShareExpanderStyle}" Margin="23,0,0,0" IsExpanded="True">
                                    <Expander.Header>
                                        <TextBlock Text="{DynamicResource Items}" Margin="10,0,0,0" FontFamily="{DynamicResource ProximaRegular}" Foreground="{DynamicResource LightGrayTextForegroundColor}" FontSize="14" FontWeight="SemiBold"/>
                                    </Expander.Header>
                                    <ItemsPresenter x:Name="ItemsHost" />
                                </Expander>
                                
                                <Expander Grid.Row="1" Style="{StaticResource ShareExpanderStyle}" Margin="23,0,0,10" Visibility="{TemplateBinding Tag, Converter={StaticResource BoolToVisibility}}">
                                    <Expander.Header>
                                        <TextBlock Text="{DynamicResource SharedWith}" Margin="10,0,0,0" FontFamily="{DynamicResource ProximaRegular}" Foreground="{DynamicResource LightGrayTextForegroundColor}" FontSize="14" FontWeight="SemiBold"/>
                                    </Expander.Header>
                                    <Expander.Content>
                                        <Grid Margin="0,2,0,0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="200" />
                                                <ColumnDefinition Width="120" />
                                                <ColumnDefinition Width="200" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Row="0" Text="{DynamicResource SharedWith}"
                                                   TextAlignment="Center"
                                                   Grid.Column="0"
                                                   FontSize="14"
                                                   FontWeight="SemiBold"
                                                   Foreground="{DynamicResource MainWindowHeaderGridColor}"
                                                   FontFamily="{DynamicResource ProximaRegular}"/>

                                            <TextBlock Text="{DynamicResource Status}" Grid.Row="0"
                                                   Grid.Column="1"
                                                   HorizontalAlignment="Left"
                                                   FontSize="14"
                                                   TextAlignment="Center"
                                                   FontWeight="SemiBold"
                                                   Foreground="{DynamicResource MainWindowHeaderGridColor}"
                                                   FontFamily="{DynamicResource ProximaRegular}"/>
                                            <ListBox Grid.Row="1"
                                                     Grid.Column="0" Grid.ColumnSpan="3"
                                                     BorderThickness="0"
                                                     ItemsSource="{Binding Path=SharesList}"
                                                     ItemContainerStyle="{StaticResource ShareWithListBoxItemStyle}"
                                                     ItemTemplate="{StaticResource SharedWithTemplate}"/>
                                        </Grid>
                                    </Expander.Content>
                                </Expander>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FolderItemContainerStyle" TargetType="{x:Type telerik:RadTreeViewItem}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="0" Stroke="Transparent" StrokeThickness="0"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="telerik:DragDropManager.AllowCapturedDrag" Value="False" />
        <Setter Property="telerik:DragDropManager.AllowDrag" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource GrayColor}" />
        <Setter Property="Padding" Value="1,4,5,4"/>
        <Setter Property="IsDropAllowed" Value="True"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadTreeViewItem}">
                    <Grid x:Name="RootElement" UseLayoutRounding="True" Background="{DynamicResource WhiteColor}" Margin="35,0,5,1">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Display"/>
                                <VisualState x:Name="Edit">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="EditHeaderElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Header">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Header"/>
                                        <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Image"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Header">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="#23B194"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Expander">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="#23B194"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected"/>
                                <VisualState x:Name="SelectedUnfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LoadingOnDemandStates">
                                <VisualState x:Name="LoadingOnDemand">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LoadingVisual">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Expander">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:1" From="0" RepeatBehavior="Forever" To="359" Storyboard.TargetProperty="Angle" Storyboard.TargetName="LoadingVisualAngleTransform"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LoadingOnDemandReverse"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpandStates">
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHostBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="HeaderRow" MinHeight="{TemplateBinding MinHeight}" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" Grid.RowSpan="2" Panel.ZIndex="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="5" Grid.Column="1" CornerRadius="2"/>
                            <Border x:Name="MouseOverVisual" BorderBrush="#FFFFC92B" BorderThickness="1" Grid.ColumnSpan="6" Grid.Column="2" CornerRadius="1" Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFFFBA3" Offset="1"/>
                                        <GradientStop Color="#FFFFFBDA" Offset="0"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                            </Border>
                            <Border x:Name="SelectionUnfocusedVisual" BorderBrush="#FFDBDBDB" BorderThickness="1" Grid.ColumnSpan="6" Grid.Column="2" CornerRadius="1" Visibility="Collapsed">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0,1">
                                        <GradientStop Color="#FFF8F6F9" Offset="0"/>
                                        <GradientStop Color="#FFF0F0F0" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="Transparent" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                            </Border>
                            <Border x:Name="SelectionVisual" BorderBrush="#FFFFC92B" BorderThickness="1" Grid.ColumnSpan="6" Grid.Column="2" CornerRadius="1" Visibility="Collapsed">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFCE79F" Offset="1"/>
                                        <GradientStop Color="#FFFDD3A8"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                            </Border>
                            <StackPanel x:Name="IndentContainer" Orientation="Horizontal">
                                <Rectangle x:Name="IndentFirstVerticalLine" Stroke="#FFCCCCCC" Visibility="Collapsed" VerticalAlignment="Top"/>
                            </StackPanel>
                            <Grid x:Name="ListRootContainer" Grid.Column="1" HorizontalAlignment="Center" MinWidth="21" VerticalAlignment="Top" Margin="0,12,0,0">
                                <Rectangle x:Name="HorizontalLine" HorizontalAlignment="Right" Height="1" Stroke="#FFCCCCCC" VerticalAlignment="Center"/>
                                <Rectangle x:Name="VerticalLine" HorizontalAlignment="Center" Stroke="#FFCCCCCC" VerticalAlignment="Top" Width="1"/>
                                <ToggleButton x:Name="Expander" VerticalAlignment="Top" Margin="10,9,0,0" Template="{DynamicResource SimpleExpanderToggleButtonControlTemplate}" Background="{TemplateBinding Background}" IsTabStop="False"/>
                                <Grid x:Name="LoadingVisual" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed" VerticalAlignment="Center">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="0" CenterY="0.5" CenterX="0.5"/>
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                    <Path Data="M1,0A1,1,90,1,1,0,-1" Height="10" StrokeStartLineCap="Round" Stretch="Fill" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Width="10"/>
                                    <Path Data="M0,-1.1L0.1,-1 0,-0.9" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Height="4" Margin="5,-1.5,0,0" Stretch="Fill" StrokeThickness="1" VerticalAlignment="Top" Width="4"/>
                                </Grid>
                            </Grid>
                            <Image x:Name="Image" Grid.Column="3" HorizontalAlignment="Center" MaxWidth="16" MaxHeight="16" Margin="2" VerticalAlignment="Center"/>
                            <Rectangle x:Name="FocusVisual" Grid.ColumnSpan="6" Grid.Column="2" IsHitTestVisible="False" RadiusY="3" RadiusX="3" Stroke="{DynamicResource BlackColor}" StrokeThickness="1" StrokeDashArray="1 2" Visibility="Collapsed"/>

                            <Grid x:Name="HeaderContentPanel" Background="Transparent" Grid.ColumnSpan="2" Grid.Column="4">
                                <ContentControl x:Name="Header"  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ContentPresenter x:Name="EditHeaderElement" ContentTemplate="{TemplateBinding HeaderEditTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <CheckBox x:Name="CheckBoxElement" Grid.Column="2" IsTabStop="False" Margin="5,0,0,0" Visibility="Collapsed" VerticalAlignment="Center">
                                <telerik:StyleManager.Theme>
                                    <telerik:Office_BlackTheme/>
                                </telerik:StyleManager.Theme>
                            </CheckBox>
                            <RadioButton x:Name="RadioButtonElement" Grid.Column="2" IsTabStop="False" Margin="5,0,0,0" Visibility="Collapsed" VerticalAlignment="Center">
                                <telerik:StyleManager.Theme>
                                    <telerik:Office_BlackTheme/>
                                </telerik:StyleManager.Theme>
                            </RadioButton>

                            <Border x:Name="ItemsHostBorder" Margin="5,0,5,3" Grid.Column="0" Grid.ColumnSpan="6"  BorderThickness="0" Grid.Row="1" Visibility="Collapsed" HorizontalAlignment="Stretch">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ItemsPresenter x:Name="ItemsHost" Grid.Row="0" />
                                </Grid>
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>