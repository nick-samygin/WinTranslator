<userControls:CustomChildWindow x:Class="PasswordBoss.Views.UserControls.AddShareWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:userControls="clr-namespace:PasswordBoss.UserControls;assembly=theme"
             xmlns:converters="clr-namespace:PasswordBoss.Converters"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:helpers="clr-namespace:PasswordBoss.Helpers"
             xmlns:local="clr-namespace:PasswordBoss.Views.UserControls"
             MinWidth="400"
             IsWindowMayClose="{Binding Path=MayGoNext}"
             OkButtonCommand="{Binding Path=NextCommand}">
    <userControls:CustomChildWindow.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" /> 
        <converters:InvertBoolToBoolConverter x:Key="InvertBoolToBoolConverter" />
        <converters:ShareItemTypeToBoolConverter CurrentType="Passwords" x:Key="PasswordTypeConverter" />
        <converters:ShareItemTypeToBoolConverter CurrentType="DigitalWallet" x:Key="DigitalWalletTypeConverter" />
        <converters:ShareItemTypeToBoolConverter CurrentType="PersonalInfo" x:Key="PersonalInfoTypeConverter" />
        <converters:ShareItemTypeToBoolConverter CurrentType="SecureNotes"  x:Key="SecureNotesTypeConverter" />
        <converters:ItemShareTypeToVisibilityConverter x:Key="ItemShareTypeToVisibilityConverter" />
        <converters:BoolToVisibilityInverter x:Key="BoolToVisibilityInverter" />
        <converters:ValidStateToBrushConverter x:Key="StateToBrushConverter" ErrorBrush="Red" ValidBrush="#E4E9E9" />

        <Style x:Key="BlueSettingsRadioButtonWithTick" TargetType="{x:Type RadioButton}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True"
                                           Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                           StrokeThickness="1" StrokeDashArray="1 2" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="115"/>
            <Setter Property="Height" Value="27"/>
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontFamily" Value="{DynamicResource ProximaSemiBold}" />
            <Setter Property="BorderBrush" Value="{DynamicResource LightGrayTextForegroundColor}" />
            <Setter Property="Background" Value="{DynamicResource PasswordBossBlueHeaderColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource WhiteColor}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border x:Name="border" CornerRadius="{StaticResource CommonCornerRadius}"  BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid>
                                <Image HorizontalAlignment="Left" VerticalAlignment="Center" Width="20" Height="25" Margin="40,0,30,0" Visibility="{TemplateBinding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" Source="{DynamicResource imgCheckmarkGreen}" />
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
                                            Content="{TemplateBinding Content}"
                                            ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#245475" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Background" Value="{DynamicResource GrayColor}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BlueSettingsToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True"
                                           Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                           StrokeThickness="1" StrokeDashArray="1 2" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="115"/>
            <Setter Property="Height" Value="27"/>
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontFamily" Value="{DynamicResource ProximaSemiBold}" />
            <Setter Property="BorderBrush" Value="{DynamicResource LightGrayTextForegroundColor}" />
            <Setter Property="Background" Value="{DynamicResource PasswordBossBlueHeaderColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource WhiteColor}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" CornerRadius="0"  BorderBrush="{DynamicResource AddShareSelectedBorderColor}"
                                BorderThickness="0"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Content="{TemplateBinding Content}"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#245475" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="BorderThickness" Value="3" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SecureItemContainerStyle" TargetType="{x:Type telerik:RadTreeViewItem}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="0" Stroke="Transparent" StrokeThickness="0"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>

            <Setter Property="telerik:DragDropManager.AllowCapturedDrag" Value="False" />
            <Setter Property="telerik:DragDropManager.AllowDrag" Value="False" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="IsDropAllowed" Value="True"/>
            <Setter Property="IsEnabled" Value="True"/>
            <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type telerik:RadTreeViewItem}">
                        <Grid x:Name="RootElement" UseLayoutRounding="True" Background="{DynamicResource WhiteColor}" Margin="0,0,0,1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Display"/>
                                    <VisualState x:Name="Edit">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="EditHeaderElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Header">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Header"/>
                                            <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Image"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Header">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <SolidColorBrush Color="#23B194"/>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Expander">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <SolidColorBrush Color="#23B194"/>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected"/>
                                    <VisualState x:Name="SelectedUnfocused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="LoadingOnDemandStates">
                                    <VisualState x:Name="LoadingOnDemand">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LoadingVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Expander">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0:0:1" From="0" RepeatBehavior="Forever" To="359" Storyboard.TargetProperty="Angle" Storyboard.TargetName="LoadingVisualAngleTransform"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="LoadingOnDemandReverse"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpandStates">
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHostBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Collapsed"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border Grid.Row="0" Grid.RowSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                            <Grid x:Name="HeaderRow" MinHeight="{TemplateBinding MinHeight}" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <!--<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="6" Grid.Column="2" CornerRadius="2"/>-->
                                <Border x:Name="MouseOverVisual" BorderBrush="#FFFFC92B" BorderThickness="1" Grid.ColumnSpan="6" Grid.Column="2" CornerRadius="1" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFFBA3" Offset="1"/>
                                            <GradientStop Color="#FFFFFBDA" Offset="0"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <Border x:Name="SelectionUnfocusedVisual" BorderBrush="#FFDBDBDB" BorderThickness="1" Grid.ColumnSpan="6" Grid.Column="2" CornerRadius="1" Visibility="Collapsed">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0,1">
                                            <GradientStop Color="#FFF8F6F9" Offset="0"/>
                                            <GradientStop Color="#FFF0F0F0" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderBrush="Transparent" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <Border x:Name="SelectionVisual" BorderBrush="#FFFFC92B" BorderThickness="1" Grid.ColumnSpan="6" Grid.Column="2" CornerRadius="1" Visibility="Collapsed">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFCE79F" Offset="1"/>
                                            <GradientStop Color="#FFFDD3A8"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <Image x:Name="Image" Grid.Column="3" HorizontalAlignment="Center" MaxWidth="16" MaxHeight="16" Margin="2" VerticalAlignment="Center"/>
                                <Rectangle x:Name="FocusVisual" Grid.ColumnSpan="6" Grid.Column="2" IsHitTestVisible="False" RadiusY="3" RadiusX="3" Stroke="{DynamicResource BlackColor}" StrokeThickness="1" StrokeDashArray="1 2" Visibility="Collapsed"/>

                                <Grid x:Name="HeaderContentPanel" Background="Transparent" Grid.ColumnSpan="2" Grid.Column="4">
                                    <ContentControl x:Name="Header"  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <ContentPresenter x:Name="EditHeaderElement" ContentTemplate="{TemplateBinding HeaderEditTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </Grid>
                            <Border x:Name="ItemsHostBorder" BorderThickness="0" Grid.Row="1" Visibility="Collapsed" HorizontalAlignment="Stretch">
                                <Grid>
                                    <ItemsPresenter x:Name="ItemsHost" />
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate  x:Key="SecureItemDataTemplate">
            <Border x:Name="mainBorder" Margin="3,0,3,0" Padding="0 0 14 0" Height="40"
                    CornerRadius="2" Background="{DynamicResource WhiteColor}" HorizontalAlignment="Stretch">
                <Border.Style>
                        <Style>
                            <Setter Property="Border.BorderThickness" Value="0"/>
                            <Setter Property="Border.BorderBrush" Value="{DynamicResource GrayColor}"/>
                            <Style.Triggers>
                                <Trigger Property="Border.IsMouseOver" Value="True">
                                <Setter Property="Border.BorderBrush" Value="{DynamicResource AddShareSelectedBorderColor}" />
                                    <Setter Property="Border.BorderThickness" Value="1" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <CheckBox Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center"
                                  IsChecked="{Binding Path=IsSelected, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"/>

                        <Grid Grid.Column="1" ContextMenu="{x:Null}"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource WhiteColor}" UseLayoutRounding="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid Background="{Binding Background}" Grid.Column="0"  Margin="0 0 12 0" HorizontalAlignment="Center" Width="70" Height="35"  VerticalAlignment="Center">
                            <Image x:Name="dataImg"  Visibility="{Binding IsDefaultImage, Converter={StaticResource InvertedBooleanToVisibility}}"
                                Source="{Binding Image}" Stretch="Fill" >
                            </Image>
                        </Grid>

                        <StackPanel x:Name="LeftPartOfItemGrid" Grid.Column="1" Background="Transparent" VerticalAlignment="Center" Margin="20 0 0 0" >
                            <TextBlock x:Name="dataTb" HorizontalAlignment="Left" Width="260" 
                                Foreground="{DynamicResource PasswordBossBlackBackgroundColor}" TextWrapping="Wrap" TextAlignment="Left"
                                Padding="0,0,0,0" VerticalAlignment="Bottom" FontSize="11pt" FontWeight="Bold" 
                                FontFamily="{DynamicResource ProximaRegular}" Text="{Binding Name}" />
                            <TextBlock x:Name="UsernameTextBlock" HorizontalAlignment="Left" TextAlignment="Left" Margin="3 2 0 0"
                                Foreground="{DynamicResource LightGrayTextForegroundColor}"
                                Padding="0,0,0,0" VerticalAlignment="Top" FontSize="10pt" FontWeight="Normal"   TextWrapping="Wrap"
                                FontFamily="{DynamicResource ProximaRegular}" Text="{Binding ListViewSecondName}" />
                        </StackPanel>
                    </Grid>
                    </Grid>
                        
                    <Border.InputBindings>
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding DoubleClickCommand}" />
                    </Border.InputBindings>
                </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" Value="True">
                    <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource AddShareSelectedBorderColor}"/>
                    <Setter TargetName="mainBorder" Property="BorderThickness" Value="1"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="SelectedItemListBoxItemTemplate">
            <Border Background="{DynamicResource TextboxBorderbrush}" BorderThickness="0" Margin="3,0,3,0">
                <StackPanel Orientation="Horizontal" Height="30">
                    <TextBlock FontFamily="{DynamicResource OBProximaRegular}"
                               Margin="7,0,0,0"
                               Foreground="{DynamicResource SettingsTextLableForeground}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="14"
                               FontWeight="SemiBold"
                               Text="{Binding Path=Name}" />
                    <Border HorizontalAlignment="Right" VerticalAlignment="Center" Background="Transparent" Cursor="Hand" Margin="15,0,7,0">
                        <Border Height="15" Width="15" BorderBrush="{DynamicResource LightGrayTextForegroundColor}" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.UnselectItemCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                                           CommandParameter="{Binding Path=DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Image HorizontalAlignment="Center" VerticalAlignment="Center" Height="15" Width="15" Source="{DynamicResource delete_grey}" RenderOptions.BitmapScalingMode="HighQuality" />
                        </Border>
                    </Border>
                </StackPanel>
            </Border>
        </DataTemplate>

        <HierarchicalDataTemplate x:Key="FolderTemplate" ItemsSource="{Binding Path=ChildFolders}" DataType="{x:Type telerik:RadTreeViewItem}">
            <Grid x:Name="gridlist" ContextMenu="{x:Null}"
                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="Auto"
                      Background="{DynamicResource WhiteColor}" UseLayoutRounding="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <CheckBox Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,6,0"
                              IsChecked="{Binding Path=IsSelected, Mode=TwoWay}"/>

                <TextBlock Grid.Column="1"
                            HorizontalAlignment="Left"
                            Foreground="{DynamicResource PasswordBossBlackBackgroundColor}"
                            TextWrapping="Wrap"
                            TextAlignment="Left"
                            VerticalAlignment="Center"
                            FontSize="11pt"
                            FontWeight="Bold"
                            FontFamily="{DynamicResource ProximaRegular}"
                            Text="{Binding Name}" />
            </Grid>
        </HierarchicalDataTemplate>

        <Style x:Key="FolderItemContainerStyle" TargetType="{x:Type telerik:RadTreeViewItem}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="0" Stroke="Transparent" StrokeThickness="0"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>

            <Setter Property="telerik:DragDropManager.AllowCapturedDrag" Value="False" />
            <Setter Property="telerik:DragDropManager.AllowDrag" Value="False" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Padding" Value="1,4,5,4"/>
            <Setter Property="IsDropAllowed" Value="True"/>
            <Setter Property="IsEnabled" Value="True"/>
            <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
            <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type telerik:RadTreeViewItem}">
                        <Grid x:Name="RootElement" UseLayoutRounding="True" Background="{DynamicResource WhiteColor}" Margin="0,0,0,1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Display"/>
                                    <VisualState x:Name="Edit">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="EditHeaderElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Header">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Header"/>
                                            <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Image"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Header">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <SolidColorBrush Color="#23B194"/>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Expander">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <SolidColorBrush Color="#23B194"/>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected"/>
                                    <VisualState x:Name="SelectedUnfocused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="LoadingOnDemandStates">
                                    <VisualState x:Name="LoadingOnDemand">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LoadingVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Expander">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0:0:1" From="0" RepeatBehavior="Forever" To="359" Storyboard.TargetProperty="Angle" Storyboard.TargetName="LoadingVisualAngleTransform"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="LoadingOnDemandReverse"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpandStates">
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHostBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Collapsed"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Grid x:Name="HeaderRow" MinHeight="{TemplateBinding MinHeight}" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="5" Grid.Column="1" CornerRadius="2"/>
                                <Border x:Name="MouseOverVisual" BorderBrush="#FFFFC92B" BorderThickness="1" Grid.ColumnSpan="6" Grid.Column="2" CornerRadius="1" Opacity="0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFFBA3" Offset="1"/>
                                            <GradientStop Color="#FFFFFBDA" Offset="0"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <Border x:Name="SelectionUnfocusedVisual" BorderBrush="#FFDBDBDB" BorderThickness="1" Grid.ColumnSpan="6" Grid.Column="2" CornerRadius="1" Visibility="Collapsed">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0,1">
                                            <GradientStop Color="#FFF8F6F9" Offset="0"/>
                                            <GradientStop Color="#FFF0F0F0" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderBrush="Transparent" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <Border x:Name="SelectionVisual" BorderBrush="#FFFFC92B" BorderThickness="1" Grid.ColumnSpan="6" Grid.Column="2" CornerRadius="1" Visibility="Collapsed">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFCE79F" Offset="1"/>
                                            <GradientStop Color="#FFFDD3A8"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderBrush="White" BorderThickness="1" Background="{x:Null}" CornerRadius="0"/>
                                </Border>
                                <StackPanel x:Name="IndentContainer" Orientation="Horizontal">
                                    <Rectangle x:Name="IndentFirstVerticalLine" Stroke="#FFCCCCCC" Visibility="Collapsed" VerticalAlignment="Top"/>
                                </StackPanel>
                                <Grid x:Name="ListRootContainer"   Grid.Column="1" HorizontalAlignment="Center" MinWidth="21" VerticalAlignment="Top" Margin="0,0,0,0">
                                    <Rectangle x:Name="HorizontalLine" HorizontalAlignment="Right" Height="1" Stroke="#FFCCCCCC" VerticalAlignment="Center"/>
                                    <Rectangle x:Name="VerticalLine" HorizontalAlignment="Center" Stroke="#FFCCCCCC" VerticalAlignment="Top" Width="1"/>
                                    <ToggleButton x:Name="Expander" VerticalAlignment="Top" Margin="10,9,0,0" Template="{DynamicResource SimpleExpanderToggleButtonControlTemplate}" Background="{TemplateBinding Background}" IsTabStop="False"/>
                                    <Grid x:Name="LoadingVisual" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed" VerticalAlignment="Center">
                                        <Grid.RenderTransform>
                                            <TransformGroup>
                                                <RotateTransform Angle="0" CenterY="0.5" CenterX="0.5"/>
                                            </TransformGroup>
                                        </Grid.RenderTransform>
                                        <Path Data="M1,0A1,1,90,1,1,0,-1" Height="10" StrokeStartLineCap="Round" Stretch="Fill" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Width="10"/>
                                        <Path Data="M0,-1.1L0.1,-1 0,-0.9" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Height="4" Margin="5,-1.5,0,0" Stretch="Fill" StrokeThickness="1" VerticalAlignment="Top" Width="4"/>
                                    </Grid>
                                </Grid>
                                <Image x:Name="Image" Grid.Column="3" HorizontalAlignment="Center" MaxWidth="16" MaxHeight="16" Margin="2" VerticalAlignment="Center"/>
                                <Rectangle x:Name="FocusVisual" Grid.ColumnSpan="6" Grid.Column="2" IsHitTestVisible="False" RadiusY="3" RadiusX="3" Stroke="{DynamicResource BlackColor}" StrokeThickness="1" StrokeDashArray="1 2" Visibility="Collapsed"/>

                                <Grid x:Name="HeaderContentPanel" Background="Transparent" Grid.ColumnSpan="2" Grid.Column="4">
                                    <ContentControl x:Name="Header"  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <ContentPresenter x:Name="EditHeaderElement" ContentTemplate="{TemplateBinding HeaderEditTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                                <CheckBox x:Name="CheckBoxElement" Grid.Column="2" IsTabStop="False" Margin="5,0,0,0" Visibility="Collapsed" VerticalAlignment="Center">
                                    <telerik:StyleManager.Theme>
                                        <telerik:Office_BlackTheme/>
                                    </telerik:StyleManager.Theme>
                                </CheckBox>
                                <RadioButton x:Name="RadioButtonElement" Grid.Column="2" IsTabStop="False" Margin="5,0,0,0" Visibility="Collapsed" VerticalAlignment="Center">
                                    <telerik:StyleManager.Theme>
                                        <telerik:Office_BlackTheme/>
                                    </telerik:StyleManager.Theme>
                                </RadioButton>
                            </Grid>
                            <Border x:Name="ItemsHostBorder" Margin="5 0"  BorderThickness="0" Grid.Row="1" Visibility="Collapsed" HorizontalAlignment="Stretch">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ItemsPresenter x:Name="ItemsHost" Grid.Row="0" />
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </userControls:CustomChildWindow.Resources>
    
    <userControls:CustomChildWindow.TitelContent>
        <StackPanel>
            <TextBlock  Margin="0 23 0 15" FontFamily="{DynamicResource OBProximaRegular}" Text="{DynamicResource ShareNewSharedItemHeadline}" TextWrapping="Wrap" Foreground="{DynamicResource SettingsTextLableForeground}" FontSize="30"/>
        </StackPanel>
    </userControls:CustomChildWindow.TitelContent>

    <Grid Width="530">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Vertical" Margin="0,25,0,0">
            <TextBlock FontFamily="{DynamicResource OBProximaRegular}" FontWeight="SemiBold" FontSize="16"
                       Text="{DynamicResource ShareItemsTypeQuestion}" />
            <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                <RadioButton Style="{StaticResource BlueSettingsRadioButtonWithTick}" Width="240" Height="50" Content="{DynamicResource IndividualItems}"
                              IsChecked="{Binding Path=IsIndividualItems, Mode=TwoWay}" GroupName="itemsType"/>
                <RadioButton Style="{StaticResource BlueSettingsRadioButtonWithTick}" Width="240" Height="50" Content="{DynamicResource EntireFolder}"  Margin="6,0,0,0"
                              IsChecked="{Binding Path=IsIndividualItems, Mode=TwoWay, Converter={StaticResource InvertBoolToBoolConverter}}" GroupName="itemsType"/>
            </StackPanel>
        </StackPanel>

        <StackPanel Grid.Row="1" Orientation="Vertical" Margin="0,30,0,0"
                    Visibility="{Binding Path=IsIndividualItems, Converter={StaticResource BooleanToVisibilityConverter}}">
            <TextBlock FontFamily="{DynamicResource OBProximaRegular}" FontWeight="SemiBold" FontSize="16"
                           Text="{DynamicResource ChooseItems}" />
            <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                <ToggleButton Width="118" Height="40" Content="{DynamicResource NavPasswords}" Style="{StaticResource BlueSettingsToggleButton}"
                              IsChecked="{Binding Path=CurrentItemType, Converter={StaticResource PasswordTypeConverter}}" />
                <ToggleButton Width="118" Height="40" Content="{DynamicResource NavDigitalWallet}" Style="{StaticResource BlueSettingsToggleButton}" Margin="5,0,0,0"
                              IsChecked="{Binding Path=CurrentItemType, Converter={StaticResource DigitalWalletTypeConverter}}" />
                <ToggleButton Width="118" Height="40" Content="{DynamicResource NavPersonalInfo}" Style="{StaticResource BlueSettingsToggleButton}" Margin="5,0,0,0"
                              IsChecked="{Binding Path=CurrentItemType, Converter={StaticResource PersonalInfoTypeConverter}}" />
                <ToggleButton Width="118" Height="40" Content="{DynamicResource NavSecureNotes}" Style="{StaticResource BlueSettingsToggleButton}" Margin="5,0,0,0"
                              IsChecked="{Binding Path=CurrentItemType, Converter={StaticResource SecureNotesTypeConverter}}"/>
            </StackPanel>

            <ListBox ItemsSource="{Binding Path=DisplayedItems}"
                                 Height="200"
                                 MinWidth="360"
                                 SelectionMode="Multiple"
                                 HorizontalAlignment="Stretch"
                                 BorderBrush="{DynamicResource TextboxBorderbrush}"
                                 Background="{DynamicResource TextboxBorderbrush}"
                                 BorderThickness="1"
                                 ItemTemplate="{StaticResource SecureItemDataTemplate}"
                                 Margin="0,3,0,0"
                                 helpers:TwoWayListBoxSeletedItemsHelper.SelectedItems="{Binding SelectedItems, Mode=TwoWay}">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Visibility">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource ItemShareTypeToVisibilityConverter}">
                                    <Binding Path="." />
                                    <Binding Path="DataContext.CurrentItemType" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" />
                                    <Binding Path="DataContext.SearchViewModel.Search" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border
                                        BorderThickness="{TemplateBinding Border.BorderThickness}"
                                        Padding="{TemplateBinding Control.Padding}"
                                        BorderBrush="{TemplateBinding Border.BorderBrush}"
                                        Background="{TemplateBinding Panel.Background}"
                                        SnapsToDevicePixels="True">
                                        <ContentPresenter
                                            Content="{TemplateBinding ContentControl.Content}"
                                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </StackPanel>

        <telerik:RadTreeView Grid.Row="1" Margin="0,30,0,0"
                             Visibility="{Binding Path=IsIndividualItems, Converter={StaticResource BoolToVisibilityInverter}}"
                             ItemsSource="{Binding Path=DisplayedItems}"
                             Height="200"
                             MinWidth="360"
                             SelectionMode="Multiple"
                             HorizontalAlignment="Stretch"
                             ItemTemplate="{StaticResource FolderTemplate}"
                             helpers:RadTreeViewSelectionHelper.SelectedItems="{Binding SelectedItems, Mode=TwoWay}"
                             ItemContainerStyle="{StaticResource FolderItemContainerStyle}"
                             BorderBrush="{DynamicResource TextboxBorderbrush}"
                             Background="{DynamicResource WhiteColor}"
                             BorderThickness="1"/>

        <local:SearchBox DataContext="{Binding Path=SearchViewModel}" Grid.Row="2" HorizontalAlignment="Stretch" Margin="0,30,0,0"
                                     BorderBrush="{DynamicResource TextboxBorderbrush}"
                                     Visibility="{Binding Path=DataContext.IsIndividualItems, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:AddShareWindow}}, Converter={StaticResource BooleanToVisibilityConverter}}"/>

        <StackPanel Grid.Row="3" Orientation="Vertical" Margin="0,30,0,40">
            <TextBlock FontFamily="{DynamicResource OBProximaRegular}" FontWeight="SemiBold" FontSize="14" Text="{DynamicResource SelectedItems}" />
            <Grid MinWidth="400">
                <ListBox Margin="0,5,0,0"
                        MinHeight="32"
                        HorizontalAlignment="Stretch"
                        BorderBrush="{Binding Path=IsValid, Converter={StaticResource StateToBrushConverter}}"
                        BorderThickness="1"
                        ItemsSource="{Binding Path=SelectedItems}"
                        ItemTemplate="{StaticResource SelectedItemListBoxItemTemplate}"
                        Style="{DynamicResource SecureItemsListBoxStyle}"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel ScrollViewer.HorizontalScrollBarVisibility="Disabled" Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
                <Ellipse Width="16" Height="16" HorizontalAlignment="Right" Fill="{DynamicResource PasswordBossRedColor}" Visibility="{Binding Path=IsValid ,Converter={StaticResource BoolToVisibilityInverter}}"  VerticalAlignment="Center" Margin="0 2 6 0"/>
                <TextBlock Text="!" FontWeight="Bold" Foreground="White"  Visibility="{Binding Path=IsValid, Converter={StaticResource BoolToVisibilityInverter}}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 0 12 0"/>
            </Grid>
        </StackPanel>
    </Grid>
</userControls:CustomChildWindow>
