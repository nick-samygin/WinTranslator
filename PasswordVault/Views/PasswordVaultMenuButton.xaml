<UserControl x:Class="PasswordBoss.Views.PasswordVaultMenuButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:controls="clr-namespace:PasswordBoss.UserControls;assembly=theme"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" Cursor="Hand"
             mc:Ignorable="d">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
        
        <DataTemplate x:Key="FolderTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Horizontal">
                    <TextBlock    Margin="0" Text="{Binding FolderName}" />                   
                </StackPanel>
            </Grid>

        </DataTemplate>

        <HierarchicalDataTemplate ItemsSource="{Binding ChildList}" x:Key="HierarchicalDataTemplate">
            <ContentControl ContentTemplate="{StaticResource FolderTemplate}" Content="{Binding .}"/>
        </HierarchicalDataTemplate>

    </UserControl.Resources>
    <Grid x:Name="border">
        <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="40"/>
                <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.Style>
            <Style TargetType="{x:Type Grid}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#2D4A5B" />
                    </Trigger>
                    <DataTrigger  Binding='{Binding  ElementName=btnPasswordVault,Path=IsChecked}' Value='True' >
                        <Setter Property="Background"  Value="{DynamicResource AlertButtonBackgroundcolor}"/>
                    </DataTrigger>                  
                </Style.Triggers>
            </Style>
        </Grid.Style>        
        <controls:MenuButtonControl Header="{DynamicResource Passwords}" x:Name="btnPasswordVault" Click="Button_Click"   ImageSource="{DynamicResource lockGrey}" SelectedImageSource="{DynamicResource lockGreen}"/>
        <!--<Button Grid.Column="1" Style="{DynamicResource CommonButtonStyle}" BorderThickness="0" Padding="3"
                Command="{Binding ShowHideFolderTreeCommand}" HorizontalAlignment="Right"  Margin="0 0 18 0" VerticalAlignment="Center">
            <Image  Source="{DynamicResource menu_expand_white}" x:Name="checkIcon" Width="18" Height="19" >
                <Image.Style>
                    <Style TargetType='{x:Type Image}'>
                        <Style.Triggers>
                            <DataTrigger  Binding='{Binding  ElementName=btnPasswordVault,Path=IsChecked}' Value='True' >
                                <Setter Property="Opacity"  Value="1" />
                            </DataTrigger>
                            <DataTrigger   Binding='{Binding  ElementName=btnPasswordVault,Path=IsChecked}' Value='False' >
                                <Setter Property="Opacity"  Value="0" />
                            </DataTrigger>
                            <DataTrigger  Binding="{Binding  ElementName=treeViewGrid,Path=Visibility}" Value="Visible" >
                                <Setter  Property="LayoutTransform" >
                                    <Setter.Value>
                                        <RotateTransform  Angle="0" CenterY="0.5" CenterX="0.5"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger  Binding="{Binding  ElementName=treeViewGrid,Path=Visibility}" Value="Collapsed" >
                                <Setter  Property="LayoutTransform" >
                                    <Setter.Value>
                                        <RotateTransform  Angle="-90" CenterY="0.5" CenterX="0.5"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </Button>
        <Grid x:Name="treeViewGrid" Grid.Row="1" Grid.ColumnSpan="2" Margin="0 3 0 0" Visibility="{Binding ShowMenuTreeView,Converter={StaticResource BoolToVisibility}}" >
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>                
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Button  Content="Show All" Margin="19 3 9 5"  Command="{Binding ShowAllCommand}">
                <Button.Style>
                    <Style  TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="3 4 0 0 "/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
            <telerik:RadTreeView Grid.Row="1" x:Name="treeView"  Margin="2" AllowDrop="True" Grid.ColumnSpan="2" HorizontalAlignment="Stretch"
                               ItemContainerStyle="{DynamicResource MenuFolderTreeViewItemStyle}" SelectedItem="{Binding SelectedFolderView,Mode=TwoWay}" SelectionMode="Single"
                               ItemTemplate="{StaticResource HierarchicalDataTemplate}"   ItemsSource="{Binding FoldersTreeCollection}"/>
            <Rectangle Fill="{StaticResource LightGrayTextForegroundColor}" Height="1" HorizontalAlignment="Stretch" Grid.Row="2" VerticalAlignment="Top" Margin="9 0"/>

            <Button Grid.Row="3" Content="Add new folder" Margin="19 3 9 10"  Command="{Binding AddNewFolderCommand}">
                <Button.Style>
                    <Style  TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="3 4 0 0 "/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>                                 
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
            
        </Grid>-->
    </Grid>
    
</UserControl>
