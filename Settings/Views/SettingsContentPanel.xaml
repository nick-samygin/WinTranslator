<UserControl x:Class="Settings.Views.SettingsContentPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Settings.Views"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:uc="clr-namespace:PasswordBoss.Views.UserControls"
             xmlns:converters="clr-namespace:QuickZip.Converters;assembly=theme"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
        <sys:Int32 x:Key="intTenMinutes">10</sys:Int32>
        <sys:Int32 x:Key="intThirtyMinutes">30</sys:Int32>
        <sys:Int32 x:Key="intFortyFiveMinutes">45</sys:Int32>
        <sys:Int32 x:Key="intSixtyMinutes">60</sys:Int32>
        <sys:Int32 x:Key="intTwentyFourHours">1440</sys:Int32>
        <sys:Int32 x:Key="intNever">-1</sys:Int32>
        <converters:RadioButtonCheckedConverter x:Key="RadioButtonCheckedConverter" />

        <DataTemplate x:Key="FolderTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
           
            <StackPanel Orientation="Horizontal">
                <TextBlock  Style="{DynamicResource SettingsLabelTextBlockStyle}"  Margin="0" Text="{Binding Name}" />
                <TextBlock   Text="{Binding ChildList.Count,StringFormat='{} ({0})'}" Visibility="{Binding }" />
            </StackPanel>

                <Border   HorizontalAlignment="Right" Grid.Column="1" Margin="0 0 5 0" Background="Transparent" Cursor="Hand">
                    <Border Height="20" Width="20" BorderBrush="{DynamicResource LightGrayTextForegroundColor}" >
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.BorderThickness" Value="0"/>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.BorderThickness" Value="1"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding DataContext.EditFolderCommand,RelativeSource={RelativeSource FindAncestor,  AncestorType={x:Type telerik:RadTreeView}}}" CommandParameter="{Binding uuid}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Image HorizontalAlignment="Center" VerticalAlignment="Center" Height="14" Width="14" Source="{DynamicResource imgEditNormal}" RenderOptions.BitmapScalingMode="HighQuality"  ToolTip="{DynamicResource Edit}" />
                    </Border>
                </Border>


                <Border  HorizontalAlignment="Right" Grid.Column="2" Margin="0 0 5 0" Background="Transparent" Cursor="Hand">
                    <Border Height="20" Width="20" BorderBrush="{DynamicResource LightGrayTextForegroundColor}" >                       
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.BorderThickness" Value="0"/>
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.BorderThickness" Value="1"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding DataContext.DeleteFolderCommand,RelativeSource={RelativeSource FindAncestor,  AncestorType={x:Type telerik:RadTreeView}}}" CommandParameter="{Binding uuid}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        
                        <Image HorizontalAlignment="Center" VerticalAlignment="Center" Height="14" Width="14" Source="{DynamicResource imgTrashMedium}" RenderOptions.BitmapScalingMode="HighQuality"  ToolTip="{DynamicResource Delete}" />
                    </Border>
                </Border>
            </Grid>

        </DataTemplate>

        <HierarchicalDataTemplate ItemsSource="{Binding ChildList}" x:Key="HierarchicalDataTemplate">
            <ContentControl ContentTemplate="{StaticResource FolderTemplate}" Content="{Binding .}"/>
        </HierarchicalDataTemplate>
        
    </UserControl.Resources>
    <!-- Account Setting Grid-->
    <Grid x:Name="accountsetting_grid" Grid.Column="1" Background="{DynamicResource MainWindowBackgroundColor}">
        <TabControl Name="accountSettingsTab"  BorderThickness="2,0,0,0" SelectedIndex="{Binding TabSelectedIndex}" SelectionChanged="accountSettingsTab_SelectionChanged" IsVisibleChanged="accountSettingsTab_IsVisibleChanged"
                    BorderBrush="Transparent" Background="{DynamicResource WhiteColor}" VerticalAlignment="Stretch" Margin="0,-1,0,0">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="LostFocus">
                    <i:InvokeCommandAction Command="{Binding TabControlLostFocusCommand}" CommandParameter="{Binding ElementName=accountSettingsTab}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <!--  SelectedIndex="{Binding SelectedIndexTabControl,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" -->
            <TabControl.Resources>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid x:Name="grid" Height="30">
                                    <Border Name="Border" Background="{DynamicResource TextboxBorderbrush}" BorderThickness="0 2 0 0">
                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center"
                                                    VerticalAlignment="Center">
                                            <TextBlock x:Name="headerTxt" Margin="33.5 0 33 0" Text="{TemplateBinding Header}" FontSize="12" Foreground="{DynamicResource SettingsTextLableForeground}" FontFamily="{DynamicResource ProximaSemiBold}" />
                                        </StackPanel>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource WhiteColor}" />
                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PasswordBossGreenHoverColor}" />
                                        <Setter TargetName="Border" Property="BorderThickness" Value="0,2,0,0" />
                                        <Setter TargetName="headerTxt" Property="FontWeight" Value="SemiBold" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource MainWindowBackgroundColor}" />
                                        <Setter TargetName="Border" Property="BorderThickness" Value="0,0,1,0" />
                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource WhiteColor}" />
                                        <Setter TargetName="headerTxt" Property="FontWeight" Value="Normal" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <!--general tab design-->
            <TabItem x:Name="tabGeneral" Height="Auto"    Background="{DynamicResource WhiteColor}" IsSelected="True" Header="{DynamicResource Profile}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="LostFocus">
                        <i:InvokeCommandAction Command="{Binding TabLostFocusCommand}" CommandParameter="{Binding ElementName=tabGeneral}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <TabItem.Content>
                    <!--main general tab grid-->
                    <Grid Background="{DynamicResource WhiteColor}" Margin="25 10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>

                        <Grid >
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock  Text="{DynamicResource AccountStatus}" Style="{DynamicResource SettingsLabelTextBlockStyle}" />

                            <TextBlock Grid.Row="1"  Text="{DynamicResource AccountEmail}" Style="{DynamicResource SettingsSubLabelTextBlockStyle}" />
                            <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Email, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource SettingsSubLabelTextBlockStyle}" Foreground="{DynamicResource AddItemTextForegroundColor}"/>


                            <TextBlock Grid.Row="2" Text="{DynamicResource SubscriptionType}" Style="{DynamicResource SettingsSubLabelTextBlockStyle}" />
                            <TextBlock  Grid.Row="2" Grid.Column="1" Text="{Binding MembershipType}" Style="{DynamicResource SettingsSubLabelTextBlockStyle}" Foreground="{DynamicResource AddItemTextForegroundColor}"/>

                            <TextBlock  Grid.Row="3"   Text="{DynamicResource SettingsRenewalDate}"  Style="{DynamicResource SettingsSubLabelTextBlockStyle}" />

                            <TextBlock  Grid.Row="3" Grid.Column="1" Text="{Binding MembershipExpiresDate, StringFormat='{}{0:MMMM dd, yyyy}'}"
                                                Style="{DynamicResource SettingsSubLabelTextBlockStyle}" Foreground="{DynamicResource AddItemTextForegroundColor}" />

                            <Button Grid.Row="3" Grid.ColumnSpan="3" HorizontalAlignment="Center" Visibility="{Binding RenewVisibility, Converter={StaticResource BoolToVisibility}}"   Command="{Binding RenewCommand}" BorderBrush="{DynamicResource LightGrayTextForegroundColor}" Background="{DynamicResource MainWindowGrayBackgroundColor}"
                                Content="{DynamicResource Renew}" Foreground="{DynamicResource PasswordBossBlueHeaderColor}" VerticalAlignment="Bottom"   Style="{DynamicResource WhiteSettingsButton}" />

                            <Button Grid.Row="3" Grid.ColumnSpan="3" HorizontalAlignment="Center" Visibility="{Binding UpgradeVisibility, Converter={StaticResource BoolToVisibility}}" Command="{Binding UpgradeCommand}" BorderBrush="{DynamicResource LightGrayTextForegroundColor}" Background="{DynamicResource MainWindowGrayBackgroundColor}"
                                Content="{DynamicResource Upgrade}" Foreground="{DynamicResource PasswordBossBlueHeaderColor}" VerticalAlignment="Bottom"  Style="{DynamicResource WhiteSettingsButton}" />

                        </Grid>
                        
                        <Border HorizontalAlignment="Stretch" Height="1" Margin="0 20" Grid.Row="1"
                                    VerticalAlignment="Center" Background="{DynamicResource AccountSettingsGrayBackgroundColor}"  />
                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <StackPanel>
                            <TextBlock  Text="{DynamicResource FirstName}" Style="{DynamicResource SettingsLabelTextBlockStyle}" />
                            <TextBox Name="firstName" Text="{Binding FirstName, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource SettingTextBoxStyle}"/>
                            
                            <StackPanel Orientation="Horizontal">
                                <TextBlock  Text="{DynamicResource MobileNumber}" Style="{DynamicResource SettingsLabelTextBlockStyle}" />
                                <ContentControl   Style="{DynamicResource HelpControl}" Tag="{DynamicResource MobileNumberProfileInfo}" />
                            </StackPanel>
                                <ComboBox x:Name="AccountSettingsCountriesCombobox" HorizontalAlignment="Left"
                                      Style="{DynamicResource SettingsComboboxStyle}" SelectionChanged="ComboBox_SelectionChanged"
                                      BorderThickness="1"
                                          ItemContainerStyle="{DynamicResource LocationComboboxItemStyle}"
                                      ItemsSource="{Binding Path=Countries}" 
                                      SelectedItem="{Binding SelectedCountry}"
                                      TextSearch.TextPath="Name" IsTextSearchEnabled="True">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}" Margin="0,4,0,0" FontFamily="{DynamicResource ProximaRegular}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding AccountSettingsComboboxChangedCommand}" CommandParameter="{Binding ElementName=AccountSettingsCountriesCombobox}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>
                            <StackPanel Orientation="Horizontal">
                                    <TextBox IsEnabled="False" Text="{Binding SelectedCountry.DialingCode, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource SettingTextBoxDisableStyle}" Width="55" Margin="0 4 4 0"/>
                                <TextBox Text="{Binding Mobile, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource SettingTextBoxStyle}" Width="281"/>
                            </StackPanel>

                            <TextBlock Text="{DynamicResource Language}"
                                      Style="{DynamicResource SettingsLabelTextBlockStyle}" />
                            <ComboBox x:Name="AccountSettingsLanguageCombobox" HorizontalAlignment="Left"
                                      Style="{DynamicResource SettingsComboboxStyle}" SelectionChanged="ComboBox_SelectionChanged"
                                      BorderThickness="1"
                                      ItemContainerStyle="{DynamicResource LocationComboboxItemStyle}"
                                      ItemsSource="{Binding Path=Languages}"
                                     SelectedItem="{Binding SelectedLanguage}"
                                      TextSearch.TextPath="Name" IsTextSearchEnabled="True">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding TranslationName}" Margin="0,4,0,0" FontFamily="{DynamicResource ProximaRegular}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding AccountSettingsComboboxChangedCommand}" CommandParameter="{Binding ElementName=AccountSettingsLanguageCombobox}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>
                            </StackPanel>
                            <StackPanel Grid.Column="1">
                                <TextBlock  Text="{DynamicResource LastName}" Style="{DynamicResource SettingsLabelTextBlockStyle}" />
                                <TextBox  Text="{Binding LastName, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource SettingTextBoxStyle}"/>
                            </StackPanel>

                        </Grid>

                        <!--<TextBlock Grid.Column="1" Grid.Row="18" Text="{DynamicResource PasswordBossPortal}"
                                      Style="{DynamicResource LabelTextBlockStyle}" />
                            <Button Grid.Row="18" Grid.Column="2" Height="25" Width="100" HorizontalAlignment="Left"
                                Content="{DynamicResource Login}" Background="{DynamicResource PasswordBossGreenColor}" Foreground="{DynamicResource WhiteColor}" Command="{Binding LoginPortalCommand}"
                                FontWeight="SemiBold" Style="{DynamicResource roundButton}" />-->

                            <Border HorizontalAlignment="Stretch" Height="1" Margin="0 60 0 30" Grid.Row="3"
                                    VerticalAlignment="Center" Background="{DynamicResource AccountSettingsGrayBackgroundColor}"  />

                            <Button  Command="{Binding SaveTabGeneralDataCommand}" Grid.Row="4"
                                Content="{DynamicResource Save}"  VerticalAlignment="Center" Style="{DynamicResource BlueSettingsButton}" />
     
                    </Grid>
                </TabItem.Content>
            </TabItem>
            <TabItem x:Name="tabPreferences"   Background="{DynamicResource WhiteColor}" Header="{DynamicResource Preferences}"
                     IsSelected="{Binding DisplayXamlTab, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="LostFocus">
                        <i:InvokeCommandAction Command="{Binding TabLostFocusCommand}" CommandParameter="{Binding ElementName=tabPreferences}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <TabItem.Content>
                    <Grid x:Name="PreferencesTabGrid" Margin="25 30 25 0" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="400" />
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Vertical">
                            <TextBlock Text="{DynamicResource CloudBackup}"
                                           Foreground="{DynamicResource SettingsTextLableForeground}" FontSize="14"
                                           FontFamily="{DynamicResource ProximaRegular}"
                                           FontWeight="SemiBold" />

                            <TextBlock Foreground="{DynamicResource SettingsTextLableForeground}" TextWrapping="Wrap" FontSize="14" FontWeight="Normal"
                                           FontFamily="{DynamicResource ProximaRegular}">
                                <Run Text="{DynamicResource AccountSettingEnableBackup}" />
                                <Run Text="{DynamicResource AccountSettingEnableBackup2}" />
                            </TextBlock>

                            <Grid Grid.Row="0" Grid.Column="1"  HorizontalAlignment="Left" Margin="0 35 0 0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <CheckBox Style="{DynamicResource settingsToggleButtonStyle}" HorizontalAlignment="Left" 
                                          IsChecked="{Binding EnableStorageCloudBackup}" Margin="0,0,30,0">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                            <i:InvokeCommandAction Command="{Binding EnableStorageCloudBackupCommand}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </CheckBox>
                                <TextBlock Grid.Column="1" Text="{DynamicResource LastBackup}" FontSize="12" FontWeight="SemiBold" FontFamily="{DynamicResource ProximaRegular}"
                                               Foreground="{DynamicResource SettingsTextLableForeground}" />
                                <TextBlock  Grid.Column="1" Grid.Row="1" Text="{Binding LastSync, StringFormat=g}" FontWeight="Normal" FontSize="12" FontFamily="{DynamicResource ProximaRegular}"
                                               Foreground="{DynamicResource LightGrayTextForegroundColor}" />
                            </Grid>
                            
                        </StackPanel>
                        
                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center"
                                        HorizontalAlignment="Left" Margin="40,0,0,0">
                            <Image Source="{Binding BackupImage, UpdateSourceTrigger=PropertyChanged}" Width="93" Height="70" />
                            <Border Margin="0,5,0,0" BorderThickness="1">
                                <Button VerticalContentAlignment="Center" HorizontalAlignment="Center" BorderThickness="0" MinWidth="115"
                                                Height="27" Foreground="{DynamicResource WhiteColor}" HorizontalContentAlignment="Center"
                                                Content="{DynamicResource BackupNow}" Padding="3 0"
                                                IsEnabled="{Binding EnableStorageCloudBackup}"
                                                Command="{Binding AccountSettingCommand}"
                                                Style="{DynamicResource backupButtonstyle}" />
                            </Border>
                        </StackPanel>
                        
                        <Border Grid.Row="1" Grid.ColumnSpan="3" Height="1" Margin="0 40"
                                    VerticalAlignment="Center" Background="{DynamicResource AccountSettingsGrayBackgroundColor}" />
                        <StackPanel Grid.Row="2"    >

                            <TextBlock Text="{DynamicResource SetStorageLocation}" FontWeight="SemiBold" FontSize="14"
                                           FontFamily="{DynamicResource ProximaRegular}"
                                               Foreground="{DynamicResource SettingsTextLableForeground}" />

                            <TextBlock Text="{DynamicResource AccountSettingChooseLocation}" 
                                           FontFamily="{DynamicResource ProximaRegular}"
                                           Foreground="{DynamicResource SettingsTextLableForeground}" TextWrapping="Wrap" FontSize="14" FontWeight="Normal" />                           
                            
                        </StackPanel>


                        <ItemsControl  Grid.Row="3"  Grid.ColumnSpan="2" ItemsSource="{Binding StorageRegions}" Margin="0 27 0 0" VerticalAlignment="Stretch" HorizontalAlignment="Left" >
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Top" Margin="75 7 0 7">
                                        <RadioButton Style="{DynamicResource AutoLockRadioButtonStyle}"
                                                             VerticalAlignment="Center" IsChecked="{Binding Checked}"
                                                             GroupName="cloudbackupgroup"
                                                             IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.EnableStorageCloudBackup}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Checked">
                                                    <i:InvokeCommandAction
                                                                Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.StorageRegionChangedCommand}"
                                                                CommandParameter="{Binding UUID}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </RadioButton>
                                        <TextBlock VerticalAlignment="Center" Margin="10,2,0,0"
                                                           Text="{Binding Name}" FontSize="14" FontFamily="{DynamicResource ProximaRegular}"
                                                           Foreground="{Binding CommonForegroundTextColor}" />
                                    </StackPanel>

                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="3" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>

                        <Border Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" Height="1" Margin="0 40"
                                    VerticalAlignment="Center" Background="{DynamicResource AccountSettingsGrayBackgroundColor}" />

                        <Button  Grid.Row="5"  Grid.ColumnSpan="2" Command="{Binding SaveTabPreferencesCommand}" 
                                Content="{DynamicResource Save}" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{DynamicResource BlueSettingsButton}" />
                    </Grid>

                </TabItem.Content>
            </TabItem>
            <!--Security tab design-->
            <TabItem x:Name="tabSecurity"   Background="{DynamicResource WhiteColor}" Header="{DynamicResource Security}"
                     IsSelected="{Binding DisplayXamlTab, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <TabItem.Content>
                    <Grid x:Name="SecurityTabGrid" Background="{DynamicResource WhiteColor}" Margin="10 20 27 0" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border  Grid.Column="0" Width="1" HorizontalAlignment="Right"
                                Background="{DynamicResource AccountSettingsGrayBackgroundColor}" />
                        <!--left side grid-->
                        <Grid Grid.Column="0" HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="31" />
                                <RowDefinition Height="Auto" MaxHeight="31" />
                                <RowDefinition Height="Auto" MaxHeight="31" />
                                <RowDefinition Height="31" />
                                <RowDefinition Height="31" />
                                <RowDefinition Height="31" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <!--Header row-->


                            <!--first row-->
                            <Border Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource AccountSettingsGrayBackgroundColor}"
                                    Margin="0,0,1,0" />
                            <RadioButton Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" GroupName="security"
                                         HorizontalContentAlignment="Left" VerticalAlignment="Stretch"
                                         VerticalContentAlignment="Stretch" Margin="0,0,1,0" Background="{DynamicResource WhiteColor}"
                                         Command="{Binding SetAutoLockCommand}"
                                         CommandParameter="{Binding SetAutoLockVisibility}"
                                         Style="{DynamicResource SecurityTabButtonStyle}" IsChecked="{Binding SetAutoLockVisibility,Mode=TwoWay}">
                                <TextBlock Text="{DynamicResource AutoLockTime}" FontSize="14" FontWeight="Bold"
                                           FontFamily="{DynamicResource ProximaLight}"
                                           HorizontalAlignment="Left" VerticalAlignment="Stretch"
                                           Padding="22,9,0,0" />
                            </RadioButton>

                            <!--second row-->
                            <RadioButton Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" GroupName="security"
                                         HorizontalContentAlignment="Left" VerticalAlignment="Stretch"
                                         VerticalContentAlignment="Stretch" Margin="-2,0,1,0" Background="{DynamicResource WhiteColor}"
                                         Style="{DynamicResource SecurityTabButtonStyle}"
                                         Command="{Binding ChangeMasterPasswordCommand}"
                                         CommandParameter="{Binding ElementName=SetNewPasswordBox}">
                                <TextBlock Text="{DynamicResource ChangeMasterPass}" FontSize="14" FontWeight="Bold"
                                           FontFamily="{DynamicResource ProximaLight}"
                                           HorizontalAlignment="Left" VerticalAlignment="Stretch"
                                           Padding="22,9,0,0" />
                            </RadioButton>
                            <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource AccountSettingsGrayBackgroundColor}"
                                    Margin="0,0,1,0" />

                            <!--third row-->
                            <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Height="31" Margin="0" Visibility="{Binding TouchScreenDetected, Converter={StaticResource BoolToVisibility}}" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{DynamicResource EnablePIN}" FontSize="14" FontWeight="Bold"
                                       Foreground="{DynamicResource SettingsTextLableForeground}" 
                                       Grid.Column="1"
                                       FontFamily="{DynamicResource ProximaLight}"
                                       HorizontalAlignment="Left" VerticalAlignment="Stretch" Padding="0,8,0,0" />
                                <CheckBox Grid.Column="1" Style="{DynamicResource togglebuttonstyleEmpty}"
                                      IsChecked="{Binding EnablePinAccessIsChecked}"
                                      HorizontalAlignment="Right" HorizontalContentAlignment="Center"
                                      IsEnabled="{Binding TouchScreenDetected}"
                                      VerticalAlignment="Center" />
                                <Border Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource AccountSettingsGrayBackgroundColor}"
                                    Margin="0,0,1,0" />
                            </Grid>

                            <!--fourth row-->
                            <Grid Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" Height="31" Margin="0" Visibility="{Binding TouchScreenDetected, Converter={StaticResource BoolToVisibility}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <RadioButton Grid.Column="0" Grid.ColumnSpan="3" GroupName="security"
                                         HorizontalContentAlignment="Left" VerticalAlignment="Stretch"
                                         VerticalContentAlignment="Stretch" Margin="-2,0,1,0" Background="{DynamicResource WhiteColor}"
                                         Style="{DynamicResource SecurityTabButtonStyle}"
                                         Command="{Binding ChangePINCommand}">
                                    <TextBlock Text="{DynamicResource ChangePIN}" FontSize="14" FontWeight="Bold"
                                           FontFamily="{DynamicResource ProximaLight}"
                                           HorizontalAlignment="Left" VerticalAlignment="Stretch"
                                           Padding="32,9,0,0" />
                                </RadioButton>
                                <Border Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource AccountSettingsGrayBackgroundColor}"
                                    Margin="0,0,1,0" />
                            </Grid>
                            <!--fifth row-->
                            <TextBlock Text="{DynamicResource RememberEmailLogout}" FontSize="14" FontWeight="Bold"
                                    Foreground="{DynamicResource SettingsTextLableForeground}" Grid.Row="5"
                                    Grid.Column="1"
                                    FontFamily="{DynamicResource ProximaLight}"
                                    HorizontalAlignment="Left" VerticalAlignment="Stretch" Padding="0,8,0,0" />
                            <CheckBox Grid.Row="5" Grid.Column="1" Style="{DynamicResource settingsToggleButtonStyle}"
                                    HorizontalAlignment="Right" HorizontalContentAlignment="Center"
                                    VerticalAlignment="Center"
                                    IsChecked="{Binding SecurityRememberLastLogin}" />
                            <Border Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                VerticalAlignment="Bottom" Background="{DynamicResource AccountSettingsGrayBackgroundColor}"
                                Margin="-2,0,1,0" />

                            <!--sixth row-->
                            <TextBlock Text="{DynamicResource FactorAuth}" FontSize="14" FontWeight="Bold"
                                       Foreground="{DynamicResource SettingsTextLableForeground}" Grid.Row="6"
                                       Grid.Column="1"
                                       FontFamily="{DynamicResource ProximaLight}"
                                       HorizontalAlignment="Left" VerticalAlignment="Stretch" Padding="0,8,0,0" />
                            <CheckBox x:Name="chkTwoStepVerification" Grid.Row="6" Grid.Column="1" Style="{DynamicResource settingsToggleButtonStyle}"                                      
                                      HorizontalAlignment="Right" HorizontalContentAlignment="Center"
                                      VerticalAlignment="Center"
                                      IsChecked="{Binding TwoStepVerification}" Command="{Binding ShowTwoStepVerificationDialogCommand}"></CheckBox>
                            <Border Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource AccountSettingsGrayBackgroundColor}"
                                    Margin="-2,0,1,0" />

                            <StackPanel Orientation="Horizontal" Grid.Row="7" Grid.Column="1">
                                <TextBlock Text="{DynamicResource TwoStepTrustedDevice}" FontSize="14" FontWeight="Bold"
                                       FontFamily="{DynamicResource ProximaLight}"
                                       HorizontalAlignment="Left" VerticalAlignment="Stretch" Padding="10,8,0,0">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=chkTwoStepVerification, Path=IsChecked}" Value="False">
                                                    <Setter Property="Foreground" Value="{DynamicResource LightGrayTextForegroundColor}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=chkTwoStepVerification, Path=IsChecked}" Value="True">
                                                    <Setter Property="Foreground" Value="{DynamicResource SettingsTextLableForeground}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <ContentControl Style="{DynamicResource HelpControl}" VerticalAlignment="Center" Tag="{DynamicResource AccountSettingTrustedDeviceTooltipText}"/>
                            </StackPanel>

                            <CheckBox x:Name="chkTwoStepTrustedDevice" Grid.Row="7" Grid.Column="1" 
                                      HorizontalAlignment="Right" HorizontalContentAlignment="Center"
                                      VerticalAlignment="Center"
                                      IsChecked="{Binding TwoStepTrustedDevice}" >
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox" BasedOn="{StaticResource settingsToggleButtonStyle}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=chkTwoStepVerification, Path=IsChecked}" Value="False">
                                                <!--<Setter Property="Visibility" Value="Collapsed" />-->
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>

                            <Border Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource AccountSettingsGrayBackgroundColor}"
                                    Margin="0,0,1,0"/>
                        </Grid>

                        <!--right side grid for change master password content-->
                        <Grid x:Name="changepassword_grid" Grid.Column="1"
                              Visibility="{Binding ChangePasswordVisibility, Converter={StaticResource BoolToVisibility}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="28" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40" />
                                <RowDefinition Height="43" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="46" />
                                <RowDefinition Height="6" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="17" />
                                <RowDefinition Height="17" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="40" />
                                <RowDefinition Height="43" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <!--<TextBlock Grid.Row="1" Grid.Column="1" Text="{DynamicResource ChangeMasterPass}"
                                       FontSize="13"
                                       Foreground="{DynamicResource PasswordBossGreenColor}" FontFamily="{DynamicResource ProximaRegular}"
                                       HorizontalAlignment="Left" FontWeight="Normal" />-->
                            <TextBlock Grid.Row="0" Grid.Column="1" Text="{DynamicResource ExistingMasterPassword}" 
                                       Style="{DynamicResource SettingsLabelTextBlockStyle}"/>
                            <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="1" >
                                <uc:PasswordTextBox x:Name="OldPasswordBox"  FontSize="12" Height="30">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="GotFocus">
                                            <i:InvokeCommandAction Command="{Binding ApplyPasswordBoxFocusedStyleCommand}"  CommandParameter="{Binding ElementName=OldPasswordBox}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="LostFocus">
                                            <i:InvokeCommandAction Command="{Binding ApplyPasswordBoxDefaultStyleCommand}"  CommandParameter="{Binding ElementName=OldPasswordBox}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="Loaded">
                                            <i:InvokeCommandAction Command="{Binding ApplyPasswordBoxDefaultStyleCommand}"  CommandParameter="{Binding ElementName=OldPasswordBox}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </uc:PasswordTextBox>
                                <TextBlock Text="{Binding ExistingMasterPasswordErrorMessage, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Foreground="{DynamicResource PasswordBossRedColor}" FontFamily="{DynamicResource ProximaRegular}"
                                        FontSize="13" TextAlignment="Left" />
                            </StackPanel>

                            <TextBlock Grid.Row="2" Grid.Column="1" Text="{DynamicResource NewMasterPassword}" 
                                       Style="{DynamicResource SettingsLabelTextBlockStyle}"/>
                            <StackPanel Orientation="Vertical" Grid.Row="3" Grid.Column="1">
                                <uc:PasswordTextBox x:Name="SetNewPasswordBox"  FontSize="12" Height="30"  IsEnabled="False" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="GotFocus">
                                            <i:InvokeCommandAction Command="{Binding ApplyPasswordBoxFocusedStyleCommand}"  CommandParameter="{Binding ElementName=SetNewPasswordBox}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="LostFocus">
                                            <i:InvokeCommandAction Command="{Binding ApplyPasswordBoxDefaultStyleCommand}"  CommandParameter="{Binding ElementName=SetNewPasswordBox}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="Loaded">
                                            <i:InvokeCommandAction Command="{Binding ApplyPasswordBoxDefaultStyleCommand}"  CommandParameter="{Binding ElementName=SetNewPasswordBox}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </uc:PasswordTextBox>
                                <TextBlock Text="{Binding NewMasterPasswordErrorMessage, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Foreground="{DynamicResource PasswordBossRedColor}" FontFamily="{DynamicResource ProximaRegular}"
                           FontSize="13" TextAlignment="Left" />
                            </StackPanel>
                            <ProgressBar Grid.Row="5" Grid.Column="1" Height="4" Width="205" Value="{Binding PasswordMeterValue}"
                                         HorizontalAlignment="Left" Style="{DynamicResource ProgressBarSetup2}" />
                            <TextBlock Grid.Row="5" Grid.Column="1" Text="{Binding PasswordMeterText}"
                                       Foreground="{DynamicResource PasswordProgressGrayColor}" FontSize="11"
                                       VerticalAlignment="Center" HorizontalAlignment="Right"
                                       FontFamily="{DynamicResource  ProximaRegular}" FontStyle="Italic" />
                            <TextBlock Grid.Row="7" Grid.Column="1" Text="{DynamicResource PasswordMustContains}"
                                       FontSize="11"
                                       Foreground="{DynamicResource LightGrayTextForegroundColor}" FontFamily="{DynamicResource ProximaLight}"
                                       HorizontalAlignment="Left" Margin="2,0,0,0" />

                            <Grid Grid.Row="8" Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="35" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="35" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <RadioButton x:Name="cbxletters" Grid.Row="0" Grid.Column="0"
                                             GroupName="lettersgroup"
                                             VerticalAlignment="Center"
                                             IsChecked="{Binding LettersChecked}"
                                             Style="{StaticResource SetNewPasswordRadioButtonStyle}"
                                             Content="{DynamicResource Letters}"
                                             IsEnabled="False" HorizontalAlignment="Left"
                                             VerticalContentAlignment="Center" />
                                <RadioButton x:Name="cbxsymbols" Grid.Row="0" Grid.Column="2"
                                             GroupName="symbolsgroup"
                                             VerticalAlignment="Center"
                                             Style="{StaticResource SetNewPasswordRadioButtonStyle}"
                                             Content="{DynamicResource Symbols}"
                                             IsChecked="{Binding SymbolsChecked}"
                                             IsEnabled="False" />
                                <RadioButton x:Name="cbxnumbers" Grid.Row="0" Grid.Column="4"
                                             GroupName="numbersgroup"
                                             VerticalAlignment="Center"
                                             Style="{StaticResource SetNewPasswordRadioButtonStyle}"
                                             Content="{DynamicResource Numbers}"
                                             FontSize="11" FontWeight="SemiBold"
                                             IsChecked="{Binding NumbersChecked}"
                                             IsEnabled="False" />
                                <RadioButton x:Name="cbxcapitals" Grid.Row="1" Grid.Column="0"
                                             GroupName="capitalsgroup"
                                             VerticalAlignment="Center"
                                             Style="{StaticResource SetNewPasswordRadioButtonStyle}"
                                             Content="{DynamicResource Capitals}"
                                             FontSize="11" FontWeight="SemiBold"
                                             IsChecked="{Binding CapitalChecked}"
                                             IsEnabled="False" />
                                <RadioButton x:Name="cbx8characters" Grid.Row="1" Grid.Column="2"
                                              GroupName="lengthgroup"
                                             VerticalAlignment="Center"
                                             Style="{StaticResource SetNewPasswordRadioButtonStyle}"
                                             Content="{DynamicResource EightCharacters}"
                                             FontSize="11" FontWeight="SemiBold"
                                             IsChecked="{Binding CharactersChecked}"
                                             IsEnabled="False" />
                            </Grid>
                            <TextBlock Grid.Row="9" Grid.Column="1" Text="{DynamicResource ConfirmMasterPassword}"  Style="{DynamicResource SettingsLabelTextBlockStyle}"/>
                            <StackPanel Orientation="Vertical" Grid.Row="10" Grid.Column="1">
                                <uc:PasswordTextBox x:Name="ConfirmPasswordBox"  FontSize="12"  Height="30" IsEnabled="False">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="GotFocus">
                                            <i:InvokeCommandAction Command="{Binding ApplyPasswordBoxFocusedStyleCommand}"  CommandParameter="{Binding ElementName=ConfirmPasswordBox}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="LostFocus">
                                            <i:InvokeCommandAction Command="{Binding ApplyPasswordBoxDefaultStyleCommand}"  CommandParameter="{Binding ElementName=ConfirmPasswordBox}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="Loaded">
                                            <i:InvokeCommandAction Command="{Binding ApplyPasswordBoxDefaultStyleCommand}"  CommandParameter="{Binding ElementName=ConfirmPasswordBox}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </uc:PasswordTextBox>
                                <TextBlock Text="{Binding ConfirmMasterPasswordErrorMessage, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Foreground="{DynamicResource PasswordBossRedColor}" FontFamily="{DynamicResource ProximaRegular}"
                                        FontSize="13" TextAlignment="Left" />
                            </StackPanel>

                            <!--<TextBlock Text="{DynamicResource ConfirmMasterPasswordAlertMessage}" Grid.Row="12" Grid.Column="1" FontWeight="Bold" 
                                       FontFamily="{DynamicResource ProximaLight}" FontSize="13" VerticalAlignment="Center"
                                       TextWrapping="Wrap" Foreground="{DynamicResource PasswordBossRedColor}" />-->
                            <StackPanel Grid.Row="14" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                                <Button  Style="{DynamicResource WhiteSettingsButton}"
                                    BorderBrush="{DynamicResource LightGrayTextForegroundColor}" Background="{DynamicResource MainWindowGrayBackgroundColor}"
                                    Command="{Binding MasterPasswordChangeCancelCommand}" CommandParameter="{Binding ElementName=SetNewPasswordBox}"
                                    Content="{DynamicResource Cancel}" Foreground="{DynamicResource PasswordBossBlueHeaderColor}"
                                    FontFamily="{DynamicResource ProximaRegular}" />
                                <Button  Style="{DynamicResource BlueSettingsButton}"  Margin="20 0 0 0"
                                    Content="{DynamicResource Save}" 
                                    Command="{Binding MasterPasswordChangeCommand}" CommandParameter="{Binding ElementName=SetNewPasswordBox}"
                                    FontFamily="{DynamicResource ProximaRegular}" />
                            </StackPanel>


                        </Grid>
                        <!--right side grid for set auto lock limit content-->
                        <Grid x:Name="SetAutoLockGrid" Grid.Column="1"  HorizontalAlignment="Stretch"
                              Visibility="{Binding SetAutoLockVisibility, Converter={StaticResource BoolToVisibility}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="28" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="45" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                            </Grid.RowDefinitions>
                            <!--header row-->
                            <!--<TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                                       Text="{DynamicResource AutoLock}" Foreground="{DynamicResource PasswordBossGreenColor}"
                                       HorizontalAlignment="Left" VerticalAlignment="Bottom" Padding="28,0,0,0"
                                       FontSize="13" FontFamily="{DynamicResource ProximaLight}" />-->
                            <!--first row-->
                            <TextBlock Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Text="{DynamicResource Never}" Foreground="{DynamicResource SettingsSecurityForeground}" FontSize="14"
                                       FontFamily="{DynamicResource ProximaRegular}" />
                            <RadioButton Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right"
                                         VerticalAlignment="Center"
                                         HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                         IsChecked="{Binding AutoLockMinutes, Converter={StaticResource RadioButtonCheckedConverter}, 
                                         ConverterParameter={StaticResource intNever}, UpdateSourceTrigger=PropertyChanged}"
                                         Style="{DynamicResource AutoLockRadioButtonStyle}" />

                            <Border Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource AccountSettingsGrayBackgroundColor}"
                                     />
                            <!--second row-->
                            <TextBlock Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Text="{DynamicResource _10minutes}" Foreground="{DynamicResource SettingsSecurityForeground}" FontSize="14"
                                       FontFamily="{DynamicResource ProximaRegular}" />
                            <RadioButton Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right"
                                         VerticalAlignment="Center"
                                         HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                         IsChecked="{Binding AutoLockMinutes, Converter={StaticResource RadioButtonCheckedConverter}, 
                                         ConverterParameter={StaticResource intTenMinutes}, UpdateSourceTrigger=PropertyChanged}"
                                         Style="{DynamicResource AutoLockRadioButtonStyle}" />
                            <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource AccountSettingsGrayBackgroundColor}"
                                    Margin="0,0,0,-1" />
                            <!--third row-->
                            <TextBlock Grid.Row="3" Grid.Column="1" HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Text="{DynamicResource _30minutes}" Foreground="{DynamicResource SettingsSecurityForeground}" FontSize="14"
                                       FontFamily="{DynamicResource ProximaRegular}" />
                            <RadioButton Grid.Row="3" Grid.Column="1" HorizontalAlignment="Right"
                                         VerticalAlignment="Center"
                                         HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                         IsChecked="{Binding AutoLockMinutes, Converter={StaticResource RadioButtonCheckedConverter}, 
                                         ConverterParameter={StaticResource intThirtyMinutes}, UpdateSourceTrigger=PropertyChanged}"
                                         Style="{DynamicResource AutoLockRadioButtonStyle}" />
                            <Border Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource AccountSettingsGrayBackgroundColor}"
                                    Margin="0,0,0,-2" />

                            <!--fourth row-->
                            <TextBlock Grid.Row="4" Grid.Column="1" HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Text="{DynamicResource _45minutes}" Foreground="{DynamicResource SettingsSecurityForeground}" FontSize="14"
                                       FontFamily="{DynamicResource ProximaRegular}" />
                            <RadioButton Grid.Row="4" Grid.Column="1" HorizontalAlignment="Right"
                                         VerticalAlignment="Center"
                                         HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                         IsChecked="{Binding AutoLockMinutes, Converter={StaticResource RadioButtonCheckedConverter}, 
                                            ConverterParameter={StaticResource intFortyFiveMinutes}, UpdateSourceTrigger=PropertyChanged}"
                                         Style="{DynamicResource AutoLockRadioButtonStyle}" />
                            <Border Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource AccountSettingsGrayBackgroundColor}"
                                    Margin="0,0,0,-3" />

                            <!--fifth row-->
                            <TextBlock Grid.Row="5" Grid.Column="1" HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Text="{DynamicResource _1hour}" Foreground="{DynamicResource SettingsSecurityForeground}" FontSize="14"
                                       FontFamily="{DynamicResource ProximaRegular}" />
                            <RadioButton Grid.Row="5" Grid.Column="1" HorizontalAlignment="Right"
                                         VerticalAlignment="Center"
                                         HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                            IsChecked="{Binding AutoLockMinutes, Converter={StaticResource RadioButtonCheckedConverter}, 
                                            ConverterParameter={StaticResource intSixtyMinutes}, UpdateSourceTrigger=PropertyChanged}"
                                         Style="{DynamicResource AutoLockRadioButtonStyle}" />
                            <Border Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" Height="1"
                                    VerticalAlignment="Bottom" Background="{DynamicResource AccountSettingsGrayBackgroundColor}"
                                    Margin="0,0,0,-4" />

                            <!--sixth row-->
                            <TextBlock Grid.Row="6" Grid.Column="1" HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Text="{DynamicResource _1day}" Foreground="{DynamicResource SettingsSecurityForeground}" FontSize="14"
                                       FontFamily="{DynamicResource ProximaRegular}" />
                            <RadioButton Grid.Row="6" Grid.Column="1" HorizontalAlignment="Right"
                                         VerticalAlignment="Center"
                                         HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                        IsChecked="{Binding AutoLockMinutes, Converter={StaticResource RadioButtonCheckedConverter}, 
                                            ConverterParameter={StaticResource intTwentyFourHours}, UpdateSourceTrigger=PropertyChanged}"
                                         Style="{DynamicResource AutoLockRadioButtonStyle}" />
                            <!--<Border Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="3"
                                                VerticalAlignment="Top" Height="1"
                                                Background="{DynamicResource AccountSettingsGrayBackgroundColor}" Margin="0,2,-2,0"/>-->


                        </Grid>
                        <!--right side grid for Change PIN content-->
                        <Grid x:Name="ChangePINGrid" Grid.Column="1"
                              Visibility="{Binding ChangePINVisibility, Converter={StaticResource BoolToVisibility}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="28" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="28" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="182" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <!--header row-->
                            <TextBlock Grid.Row="0" Grid.Column="1" VerticalAlignment="Bottom"
                                       HorizontalAlignment="Left"
                                       Text="{DynamicResource ExistingPin}"
                                       FontFamily="{DynamicResource ProximaRegular}"
                                       Margin="0,0,0,5"
                                       Foreground="{DynamicResource BlackColor}" FontWeight="Bold" />
                            <!--first row-->
                            <!--<uc:PinUserControl x:Name="ExistingPinUc" Grid.Row="1" Grid.Column="1" 
                                               LostFocusCommand="{Binding ExistingPinLostFocusCommand}"
                                               PinChangedCommand="{Binding ExistingPinChangedCommand}"
                                               VerticalAlignment="Top" 
                                               Pin="{Binding ExistingPin}" >
                            </uc:PinUserControl>-->
                            <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding ExistingPinErrorMessage}" Foreground="{DynamicResource PasswordBossRedColor}" FontFamily="{DynamicResource ProximaRegular}"
                                        FontSize="13" TextAlignment="Left" />
                            <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Vertical" VerticalAlignment="Bottom">
                                <TextBlock VerticalAlignment="Bottom"
                                       HorizontalAlignment="Left"
                                       Text="{DynamicResource NewPin}" 
                                       FontFamily="{DynamicResource ProximaRegular}" 
                                       Foreground="{DynamicResource BlackColor}" FontWeight="Bold" />
                                <TextBlock Grid.Row="2" Grid.Column="1" VerticalAlignment="Bottom"
                                       HorizontalAlignment="Left"
                                       Text="{DynamicResource NumbersOnly}" 
                                       FontSize="11"
                                       FontFamily="{DynamicResource ProximaRegular}" 
                                       Margin="0,0,0,5"
                                       Foreground="{DynamicResource GrayColor}"/>
                            </StackPanel>
                            <!--second row-->
                            <!--<uc:PinUserControl x:Name="NewPinUc" Grid.Row="4" Grid.Column="1" VerticalAlignment="Top" 
                                               Pin="{Binding NewPin}" IsEnabled="{Binding PinChangeEnabled}"
                                               PinChangedCommand="{Binding NewPinChangedCommand}"
                                               LostFocusCommand="{Binding NewPinLostFocusCommand}" />-->
                            <TextBlock Grid.Row="5" Grid.Column="1" Text="{Binding NewPinErrorMessage}" Foreground="{DynamicResource PasswordBossRedColor}" FontFamily="{DynamicResource ProximaRegular}"
                                        FontSize="13" TextAlignment="Left" />
                            <!--third row-->
                            <TextBlock Grid.Row="6" Grid.Column="1" VerticalAlignment="Bottom"
                                       HorizontalAlignment="Left"
                                       Text="{DynamicResource ConfirmPin}" 
                                       FontFamily="{DynamicResource ProximaRegular}" 
                                       Margin="0,0,0,5"
                                       Foreground="{DynamicResource BlackColor}" FontWeight="Bold" />
                            <!--<uc:PinUserControl x:Name="ConfirmPinUc" Grid.Row="7" Grid.Column="1" VerticalAlignment="Top" 
                                               Pin="{Binding ConfirmPin}" IsEnabled="{Binding PinChangeEnabled}"
                                               PinChangedCommand="{Binding ConfirmPinChangedCommand}"
                                               LostFocusCommand="{Binding ConfirmPinLostFocusCommand}" />-->
                            <TextBlock Grid.Row="8" Grid.Column="1" Text="{Binding ConfirmPinErrorMessage}" Foreground="{DynamicResource PasswordBossRedColor}" FontFamily="{DynamicResource ProximaRegular}"
                                        FontSize="13" TextAlignment="Left" />
                            <StackPanel Grid.Row="9" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                                <Button  Style="{DynamicResource roundButton}"
                                    Background="{DynamicResource PasswordBossGreenColor}" HorizontalAlignment="Center"
                                    Height="25" Width="100" Content="{DynamicResource Save}" Foreground="{DynamicResource WhiteColor}"
                                    FontFamily="{DynamicResource ProximaRegular}" Command="{Binding PinChangeCommand}" />
                                <Button  Style="{DynamicResource CancelButton_style}"
                                    Background="Transparent" HorizontalAlignment="Center" Command="{Binding PinChangeCancelCommand}"
                                    Height="25" Width="100" Content="{DynamicResource Cancel}" Foreground="{DynamicResource BlackColor}"
                                    FontFamily="{DynamicResource ProximaRegular}" />
                            </StackPanel>
                            <!--<Button Grid.Row="4" Grid.Column="1" Style="{DynamicResource roundButton}"
                                    Background="{DynamicResource PasswordBossGreenColor}" Command="{Binding ChangeMasterPasswordSubmitCommand}"
                                    Height="30" Content="{DynamicResource Submit}" Foreground="{DynamicResource WhiteColor}"
                                    FontFamily="{DynamicResource ProximaRegular}" />-->

                        </Grid>
                    </Grid>
                </TabItem.Content>
            </TabItem>
            <!--Sync tab design-->
            <TabItem x:Name="tabSync"  Background="{DynamicResource WhiteColor}" Header="{DynamicResource Devices}">

                <TabItem.Content>
                    <!--sync tab design grid-->
                    <Grid x:Name="SyncDeviceGrid" Background="{DynamicResource WhiteColor}" Margin="10 15 27 0" >

                        <telerik:RadGridView ItemsSource="{Binding SyncItemSource,Mode=TwoWay}" 
                                             Style="{DynamicResource RadGridViewStyle}" RowHeight="44"  >
                            <telerik:RadGridView.Columns>
                                <telerik:GridViewDataColumn IsReadOnly="True" DataMemberBinding="{Binding devicename}" Header="{DynamicResource Name}"  HeaderCellStyle="{DynamicResource GridViewHeaderCellStyle}" >
                                    <telerik:GridViewDataColumn.CellTemplate>
                                        <DataTemplate>
                                        <TextBlock Text="{Binding devicename}" Margin="0 0 85 0"
                                          Style="{DynamicResource SettingsSubLabelTextBlockStyle}"  />
                                        </DataTemplate>
                                    </telerik:GridViewDataColumn.CellTemplate>
                                </telerik:GridViewDataColumn>
                                <telerik:GridViewDataColumn IsReadOnly="True" Header="Type" HeaderCellStyle="{DynamicResource GridViewHeaderCellStyle}">
                                    <telerik:GridViewDataColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Source="{DynamicResource windowsBlue}" Stretch="None" VerticalAlignment="Center" Margin="0 0 60 0" />
                                        </DataTemplate>
                                    </telerik:GridViewDataColumn.CellTemplate>
                                </telerik:GridViewDataColumn>
                                <telerik:GridViewDataColumn IsReadOnly="True"  DataMemberBinding="{Binding date,StringFormat=d}"  Header="{DynamicResource DateAdded}" HeaderCellStyle="{DynamicResource GridViewHeaderCellStyle}">
                                    <telerik:GridViewDataColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding date,StringFormat=d}"  Margin="0"
                                           Style="{DynamicResource SettingsSubLabelTextBlockStyle}" Foreground="{DynamicResource AddItemTextForegroundColor}"  />
                                        </DataTemplate>
                                    </telerik:GridViewDataColumn.CellTemplate>
                                </telerik:GridViewDataColumn>
                                <telerik:GridViewDataColumn IsReadOnly="True" Width="*" HeaderCellStyle="{DynamicResource GridViewHeaderCellStyle}" >
                                    <telerik:GridViewDataColumn.CellTemplate>
                                            <DataTemplate>
                                                <Border x:Name="DeleteImageBorder"   Visibility="{Binding DeleteEnable, Converter={StaticResource BoolToVisibility}}" HorizontalAlignment="Right" Margin="0 0 13 0" Background="Transparent" Cursor="Hand">
                                                    <Border Height="26" Width="26" BorderBrush="{DynamicResource LightGrayTextForegroundColor}" >
                                                        <!--<i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                                                <i:InvokeCommandAction       Command="{Binding ElementName=accountsetting_grid, Path=DataContext.SyncDeleteCommand}"
                                          CommandParameter="{Binding InstallationId}"/>
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>-->
                                                        <Border.Style>
                                                            <Style>
                                                                <Setter Property="Border.BorderThickness" Value="0"/>
                                                                <Style.Triggers>
                                                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                                                        <Setter Property="Border.BorderThickness" Value="1"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <Image HorizontalAlignment="Center" VerticalAlignment="Center" Height="20" Width="20" Source="{DynamicResource imgTrashMedium}" RenderOptions.BitmapScalingMode="HighQuality"  ToolTip="{DynamicResource Delete}" />
                                                    </Border>
                                                </Border>                                            
                                        </DataTemplate>
                                    </telerik:GridViewDataColumn.CellTemplate>
                                </telerik:GridViewDataColumn>
                            </telerik:RadGridView.Columns>
                        </telerik:RadGridView>
                        

                        <!--first row--><!--
                            <TextBlock Grid.Row="0" Grid.Column="1" Text="{DynamicResource Name}"
                                       Foreground="{DynamicResource BlackColor}"
                                       FontWeight="Bold"
                                       FontSize="12.8"
                                       FontFamily="{DynamicResource ProximaRegular}" />
                            <TextBlock Grid.Row="0" Grid.Column="2" Text="{DynamicResource DateAdded}"
                                       Foreground="{DynamicResource BlackColor}"
                                       FontWeight="Bold"
                                       FontSize="12.8"
                                       HorizontalAlignment="Left"
                                       FontFamily="{DynamicResource ProximaRegular}" />
                            <Border Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3"
                                    BorderThickness="0,0,0,1" BorderBrush="{DynamicResource AccountSettingsGrayBackgroundColor}" Background="Transparent" />
                            --><!--second row with grid-->
                            <!--<ScrollViewer Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3"
                                          VerticalScrollBarVisibility="Auto"
                                          Template="{DynamicResource CustomScrollViewerTemplate}">--><!--
                            <ListView x:Name="SyncDevicesList" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3"
                                          Margin="0,0,0,-1" BorderThickness="0"
                                          Background="Transparent" HorizontalAlignment="Stretch"
                                          ItemsSource="{Binding Path=SyncItemSource, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                          ItemTemplate="{DynamicResource SyncDeviceListTemplate}"
                                          HorizontalContentAlignment="Stretch"
                                          Template="{DynamicResource SecurityScoreListViewTemplate}"
                                          ItemContainerStyle="{DynamicResource SecureShareListViewStyle}" />-->
                            <!--  -->
                            <!--</ScrollViewer>-->
                        </Grid>
                    <!---->

                </TabItem.Content>
            </TabItem>
            <!--folders tab design-->
            <TabItem   Background="{DynamicResource WhiteColor}" Header="{DynamicResource SettingsFolders}" >
                <TabItem.Content>
                                <telerik:RadTreeView x:Name="treeView" Margin="10 10 0 10"  ItemContainerStyle="{DynamicResource FolderTreeViewItemStyle}" ItemTemplate="{StaticResource HierarchicalDataTemplate}"   ItemsSource="{Binding AccountFoldersItemSource}" >
                        </telerik:RadTreeView>
                </TabItem.Content>
            </TabItem>
            <!--Advanced tab design-->
            <TabItem x:Name="tabAdvanced"  Background="{DynamicResource WhiteColor}" Header="{DynamicResource Advanced}" >
                <!-- Saving on advanced tab after state of buttons has changed. No need for message dialog. -->
                <!--<i:Interaction.Triggers>
                    <i:EventTrigger EventName="LostFocus">
                        <i:InvokeCommandAction Command="{Binding TabLostFocusCommand}" CommandParameter="{Binding ElementName=tabAdvanced}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>-->

                <TabItem.Content>
                    <Grid Margin="10 25 27 10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="22" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="115" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="25" />
                            <RowDefinition Height="30" />
                        </Grid.RowDefinitions>

                        <TextBlock Text="{DynamicResource Settings}" Grid.Column="1"  Style="{DynamicResource SettingsLabelTextBlockStyle}" Margin="0,0,0,6" />

                        <Rectangle Grid.ColumnSpan="4" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="1" Fill="{DynamicResource SettingsTextLableForeground}" />
                        
                                <!-- first row-->
                        <StackPanel Grid.Row="1" Grid.Column="1"  Orientation="Horizontal">
                                    <TextBlock Text="{DynamicResource AutomaticLoginByDefault}" Style="{DynamicResource SettingsSubLabelTextBlockStyle}" Margin="0" />
                            <ContentControl Style="{DynamicResource HelpControl}" VerticalAlignment="Center" Tag="{DynamicResource AutomaticLoginByDefaultInfo}" />
                        </StackPanel>
                                <CheckBox Grid.Row="1" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center"
                                  Style="{DynamicResource settingsToggleButtonStyle}"
                                  VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                  Margin="0,0,-2,0" 
                                  IsChecked="{Binding AutoLogin}"/>

                        <Rectangle Grid.ColumnSpan="4"  Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="1" Fill="{DynamicResource MainWindowBackgroundColor}" />

                                
                        <!--second row-->
                        <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal">
                                    <TextBlock Text="{DynamicResource ClearPassBrowser}" Style="{DynamicResource SettingsSubLabelTextBlockStyle}" Margin="0" />
                            <ContentControl Style="{DynamicResource HelpControl}" VerticalAlignment="Center" Tag="{DynamicResource SettingAdvancedClearSite}" />
                        </StackPanel>

                                <CheckBox Grid.Row="2" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center"
                                  Style="{DynamicResource settingsToggleButtonStyle}"
                                  VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                  Margin="0,0,-2,0" 
                                  IsChecked="{Binding ClearPasswordsFromBrowsers}"/>

                        <!--<TextBlock Grid.Row="2" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="{DynamicResource ProximaRegular}"
                                   Background="Transparent">
                            <Hyperlink TextDecorations="{x:Null}" Foreground="#09CFA6"
                                       FontFamily="{DynamicResource ProximaRegular}" Command="{Binding ClearFromBrowsersCommand}">
                                <TextBlock Text="{DynamicResource Clear}" FontFamily="{DynamicResource ProximaRegular}"/>
                            </Hyperlink>
                        </TextBlock>-->

                        <Rectangle Grid.ColumnSpan="4"  Grid.Row="2" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="1" Fill="{DynamicResource MainWindowBackgroundColor}" />

                        <!--third row-->
                        <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal">
                                    <TextBlock  Text="{DynamicResource DisablePassSaveBrowser}" Style="{DynamicResource SettingsSubLabelTextBlockStyle}" Margin="0"/>
                            <ContentControl Style="{DynamicResource HelpControl}" VerticalAlignment="Center" Tag="{DynamicResource AccountSettingAdvancedHelperText3}" />
                        </StackPanel>
                                <CheckBox Grid.Row="3" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center"
                                  Style="{DynamicResource settingsToggleButtonStyle}"
                                  VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                  Margin="0,0,-2,0" 
                                  IsChecked="{Binding TurnOffPassSaving}"/>
                        <Rectangle Grid.ColumnSpan="4"  Grid.Row="3" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="1" Fill="{DynamicResource MainWindowBackgroundColor}" />

                                <!--fourth row-->
                        <StackPanel Orientation="Horizontal" Grid.Row="4" Grid.Column="1" >
                                    <TextBlock Text="{DynamicResource DisableStatusMessages}" Style="{DynamicResource SettingsSubLabelTextBlockStyle}" Margin="0"/>
                            <ContentControl Style="{DynamicResource HelpControl}" VerticalAlignment="Center" Tag="{DynamicResource AccountSettingAdvancedHelperText4}" />
                        </StackPanel>

                                <CheckBox Grid.Row="4" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center"
                                  Style="{DynamicResource settingsToggleButtonStyle}"
                                  VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                  Margin="0,0,-2,0" 
                                  IsChecked="{Binding DisableStatusMessages}"/>
                                <Rectangle Grid.ColumnSpan="4"  Grid.Row="4" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="1" Fill="{DynamicResource MainWindowBackgroundColor}" />

                                <!--fifth row-->
                        <StackPanel Orientation="Horizontal" Grid.Row="5" Grid.Column="1">
                                    <TextBlock Text="{DynamicResource AutoStoreFormFillData}" Style="{DynamicResource SettingsSubLabelTextBlockStyle}" Margin="0"/>
                            <ContentControl Style="{DynamicResource HelpControl}" VerticalAlignment="Center" Tag="{DynamicResource AutoStoreFormFillDataInfo}"/>
                        </StackPanel>
                        <CheckBox Grid.Row="5" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center"
                                  Style="{DynamicResource settingsToggleButtonStyle}"
                                  VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                  Margin="0,0,-2,0" 
                                  IsChecked="{Binding AutoStoreData}"/>
                                <Rectangle Grid.ColumnSpan="4"  Grid.Row="5" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="1" Fill="{DynamicResource MainWindowBackgroundColor}" />

                                <!--sisth row-->
                        <StackPanel Orientation="Horizontal" Grid.Row="6" Grid.Column="1" >
                                    <TextBlock Text="{DynamicResource ClearSitesAutoSave}" Style="{DynamicResource SettingsSubLabelTextBlockStyle}" Margin="0"/>
                            <ContentControl Style="{DynamicResource HelpControl}" VerticalAlignment="Center" Tag="{DynamicResource ClearSitesAutoSaveInfo}" />
                        </StackPanel>
                                <TextBlock Grid.Row="6" Grid.Column="2"  VerticalAlignment="Center" FontFamily="{DynamicResource ProximaRegular}"
                                   Background="Transparent">
                            <Hyperlink TextDecorations="{x:Null}" Foreground="{DynamicResource SettingsGreenColor}"
                                       FontFamily="{DynamicResource ProximaRegular}" Command="{Binding ClearSitesAutoSaveCommand}">
                                <TextBlock Text="{DynamicResource Clear}" FontSize="13" FontFamily="{DynamicResource ProximaRegular}" />
                            </Hyperlink>
                        </TextBlock>
                                <Rectangle Grid.ColumnSpan="4"  Grid.Row="6" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="1" Fill="{DynamicResource MainWindowBackgroundColor}" />

                                <!--seventh row-->
                        <StackPanel Grid.Row="7" Grid.Column="1" Orientation="Horizontal">
                                    <TextBlock  Text="{DynamicResource RequireMasterPasswordForAllFormFilling}" Style="{DynamicResource SettingsSubLabelTextBlockStyle}" Margin="0"/>
                            <ContentControl Style="{DynamicResource HelpControl}" VerticalAlignment="Center" Tag="{DynamicResource RequireMasterPasswordForAllFormFillingInfo}" />
                        </StackPanel>

                                <CheckBox Grid.Row="7" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center"
                                  Style="{DynamicResource settingsToggleButtonStyle}"
                                  VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                  Margin="0,0,-2,0" 
                                  IsChecked="{Binding RequireMasterPasswordForAll}"/>
                        <Rectangle Grid.ColumnSpan="4"  Grid.Row="7" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="1" Fill="{DynamicResource MainWindowBackgroundColor}" />

                    </Grid>
                </TabItem.Content>
            </TabItem>
                    <TabItem  Background="{DynamicResource WhiteColor}" Header="{DynamicResource SettingsDisableList}" >
                        <Grid  Background="{DynamicResource WhiteColor}" Margin="0 15 27 25" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                               <RowDefinition Height="*" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>

                            <TextBlock Text="{DynamicResource SettingsDisableListBody}" Margin="22 0 0 20"  
                                          Style="{DynamicResource SettingsSubLabelTextBlockStyle}" FontSize="15" />
                            
                            <telerik:RadGridView Grid.Row="1" ItemsSource="{Binding DisabledItemSource,Mode=TwoWay}" Style="{DynamicResource RadGridViewStyle}" RowHeight="35"  >
                                <telerik:RadGridView.Columns>
                                    <telerik:GridViewDataColumn IsReadOnly="True" Width="347" DataMemberBinding="{Binding devicename}" Header="{DynamicResource SettingsSite}"  HeaderCellStyle="{DynamicResource GridViewHeaderCellStyle}" >
                                        <telerik:GridViewDataColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding sitename}" HorizontalAlignment="Left" Margin="0" FontSize="13"
                                          Style="{DynamicResource SettingsSubLabelTextBlockStyle}"  />
                                            </DataTemplate>
                                        </telerik:GridViewDataColumn.CellTemplate>
                                    </telerik:GridViewDataColumn>
                                    <telerik:GridViewDataColumn IsReadOnly="True" Header="Type" Width="155" HeaderCellStyle="{DynamicResource GridViewHeaderCellStyle}">
                                        <telerik:GridViewDataColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding type}"  HorizontalAlignment="Left" Margin="0" FontSize="13"
                                          Style="{DynamicResource SettingsSubLabelTextBlockStyle}"  />
                                            </DataTemplate>
                                        </telerik:GridViewDataColumn.CellTemplate>
                                    </telerik:GridViewDataColumn>
                                    <telerik:GridViewDataColumn IsReadOnly="True"  DataMemberBinding="{Binding date,StringFormat=d}"  Header="{DynamicResource DateAdded}" HeaderCellStyle="{DynamicResource GridViewHeaderCellStyle}">
                                        <telerik:GridViewDataColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding date,StringFormat=d}"  Margin="0"  FontSize="13"
                                           Style="{DynamicResource SettingsSubLabelTextBlockStyle}" Foreground="{DynamicResource AddItemTextForegroundColor}"  />
                                            </DataTemplate>
                                        </telerik:GridViewDataColumn.CellTemplate>
                                    </telerik:GridViewDataColumn>
                                    <telerik:GridViewDataColumn IsReadOnly="True" Width="*" HeaderCellStyle="{DynamicResource GridViewHeaderCellStyle}" >
                                        <telerik:GridViewDataColumn.CellTemplate>
                                            <DataTemplate>
                                                <Border x:Name="DeleteImageBorder" HorizontalAlignment="Right" Margin="0 0 13 0" Background="Transparent" Cursor="Hand">
                                                    <Border Height="26" Width="26" BorderBrush="{DynamicResource LightGrayTextForegroundColor}" >
                                                        <!--<i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                                                <i:InvokeCommandAction Command="{Binding DataContext.DeleteItemCommand,RelativeSource={RelativeSource FindAncestor,  AncestorType={x:Type telerik:RadTreeView}}}" CommandParameter="{Binding Id}" />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>-->
                                                        <Border.Style>
                                                            <Style>
                                                                <Setter Property="Border.BorderThickness" Value="0"/>
                                                                <Style.Triggers>
                                                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                                                        <Setter Property="Border.BorderThickness" Value="1"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <Image HorizontalAlignment="Center" VerticalAlignment="Center" Height="20" Width="20" Source="{DynamicResource imgTrashMedium}" RenderOptions.BitmapScalingMode="HighQuality"  ToolTip="{DynamicResource Delete}" />
                                                    </Border>
                                                </Border>
                                                
                                            </DataTemplate>
                                        </telerik:GridViewDataColumn.CellTemplate>
                                    </telerik:GridViewDataColumn>
                                </telerik:RadGridView.Columns>
                            </telerik:RadGridView>

                            <Border HorizontalAlignment="Stretch" Height="1" Margin="0 10 0 33" Grid.Row="2"
                                    VerticalAlignment="Center" Background="{DynamicResource AccountSettingsGrayBackgroundColor}"  />

                            <Button  Command="{Binding SaveTabGeneralDataCommand}"  Grid.Row="3" 
                                Content="{DynamicResource Add}" VerticalAlignment="Center" Style="{DynamicResource BlueSettingsButton}" />

                            
                        </Grid>
            </TabItem>
        </TabControl>
        <uc:CustomMessageBoxUserControl 
            MessageBoxDialogVisibility="{Binding MessageBoxAccountSettingsChangedVisibility}" 
            CustomMessageBoxType="Confirmation" 
            MessageBoxDialogCancelButtonText="{DynamicResource Discard}" 
            MessageBoxDialogConfirmButtonText="{DynamicResource Save}" 
            MessageBoxDialogHeaderText="{DynamicResource SettingsChanged}"
            MessageBoxDialogText="{DynamicResource SettingsChangedConfirmText}"
            MessageBoxDialogConfirmCommand="{Binding MessageBoxAccountSettingsChangedConfirmCommand}"
            MessageBoxDialogCancelCommand="{Binding MessageBoxAccountSettingsChangedCancelCommand}"
            />

        <uc:CustomMessageBoxUserControl 
                                                MessageBoxDialogVisibility="{Binding MessageBoxMasterPasswordChangedVisibility}" 
                                                CustomMessageBoxType="Info" 
                                                MessageBoxDialogOkButtonText="{DynamicResource OK}"
                                                MessageBoxDialogHeaderText="{DynamicResource MasterPassChangedTitle}" 
                                                MessageBoxDialogText="{DynamicResource MasterPassChangedText}"
                                                MessageBoxDialogOkCommand="{Binding MessageBoxMasterPasswordChangedOKCommand}"
                                                />
    </Grid>
</UserControl>
